{
  "applicationName": "TRADEPANEL",
  "nodes": [
    {
      "operationName": "[gen-reading fact schema]",
      "operationDescription": "reading fact schema",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\n\\nref_db_url = dbutils.secrets.get('tp_dpf2cdl', 'refDBjdbcURL')\\nrefDBname = dbutils.secrets.get('tp_dpf2cdl', 'refDBname')\\nrefDBuser = dbutils.secrets.get('tp_dpf2cdl', 'refDBuser')\\nrefDBpwd = dbutils.secrets.get('tp_dpf2cdl', 'refDBpwd')\\n\\ndf_fct_schema = spark.read.format(\\\"jdbc\\\").option(\\\"driver\\\", \\\"org.postgresql.Driver\\\").option(\\\"url\\\", f\\\"{ref_db_url}/{refDBname}\\\").option(\\\"dbtable\\\", \\\"adwgp_mm.mm_tp_fct_schema\\\").option(\\\"user\\\", f\\\"{refDBuser}\\\").option(\\\"password\\\", f\\\"{refDBpwd}\\\").option(\\\"ssl\\\", True).option(\\\"sslmode\\\", \\\"require\\\").option(\\\"sslfactory\\\",\\\"org.postgresql.ssl.NonValidatingFactory\\\").load()\\n    \\ndf_output_dict['df_fct_schema'] = df_fct_schema\\ndict_all_dfs['df_fct_schema'] = {\\\"df_object\\\" :df_fct_schema}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_img\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_schema\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[gen-typecasting the columns]",
      "predecessorName": "[gen-reading fact schema]",
      "jsonSpecification": "{\r\n  \"active\": \"true\",\r\n  \"separateSparkSession\": \"false\",\r\n  \"milestone\": \"false\",\r\n  \"saveOutputDfsToTempTable\": \"false\",\r\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf_fct_img= dict_all_dfs['df_fct_img'][\\\"df_object\\\"]\\ndf_fct_schema = dict_all_dfs['df_fct_schema'][\\\"df_object\\\"]\\n\\nfrom pyspark.sql.functions import col\\n\\nlkp_cols = df_fct_img.columns\\nsdim_cols = df_fct_schema.columns\\n\\nfrom pyspark.sql.functions import lit\\nadd_cols = list(set(sdim_cols)-set(lkp_cols))\\nfor i in add_cols:\\n  df_fct_img = df_fct_img.withColumn(i,lit(None).cast('string'))\\n\\ndf_fct_img = df_fct_img.select(*sdim_cols)\\ncols = df_fct_img.columns\\n\\nfor j in cols:\\n  df_fct_img = df_fct_img.withColumn(j, col(j).cast(dict(df_fct_schema.dtypes)[j]))\\n\\ndict_all_dfs['df_fct_img'] = {\\\"df_object\\\" :df_fct_img}\\ndf_output_dict['df_fct_img'] = df_fct_img\",\r\n  \"inputDataframes\": [\r\n    {\r\n      \"name\": \"df_fct_img\"\r\n    },\r\n    {\r\n      \"name\": \"df_fct_schema\"\r\n    }\r\n  ],\r\n  \"outputDataframes\": [\r\n    {\r\n      \"name\": \"df_fct_img\",\r\n      \"cache\": \"materialize\"\r\n    }\r\n  ]\r\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] on mm_tp_wk_fct",
      "predecessorName": "[gen-typecasting the columns]",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_img\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"round(srce_sys_id,0)\",\n      \"columnName\": \"part_srce_sys_id\"\n    },\n    {\n      \"transformation\": \"round(cntrt_id,0)\",\n      \"columnName\": \"part_cntrt_id\"\n    },\n    {\n      \"transformation\": \"prod_prttn_code\",\n      \"columnName\": \"part_prod_prttn_code\"\n    },\n    {\n      \"transformation\": \"mm_time_perd_end_date\",\n      \"columnName\": \"part_mm_time_perd_end_date\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_<<TIME_PERD_CLASS_CODE>>_img\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "MM_tp<<time_perd_class_code>>fct to publish",
      "predecessorName": "[CET] on mm_tp_wk_fct",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"fileType\": \"parquet\",\n  \"inferSchema\": \"false\",\n  \"path\": \"<@@PATH1@@>MM_TP_<<TIME_PERD_CLASS_CODE>>_FCT/part_srce_sys_id=<<SRCE_SYS_ID>>/part_cntrt=<<CNTRT_ID>>/\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"exclusive\",\n  \"createIfNotExist\": \"true\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_img_latest\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": false
    },
    {
      "operationName": "Cast and Complement Target",
      "predecessorName": "MM_tp<<time_perd_class_code>>fct to publish",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf_fct_img_latest= dict_all_dfs['df_fct_img_latest'][\\\"df_object\\\"]\\ndf_fct_schema = dict_all_dfs['df_fct_schema'][\\\"df_object\\\"]\\n\\nfrom pyspark.sql.functions import col\\n\\nlkp_cols = df_fct_img_latest.columns\\nsdim_cols = df_fct_schema.columns\\n\\nfrom pyspark.sql.functions import lit\\nadd_cols = list(set(sdim_cols)-set(lkp_cols))\\nfor i in add_cols:\\n  df_fct_img_latest = df_fct_img_latest.withColumn(i,lit(None).cast('string'))\\n\\ndf_fct_img_latest = df_fct_img_latest.select(*sdim_cols)\\ncols = df_fct_img_latest.columns\\n\\nfor j in cols:\\n  df_fct_img_latest = df_fct_img_latest.withColumn(j, col(j).cast(dict(df_fct_schema.dtypes)[j]))\\n\\ndict_all_dfs['df_fct_img_latest'] = {\\\"df_object\\\" :df_fct_img_latest}\\ndf_output_dict['df_fct_img_latest'] = df_fct_img_latest\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_img_latest\"\n    },\n    {\n      \"name\": \"df_fct_schema\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_img_latest\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "merges latest with processed data",
      "predecessorName": "Cast and Complement Target",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"referenceDataframe\": \"df_fct_<<TIME_PERD_CLASS_CODE>>_img_latest\",\n  \"distinct\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_<<TIME_PERD_CLASS_CODE>>_img_latest\"\n    },\n    {\n      \"name\": \"df_fct_<<TIME_PERD_CLASS_CODE>>_img\"\n    }\n  ],\n  \"logicalKey\": [\n    \"srce_sys_id\",\n    \"cntrt_id\",\n    \"prod_skid\",\n    \"time_perd_id\",\n    \"mkt_skid\"\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_<<TIME_PERD_CLASS_CODE>>_img_final\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Merger",
      "overridableIndicator": false
    },
    {
      "operationName": "merges latest with processed data - 1.1",
      "predecessorName": "merges latest with processed data",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"referenceDataframe\": \"df_fct_img_latest\",\n  \"distinct\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_img_latest\"\n    },\n    {\n      \"name\": \"df_fct_img\"\n    }\n  ],\n  \"logicalKey\": [\n    \"srce_sys_id\",\n    \"cntrt_id\",\n    \"prod_skid\",\n    \"time_perd_id\",\n    \"mkt_skid\"\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_img_final\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Merger",
      "overridableIndicator": false
    },
    {
      "operationName": "CET - Add partition columns",
      "predecessorName": "merges latest with processed data - 1.1",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_img_final\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"round(srce_sys_id,0)\",\n      \"columnName\": \"part_srce_sys_id\"\n    },\n    {\n      \"transformation\": \"round(cntrt_id,0)\",\n      \"columnName\": \"part_cntrt_id\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_img_final\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "CET - Add partition columns for staging fact",
      "predecessorName": "CET - Add partition columns",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_img\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"round(srce_sys_id,0)\",\n      \"columnName\": \"part_srce_sys_id\"\n    },\n    {\n      \"transformation\": \"round(cntrt_id,0)\",\n      \"columnName\": \"part_cntrt_id\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_img\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "[FP] on mm_tp_wk_fct",
      "predecessorName": "CET - Add partition columns for staging fact",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"semaphoreOption\": \"already acquired\",\n  \"format\": \"parquet\",\n  \"disableSuccessFile\": \"false\",\n  \"shouldDeleteSuccess\": \"false\",\n  \"useApiV2.5\": \"false\",\n  \"path\": \"<@@PATH1@@>MM_TP_<<TIME_PERD_CLASS_CODE>>_FCT\",\n  \"mode\": \"dynamicoverwrite\",\n  \"compression\": \"None\",\n  \"repartitionByColumn\": [],\n  \"columnToDrop\": [],\n  \"partitionByColumn\": [\n    \"part_srce_sys_id\",\n    \"part_cntrt_id\",\n    \"part_prod_prttn_code\",\n    \"part_mm_time_perd_end_date\"\n  ],\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_img_final\"\n    }\n  ]\n}",
      "operationVersionName": "FilePublisher",
      "overridableIndicator": false
    },
    {
      "operationName": "[FP] on mm_tp_wk_fct - DDAPI",
      "predecessorName": "[FP] on mm_tp_wk_fct",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"semaphoreOption\": \"already acquired\",\n  \"format\": \"parquet\",\n  \"disableSuccessFile\": \"false\",\n  \"shouldDeleteSuccess\": \"false\",\n  \"useApiV2.5\": \"true\",\n  \"hidePublication\": \"false\",\n  \"outputPhysicalTable\": \"<@@PATH1@@>MM_TP_<<TIME_PERD_CLASS_CODE>>_FCT/\",\n  \"owningApplicationName\": {\n    \"applicationName\": \"Trade Panel Light Refined\"\n  },\n  \"dataProviderCode\": \"TP\",\n  \"secureGroupKey\": \"<<SEC_GRP_KEY>>\",\n  \"postPartitionsRowCount\": \"true\",\n  \"mode\": \"dynamicoverwrite\",\n  \"compression\": \"None\",\n  \"repartitionByColumn\": [],\n  \"columnToDrop\": [],\n  \"partitionByColumn\": [\n    \"part_srce_sys_id\",\n    \"part_cntrt_id\",\n    \"part_prod_prttn_code\",\n    \"part_mm_time_perd_end_date\"\n  ],\n  \"partitionAdditionalInformations\": [\n    {}\n  ],\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_img_final\"\n    }\n  ]\n}",
      "operationVersionName": "FilePublisher",
      "overridableIndicator": false
    },
    {
      "operationName": "[FP] - Publish Staging fact",
      "predecessorName": "[FP] on mm_tp_wk_fct - DDAPI",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"semaphoreOption\": \"exclusive\",\n  \"format\": \"parquet\",\n  \"disableSuccessFile\": \"false\",\n  \"shouldDeleteSuccess\": \"false\",\n  \"useApiV2.5\": \"false\",\n  \"path\": \"<@@PATH1@@>MM_TP_STGNG_FCT/part_srce_sys_id=<<SRCE_SYS_ID>>/part_cntrt_id=<<CNTRT_ID>>/\",\n  \"mode\": \"dynamicoverwrite\",\n  \"compression\": \"None\",\n  \"coalesceByNumber\": 1,\n  \"repartitionByColumn\": [],\n  \"columnToDrop\": [\n    \"part_srce_sys_id\",\n    \"part_cntrt_id\"\n  ],\n  \"partitionByColumn\": [],\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_img\"\n    }\n  ]\n}",
      "operationVersionName": "FilePublisher",
      "overridableIndicator": false
    },
    {
      "operationName": "release semaphore for mm_tp_fct",
      "predecessorName": "[FP] - Publish Staging fact",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"actionType\": \"release\",\n  \"itemType\": \"path\",\n  \"itemPath\": \"/mnt/<@@PATH1@@>MM_TP_STGNG_FCT/part_srce_sys_id=<<SRCE_SYS_ID>>/part_cntrt_id=<<CNTRT_ID>>/\"\n}",
      "operationVersionName": "SemaphoreOperation",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] on mm_tp_mth_fct",
      "predecessorName": "release semaphore for mm_tp_fct",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_m_rcam\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"round(srce_sys_id,0)\",\n      \"columnName\": \"part_srce_sys_id\"\n    },\n    {\n      \"transformation\": \"round(cntrt_id,0)\",\n      \"columnName\": \"part_cntrt_id\"\n    },\n    {\n      \"transformation\": \"prod_prttn_code\",\n      \"columnName\": \"part_prod_prttn_code\"\n    },\n    {\n      \"transformation\": \"mm_time_perd_end_date\",\n      \"columnName\": \"part_mm_time_perd_end_date\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_m_rcam\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "[FP] on mm_tp_mth_fct",
      "predecessorName": "[CET] on mm_tp_mth_fct",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"semaphoreOption\": \"exclusive\",\n  \"format\": \"parquet\",\n  \"disableSuccessFile\": \"false\",\n  \"shouldDeleteSuccess\": \"false\",\n  \"useApiV2.5\": \"false\",\n  \"path\": \"<@@PATH1@@>/MM_TP_MTH_FCT\",\n  \"mode\": \"dynamicoverwrite\",\n  \"compression\": \"None\",\n  \"repartitionByColumn\": [],\n  \"columnToDrop\": [],\n  \"partitionByColumn\": [\n    \"part_srce_sys_id\",\n    \"part_cntrt_id\",\n    \"part_prod_prttn_code\",\n    \"part_mm_time_perd_end_date\"\n  ],\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_m_rcam\"\n    }\n  ]\n}",
      "operationVersionName": "FilePublisher",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] on mm_tp_bimth_fct",
      "predecessorName": "[FP] on mm_tp_mth_fct",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_bm_rcam\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"round(srce_sys_id,0)\",\n      \"columnName\": \"part_srce_sys_id\"\n    },\n    {\n      \"transformation\": \"round(cntrt_id,0)\",\n      \"columnName\": \"part_cntrt_id\"\n    },\n    {\n      \"transformation\": \"prod_prttn_code\",\n      \"columnName\": \"part_prod_prttn_code\"\n    },\n    {\n      \"transformation\": \"mm_time_perd_end_date\",\n      \"columnName\": \"part_mm_time_perd_end_date\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_bm_rcam\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "[FP] on mm_tp_bimth_fct",
      "predecessorName": "[CET] on mm_tp_bimth_fct",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"semaphoreOption\": \"none\",\n  \"format\": \"parquet\",\n  \"disableSuccessFile\": \"false\",\n  \"shouldDeleteSuccess\": \"false\",\n  \"useApiV2.5\": \"false\",\n  \"path\": \"<@@PATH2@@>/MM_TP_BIMTH_FCT\",\n  \"mode\": \"dynamicoverwrite\",\n  \"compression\": \"None\",\n  \"repartitionByColumn\": [],\n  \"columnToDrop\": [],\n  \"partitionByColumn\": [\n    \"part_srce_sys_id\",\n    \"part_cntrt_id\",\n    \"part_prod_prttn_code\",\n    \"part_mm_time_perd_end_date\"\n  ],\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_bm_rcam\"\n    }\n  ]\n}",
      "operationVersionName": "FilePublisher",
      "overridableIndicator": false
    }
  ],
  "graphName": "T1_SFF_Atomic_Fact_Publication"
}