{
  "applicationName": "TURBINE_INTERNAL",
  "jsonSpecification": "{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"title\": \" Three Files Contract Main Chain Overloading\",\r\n    \"description\": \"Overloading parameters in EXCHG_RATE_FCT_VW\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n \r\n         \"IN_FILE_PATH\": {\r\n            \"title\": \"IN_FILE_PATH\",\r\n            \"description\": \"Input File Path\",\r\n            \"default\": \"unrefined/cloudpanel-test-unref/test/three_files/src/\",\r\n            \"type\": \"string\"\r\n        }         \r\n   },\r\n    \"required\": [],\r\n    \"configurable\": [\"IN_FILE_PATH\"]\r\n}",
  "nodes": [
    {
      "operationName": "[File Load] MM_TIME_PERD_FDIM_VW",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"fileType\": \"parquet\",\n  \"inferSchema\": \"false\",\n  \"path\": \"<@@PATH3@@>MM_TIME_PERD_FDIM_VW/\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"shared\",\n  \"createIfNotExist\": \"true\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_time_perd_fdim\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": true
    },
    {
      "operationName": "release MM_TIME_PERD_FDIM_VW",
      "predecessorName": "[File Load] MM_TIME_PERD_FDIM_VW",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"actionType\": \"release\",\n  \"itemType\": \"path\",\n  \"itemPath\": \"/mnt/<@@PATH3@@>MM_TIME_PERD_FDIM_VW/\"\n}",
      "operationVersionName": "SemaphoreOperation",
      "overridableIndicator": false
    },
    {
      "operationName": "[File Load] ",
      "predecessorName": "release MM_TIME_PERD_FDIM_VW",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"fileType\": \"parquet\",\n  \"path\": \"/EXCHG_RATE_FCT/\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"none\",\n  \"createIfNotExist\": \"false\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_exchg_rate_fct\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": false
    },
    {
      "operationName": "[SQL Syn] EXCHG_RATE_FCT_VW",
      "predecessorName": "[File Load] ",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"sqlQuery\": \"SELECT \\n  srce_iso_crncy_code, \\n  time_perd_id, \\n  CASE \\n    WHEN MAX(full_mth_ind) = 'Y' THEN AVG(exchg_rate) --get exchange rate average (for N full months)\\n    WHEN MAX(mth_end_date_ind) = 'Y' THEN MIN(exchg_rate) --get exchange rate from ralated month (MIN to avoid DQ issue in case od duplicated data) \\n    ELSE SUM(exchg_rate*day_qty/tot_day_qty) --get weigth exchange rate average \\n  END AS exchg_rate,\\n    CASE \\n    WHEN MAX(full_mth_ind) = 'Y' THEN AVG(const_exchg_rate) --get constant exchange rate average (for N full months)\\n    WHEN MAX(mth_end_date_ind) = 'Y' THEN MIN(const_exchg_rate) --get constant exchange rate from ralated month (MIN to avoid DQ issue in case od duplicated data) \\n    ELSE SUM(const_exchg_rate*day_qty/tot_day_qty) --get weigth constant exchange rate average \\n  END AS const_exchg_rate\\nFROM \\n(SELECT \\n    time_perd_start_date, \\n    time_perd_end_date,\\n    time_perd_id, \\n    time_perd_class_code,\\n    exchg_rate,\\n    const_exchg_rate,\\n    NVL2(a.mth_end_date, 'Y', 'N') as mth_end_date_ind, -- check if end of month is specified in calendar \\n    DATEDIFF(to_date(a.time_perd_end_date,'yyyy-MM-dd'),to_date(a.time_perd_start_date,'yyyy-MM-dd')) as tot_day_qty, --get total number of days  \\n    DATEDIFF(LEAST(to_date(a.time_perd_end_date,'yyyy-MM-dd'),LAST_DAY(to_date(e.exchg_rate_end_date,'yyyy-MM-dd'))), GREATEST(to_date(a.time_perd_start_date,'yyyy-MM-dd'), TRUNC(to_date(e.exchg_rate_end_date,'yyyy-MM-dd'), 'MM'))) day_qty, --count number of days from period common with given month\\n    DECODE(to_date(a.time_perd_start_date,'yyyy-MM-dd'), TRUNC(to_date(a.time_perd_start_date,'yyyy-MM-dd'), 'MM'), DECODE(to_date(a.time_perd_end_date,'yyyy-MM-dd'), LAST_DAY(to_date(a.time_perd_end_date,'yyyy-MM-dd')), 'Y', 'N'), 'N') full_mth_ind, --check if period contains whole month(s) (end date equal to end of month, start date equal to begining of month) \\n    e.srce_iso_crncy_code, \\n    e.exchg_rate_end_date\\n  FROM parquet.`/mnt/unrefined/adw/MM_TIME_PERD_FDIM_VW/` a \\n  JOIN (\\n    SELECT \\n srce_iso_crncy_code3 AS srce_iso_crncy_code,\\n LAST_DAY(exchg_rate_end_date3) AS exchg_rate_end_date,\\n exchg_rate3 AS exchg_rate,\\n exchg_rate5 AS const_exchg_rate\\n  FROM (SELECT DENSE_RANK() OVER(PARTITION BY cal_skid3, crncy_srce_skid3, srce_iso_crncy_code3, crncy_srce_skid5, srce_iso_crncy_code5 ORDER BY time_eff_dif ASC, time_end_dif ASC, cal_skid5 desc) AS time_accry,\\n               type_3_5.*\\n          FROM (SELECT (type_5.exchg_rate_end_date5 - type_3.exchg_rate_end_date3) AS time_end_dif,\\n                       (type_3.exchg_rate_eff_date3 - type_5.exchg_rate_eff_date5) AS time_eff_dif,\\n                       type_3.*,\\n                       type_5.*\\n                  FROM (SELECT cal_skid            AS cal_skid3,\\n                               crncy_srce_skid     AS crncy_srce_skid3,\\n                               exchg_rate_eff_date AS exchg_rate_eff_date3,\\n                               exchg_rate_end_date AS exchg_rate_end_date3,\\n                               exchg_rate          AS exchg_rate3,\\n                               srce_iso_crncy_code AS srce_iso_crncy_code3\\n                          FROM parquet.`/mnt/unrefined/cloudpanel-test-unref/Three Files Contract/Tables/EXCHG_RATE_FCT/` a\\n                         WHERE trgt_iso_crncy_code = 'USD'\\n                               AND curr_ind = 'Y'\\n                               AND exchg_rate_type_id = 3) type_3\\n                  LEFT JOIN (SELECT cal_skid            AS cal_skid5,\\n                                   crncy_srce_skid     AS crncy_srce_skid5,\\n                                   exchg_rate_eff_date AS exchg_rate_eff_date5,\\n                                   exchg_rate_end_date AS exchg_rate_end_date5,\\n                                   exchg_rate          AS exchg_rate5,\\n                                   srce_iso_crncy_code AS srce_iso_crncy_code5\\n                              FROM parquet.`/mnt/unrefined/cloudpanel-test-unref/Three Files Contract/Tables/EXCHG_RATE_FCT/` a\\n                             WHERE trgt_iso_crncy_code = 'USD'\\n                                   AND curr_ind = 'Y'\\n                                   AND exchg_rate_type_id = 5) type_5\\n                    ON type_3.exchg_rate_end_date3 BETWEEN\\n                       type_5.exchg_rate_eff_date5 AND\\n                       type_5.exchg_rate_end_date5\\n                       AND type_3.crncy_srce_skid3 = type_5.crncy_srce_skid5) type_3_5)\\n WHERE time_accry = 1\\n  ) e\\n    ON (a.mth_end_date IS NULL AND e.exchg_rate_end_date BETWEEN A.time_perd_start_date AND LAST_DAY(A.time_perd_end_date)) --to join all rates in period\\n    OR (a.mth_end_date IS NOT NULL AND e.exchg_rate_end_date = a.mth_end_date) --to join with rate if end of month related to period specified in calendar\\n) A\\nGROUP BY srce_iso_crncy_code, time_perd_id\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_time_perd_fdim\",\n      \"alias\": \"df_time_perd_fdim\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_exchg_rate_fct_vw\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "SQLSyntax",
      "overridableIndicator": true
    }
  ],
  "graphName": "exchng_rate_fct_vw - v1"
}