{
  "applicationName": "TURBINE_INTERNAL",
  "nodes": [
    {
      "operationName": "df_dummy",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"manualSchema\": \"true\",\n  \"transformations\": [\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"test\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_dummy\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "CreateSchema",
      "overridableIndicator": false
    },
    {
      "operationName": "[Gen] [File Load] MM_TOT_CNTRY_CNTRT_ASSOC_VW",
      "predecessorName": "df_dummy",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\n\\nref_db_url = 'jdbc:postgresql://server-postgredb-cloudpanel-prod-1.postgres.database.azure.com:5432'\\nrefDBname = 'cloudpanel-db'\\nrefDBuser = 'pgadmin@server-postgredb-cloudpanel-prod-1'\\nrefDBpwd = 'h3oYspL$cOOwiF$G'\\n\\ndf_mm_tot_cntry_cntrt_assoc_vw = spark.read.format(\\\"parquet\\\").load(\\\"/mnt/refined/NNIT/tradepanel/prod-tp-refined/MM_TOT_CNTRY_CNTRT_ASSOC_VW\\\")\\n\\n\\ndf_output_dict['df_mm_tot_cntry_cntrt_assoc_vw'] = df_mm_tot_cntry_cntrt_assoc_vw\\ndict_all_dfs['df_mm_tot_cntry_cntrt_assoc_vw'] = {\\\"df_object\\\" :df_mm_tot_cntry_cntrt_assoc_vw}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_dummy\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tot_cntry_cntrt_assoc_vw\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[File Load] MM_TOT_CNTRY_CNTRT_ASSOC_VW",
      "predecessorName": "[Gen] [File Load] MM_TOT_CNTRY_CNTRT_ASSOC_VW",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"fileType\": \"parquet\",\n  \"inferSchema\": \"false\",\n  \"path\": \"<@@PATH1@@>MM_TOT_CNTRY_CNTRT_ASSOC_VW/\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"exclusive\",\n  \"createIfNotExist\": \"false\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tot_cntry_cntrt_assoc_vw\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": false
    },
    {
      "operationName": "[sem] release MM_TOT_CNTRY_CNTRT_ASSOC_VW",
      "predecessorName": "[File Load] MM_TOT_CNTRY_CNTRT_ASSOC_VW",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"actionType\": \"release\",\n  \"itemType\": \"path\",\n  \"itemPath\": \"/mnt/<@@PATH1@@>MM_TOT_CNTRY_CNTRT_ASSOC_VW/\"\n}",
      "operationVersionName": "SemaphoreOperation",
      "overridableIndicator": false
    },
    {
      "operationName": "[Fil] Get Custm Aggregate Configuration for the Processed Integrate Contract",
      "predecessorName": "[sem] release MM_TOT_CNTRY_CNTRT_ASSOC_VW",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"expression\": \"igrtd_layer_cntrt_id = <<CNTRT_ID>>\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_tot_cntry_cntrt_assoc_vw\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mkt_ca_cntrt\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Filter",
      "overridableIndicator": false
    },
    {
      "operationName": "[Gen] Get Fact Data For Custom Aggregates",
      "predecessorName": "[Fil] Get Custm Aggregate Configuration for the Processed Integrate Contract",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"customCode\": \"spark = self.spark_session\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\nimport csv\\nimport pandas as pd\\nfrom pyspark.sql.functions import *\\n\\n\\ndf_mkt_ca_cntrt = dict_all_dfs['df_mkt_ca_cntrt'][\\\"df_object\\\"]\\ndf_mkt_ca_cntrt.createOrReplaceTempView(\\\"mkt_ca_cntrt\\\")\\nrefresh = \\\"REFRESH table mkt_ca_cntrt\\\"\\nspark.sql(refresh)\\nquery = \\\"select * from mkt_ca_cntrt\\\"\\ndf_mkt_ca_cntrt = spark.sql(query)\\ndf_mkt_ca_cntrt.createOrReplaceTempView(\\\"mkt_ca_cntrt\\\")\\n\\ndf_fct_pubtmp = dict_all_dfs['df_fct_pubtmp'][\\\"df_object\\\"]\\ndf_fct_pubtmp.createOrReplaceTempView(\\\"fct_pubtmp\\\")\\nrefresh1 = \\\"REFRESH table fct_pubtmp\\\"\\nspark.sql(refresh1)\\nquery = \\\"select * from fct_pubtmp\\\"\\ndf_fct_pubtmp = spark.sql(query)\\ndf_fct_pubtmp.createOrReplaceTempView(\\\"fct_pubtmp\\\")\\n\\nctequery = \\\"\\\"\\\"SELECT * FROM (\\n                           WITH input AS (\\n                           SELECT  \\n                               atomic_prod_skid,\\n                               atomic_mkt_skid,\\n                               row_num,\\n                               price_per_u_lc_featr_dsply_amt,\\n                               price_per_u_lc_featr_wo_dsply_amt,\\n                               price_per_u_lc_prcut_amt,\\n                               price_per_u_usd_dsply_wo_featr_amt,\\n                               price_per_u_usd_featr_dsply_amt,\\n                               price_per_u_usd_featr_wo_dsply_amt,\\n                               price_per_u_usd_prcut_amt,\\n                               basln_mlc_featr_dsply_amt,\\n                               basln_musd_featr_dsply_amt,\\n                               run_id,\\n                               srce_sys_id,\\n                               cntrt_id,\\n                               prod_prttn_code,\\n                               fact_type_code,\\n                               mm_time_perd_end_date,\\n                               time_perd_id,\\n                               iso_crncy_code,\\n                               rcd_orign_code,\\n                               num_sku_u_qty,\\n                               basln_mlc_amt,\\n                               basln_mlc_any_prmtn_amt,\\n                               basln_mlc_non_prmtn_amt,\\n                               basln_msu_any_prmtn_qty,\\n                               basln_msu_dsply_qty,\\n                               basln_msu_featr_dsply_qty,\\n                               basln_msu_featr_qty,\\n                               basln_msu_non_prmtn_qty,\\n                               basln_msu_prcut_only_qty,\\n                               basln_msu_qty,\\n                               basln_mu_any_prmtn_qty,\\n                               basln_mu_non_prmtn_qty,\\n                               basln_mu_qty,\\n                               dist_effcy_u_qty,\\n                               numrc_dist_any_prmtn_pct,\\n                               numrc_dist_pct,\\n                               numrc_dist_sellg_4_wk_pct,\\n                               numrc_dist_sellg_pct,\\n                               num_store_unvrs_sellg_u_qty,\\n                               price_per_su_cus_amt,\\n                               price_per_su_eur_amt,\\n                               price_per_su_lc_amt,\\n                               price_per_su_lc_any_prmtn_amt,\\n                               price_per_su_lc_non_prmtn_amt,\\n                               price_per_su_usd_amt,\\n                               price_per_u_cus_amt,\\n                               price_per_u_eur_amt,\\n                               price_per_u_lc_amt,\\n                               price_per_u_lc_any_prmtn_amt,\\n                               price_per_u_lc_non_prmtn_amt,\\n                               price_per_u_usd_amt,\\n                               prmtn_itsty_su_pct,\\n                               sales_cnprc_mlc_amt,\\n                               sales_cnprc_mlc_any_prmtn_amt,\\n                               sales_cnprc_mlc_efeat_amt,\\n                               sales_efprc_mlc_efeat_amt,\\n                               sales_mcus_amt,\\n                               sales_meur_amt,\\n                               sales_mlc_amt,\\n                               sales_mlc_any_prmtn_amt,\\n                               sales_mlc_dsply_amt,\\n                               sales_mlc_featr_amt,\\n                               sales_mlc_featr_dsply_amt,\\n                               sales_mlc_non_prmtn_amt,\\n                               sales_mlc_prcut_only_amt,\\n                               sales_msu_any_prmtn_qty,\\n                               sales_msu_dsply_qty,\\n                               sales_msu_efeat_qty,\\n                               sales_msu_featr_dsply_qty,\\n                               sales_msu_featr_qty,\\n                               sales_msu_non_prmtn_qty,\\n                               sales_msu_prcut_only_qty,\\n                               sales_msu_qty,\\n                               sales_musd_amt,\\n                               sales_mu_any_prmtn_qty,\\n                               sales_mu_non_prmtn_qty,\\n                               sales_mu_qty,\\n                               sales_per_dspt_mcus_amt,\\n                               sales_per_dspt_meur_amt,\\n                               sales_per_dspt_mlc_amt,\\n                               sales_per_dspt_msu_qty,\\n                               sales_per_dspt_musd_amt,\\n                               sales_per_dspt_mu_qty,\\n                               sales_per_lngth_mlc_amt,\\n                               sales_per_lngth_msu_qty,\\n                               shelf_lngth_qty,\\n                               shelf_sellg_lngth_qty,\\n                               sku_per_dspt_u_qty,\\n                               tdp_u_qty,\\n                               wgt_dist_any_prmtn_pct,\\n                               wgt_dist_dsply_pct,\\n                               wgt_dist_dsply_wo_featr_pct,\\n                               wgt_dist_featr_dsply_pct,\\n                               wgt_dist_featr_pct,\\n                               wgt_dist_featr_wo_dsply_pct,\\n                               wgt_dist_pct,\\n                               wgt_dist_prcut_only_pct,\\n                               wgt_dist_sellg_4_wk_pct,\\n                               wgt_dist_sellg_pct,\\n                               sales_per_lngth_mcus_amt,\\n                               sales_per_lngth_meur_amt,\\n                               sales_per_lngth_musd_amt,\\n                               prod_skid,\\n                               mkt_skid,\\n                               time_perd_class_code,\\n                               categ_share_su_dsply_wo_featr_pct,\\n                               categ_share_su_featr_dsply_pct,\\n                               categ_share_su_featr_wo_dsply_pct,\\n                               categ_share_su_prcut_pct,\\n                               price_per_su_lc_dsply_wo_featr_amt,\\n                               price_per_su_lc_featr_dsply_amt,\\n                               price_per_su_lc_featr_wo_dsply_amt,\\n                               price_per_su_lc_prcut_amt,\\n                               price_per_su_usd_dsply_wo_featr_amt,\\n                               price_per_su_usd_featr_dsply_amt,\\n                               price_per_su_usd_featr_wo_dsply_amt,\\n                               price_per_su_usd_prcut_amt,\\n                               price_per_u_lc_dsply_wo_featr_amt\\n                             FROM \\n                               fct_pubtmp\\n                           ),\\n                           tot_cntry AS (\\n                           SELECT * FROM mkt_ca_cntrt\\n                           WHERE 1=1 \\n                           )\\n                           SELECT \\n                             input.atomic_prod_skid,input.atomic_mkt_skid,input.row_num,input.price_per_u_lc_featr_dsply_amt,input.price_per_u_lc_featr_wo_dsply_amt,input.price_per_u_lc_prcut_amt,input.price_per_u_usd_dsply_wo_featr_amt,input.price_per_u_usd_featr_dsply_amt,input.price_per_u_usd_featr_wo_dsply_amt,input.price_per_u_usd_prcut_amt,input.basln_mlc_featr_dsply_amt,input.basln_musd_featr_dsply_amt,input.run_id,input.srce_sys_id,input.prod_prttn_code,input.fact_type_code,input.mm_time_perd_end_date,input.time_perd_id,input.iso_crncy_code,input.num_sku_u_qty,input.basln_mlc_amt,input.basln_mlc_any_prmtn_amt,input.basln_mlc_non_prmtn_amt,input.basln_msu_any_prmtn_qty,input.basln_msu_dsply_qty,input.basln_msu_featr_dsply_qty,input.basln_msu_featr_qty,input.basln_msu_non_prmtn_qty,input.basln_msu_prcut_only_qty,input.basln_msu_qty,input.basln_mu_any_prmtn_qty,input.basln_mu_non_prmtn_qty,input.basln_mu_qty,input.dist_effcy_u_qty,input.numrc_dist_any_prmtn_pct,input.numrc_dist_pct,input.numrc_dist_sellg_4_wk_pct,input.numrc_dist_sellg_pct,input.num_store_unvrs_sellg_u_qty,input.price_per_su_cus_amt,input.price_per_su_eur_amt,input.price_per_su_lc_amt,input.price_per_su_lc_any_prmtn_amt,input.price_per_su_lc_non_prmtn_amt,input.price_per_su_usd_amt,input.price_per_u_cus_amt,input.price_per_u_eur_amt,input.price_per_u_lc_amt,input.price_per_u_lc_any_prmtn_amt,input.price_per_u_lc_non_prmtn_amt,input.price_per_u_usd_amt,input.prmtn_itsty_su_pct,input.sales_cnprc_mlc_amt,input.sales_cnprc_mlc_any_prmtn_amt,input.sales_cnprc_mlc_efeat_amt,input.sales_efprc_mlc_efeat_amt,input.sales_mcus_amt,input.sales_meur_amt,input.sales_mlc_amt,input.sales_mlc_any_prmtn_amt,input.sales_mlc_dsply_amt,input.sales_mlc_featr_amt,input.sales_mlc_featr_dsply_amt,input.sales_mlc_non_prmtn_amt,input.sales_mlc_prcut_only_amt,input.sales_msu_any_prmtn_qty,input.sales_msu_dsply_qty,input.sales_msu_efeat_qty,input.sales_msu_featr_dsply_qty,input.sales_msu_featr_qty,input.sales_msu_non_prmtn_qty,input.sales_msu_prcut_only_qty,input.sales_msu_qty,input.sales_musd_amt,input.sales_mu_any_prmtn_qty,input.sales_mu_non_prmtn_qty,input.sales_mu_qty,input.sales_per_dspt_mcus_amt,input.sales_per_dspt_meur_amt,input.sales_per_dspt_mlc_amt,input.sales_per_dspt_msu_qty,input.sales_per_dspt_musd_amt,input.sales_per_dspt_mu_qty,input.sales_per_lngth_mlc_amt,input.sales_per_lngth_msu_qty,input.shelf_lngth_qty,input.shelf_sellg_lngth_qty,input.sku_per_dspt_u_qty,input.tdp_u_qty,input.wgt_dist_any_prmtn_pct,input.wgt_dist_dsply_pct,input.wgt_dist_dsply_wo_featr_pct,input.wgt_dist_featr_dsply_pct,input.wgt_dist_featr_pct,input.wgt_dist_featr_wo_dsply_pct,input.wgt_dist_pct,input.wgt_dist_prcut_only_pct,input.wgt_dist_sellg_4_wk_pct,input.wgt_dist_sellg_pct,input.sales_per_lngth_mcus_amt,input.sales_per_lngth_meur_amt,input.sales_per_lngth_musd_amt,input.prod_skid,input.time_perd_class_code,input.categ_share_su_dsply_wo_featr_pct,input.categ_share_su_featr_dsply_pct,input.categ_share_su_featr_wo_dsply_pct,input.categ_share_su_prcut_pct,input.price_per_su_lc_dsply_wo_featr_amt,input.price_per_su_lc_featr_dsply_amt,input.price_per_su_lc_featr_wo_dsply_amt,input.price_per_su_lc_prcut_amt,input.price_per_su_usd_dsply_wo_featr_amt,input.price_per_su_usd_featr_dsply_amt,input.price_per_su_usd_featr_wo_dsply_amt,input.price_per_su_usd_prcut_amt,input.price_per_u_lc_dsply_wo_featr_amt\\n                           , <<CNTRT_ID>> cntrt_id,tot_cntry.top_time_perd_type_code time_perd_type_code,tot_cntry.parnt_mkt_skid mkt_skid,tot_cntry.cnt_child_mkt cnt_child_mkt,approx_count_distinct( tot_cntry.child_mkt_skid) over(partition by input.time_perd_id,tot_cntry.parnt_mkt_skid) cnt_fct_mkt,input.rcd_orign_code rcd_orign_code,case when count(1) over(partition by input.time_perd_id, tot_cntry.parnt_mkt_skid, tot_cntry.child_mkt_skid, input.prod_skid) > 1 then 'B' else tot_cntry.rcd_orign_code end tot_rcd_orign_code\\n                           FROM  input\\n                            INNER JOIN tot_cntry ON input.cntrt_id = tot_cntry.cntrt_id AND input.time_perd_class_code = tot_cntry.top_time_perd_class_code AND input.mkt_skid = tot_cntry.child_mkt_skid\\n                           )\\n                           WHERE cnt_child_mkt=cnt_fct_mkt and rcd_orign_code=tot_rcd_orign_code\\\"\\\"\\\"\\n\\ndf_mkt_lfd = spark.sql(ctequery)\\n\\ndict_all_dfs['df_mkt_lfd'] = {\\\"df_object\\\" :df_mkt_lfd}\\ndf_output_dict['df_mkt_lfd'] = df_mkt_lfd\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_ca_cntrt\"\n    },\n    {\n      \"name\": \"df_fct_pubtmp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mkt_lfd\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[AGG] Aggregate Fact Data For Mkt Custom Aggregate",
      "predecessorName": "[Gen] Get Fact Data For Custom Aggregates",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_lfd\"\n    }\n  ],\n  \"aggregate\": [\n    {\n      \"expression\": \"sum(sales_mu_qty)\",\n      \"alias\": \"sales_mu_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_featr_qty)\",\n      \"alias\": \"sales_msu_featr_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_meur_amt)\",\n      \"alias\": \"sales_meur_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_mcus_amt)\",\n      \"alias\": \"sales_per_dspt_mcus_amt\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_any_prmtn_qty)\",\n      \"alias\": \"basln_msu_any_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_featr_qty)\",\n      \"alias\": \"basln_msu_featr_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_prcut_only_qty)\",\n      \"alias\": \"basln_msu_prcut_only_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_mlc_any_prmtn_amt)\",\n      \"alias\": \"basln_mlc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(shelf_lngth_qty)\",\n      \"alias\": \"shelf_lngth_qty\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_prcut_only_pct)\",\n      \"alias\": \"wgt_dist_prcut_only_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_dsply_wo_featr_pct)\",\n      \"alias\": \"wgt_dist_dsply_wo_featr_pct\"\n    },\n    {\n      \"expression\": \"sum(sales_cnprc_mlc_any_prmtn_amt)\",\n      \"alias\": \"sales_cnprc_mlc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_non_prmtn_amt)\",\n      \"alias\": \"sales_mlc_non_prmtn_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_musd_amt)\",\n      \"alias\": \"sales_musd_amt\"\n    },\n    {\n      \"expression\": \"sum(basln_mlc_non_prmtn_amt)\",\n      \"alias\": \"basln_mlc_non_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_featr_dsply_pct)\",\n      \"alias\": \"wgt_dist_featr_dsply_pct\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_lc_non_prmtn_amt)\",\n      \"alias\": \"price_per_u_lc_non_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_lc_any_prmtn_amt)\",\n      \"alias\": \"price_per_u_lc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_qty)\",\n      \"alias\": \"sales_msu_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_mcus_amt)\",\n      \"alias\": \"sales_mcus_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_mu_qty)\",\n      \"alias\": \"sales_per_dspt_mu_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_msu_qty)\",\n      \"alias\": \"sales_per_dspt_msu_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_musd_amt)\",\n      \"alias\": \"sales_per_dspt_musd_amt\"\n    },\n    {\n      \"expression\": \"sum(basln_mu_non_prmtn_qty)\",\n      \"alias\": \"basln_mu_non_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_mu_any_prmtn_qty)\",\n      \"alias\": \"basln_mu_any_prmtn_qty\"\n    },\n    {\n      \"expression\": \"avg(shelf_sellg_lngth_qty)\",\n      \"alias\": \"shelf_sellg_lngth_qty\"\n    },\n    {\n      \"expression\": \"avg(prmtn_itsty_su_pct)\",\n      \"alias\": \"prmtn_itsty_su_pct\"\n    },\n    {\n      \"expression\": \"avg(numrc_dist_any_prmtn_pct)\",\n      \"alias\": \"numrc_dist_any_prmtn_pct\"\n    },\n    {\n      \"expression\": \"avg(numrc_dist_sellg_pct)\",\n      \"alias\": \"numrc_dist_sellg_pct\"\n    },\n    {\n      \"expression\": \"avg(numrc_dist_sellg_4_wk_pct)\",\n      \"alias\": \"numrc_dist_sellg_4_wk_pct\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_usd_amt)\",\n      \"alias\": \"price_per_su_usd_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mu_any_prmtn_qty)\",\n      \"alias\": \"sales_mu_any_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_dsply_qty)\",\n      \"alias\": \"sales_msu_dsply_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_featr_dsply_qty)\",\n      \"alias\": \"sales_msu_featr_dsply_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_dsply_amt)\",\n      \"alias\": \"sales_mlc_dsply_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_mlc_amt)\",\n      \"alias\": \"sales_per_dspt_mlc_amt\"\n    },\n    {\n      \"expression\": \"sum(basln_mu_qty)\",\n      \"alias\": \"basln_mu_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_qty)\",\n      \"alias\": \"basln_msu_qty\"\n    },\n    {\n      \"expression\": \"sum(sku_per_dspt_u_qty)\",\n      \"alias\": \"sku_per_dspt_u_qty\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_sellg_pct)\",\n      \"alias\": \"wgt_dist_sellg_pct\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_efeat_qty)\",\n      \"alias\": \"sales_msu_efeat_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_mu_non_prmtn_qty)\",\n      \"alias\": \"sales_mu_non_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_featr_dsply_qty)\",\n      \"alias\": \"basln_msu_featr_dsply_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_mlc_amt)\",\n      \"alias\": \"basln_mlc_amt\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_any_prmtn_pct)\",\n      \"alias\": \"wgt_dist_any_prmtn_pct\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_lc_any_prmtn_amt)\",\n      \"alias\": \"price_per_su_lc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_prcut_only_qty)\",\n      \"alias\": \"sales_msu_prcut_only_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_amt)\",\n      \"alias\": \"sales_mlc_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_meur_amt)\",\n      \"alias\": \"sales_per_dspt_meur_amt\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_dsply_qty)\",\n      \"alias\": \"basln_msu_dsply_qty\"\n    },\n    {\n      \"expression\": \"avg(num_sku_u_qty)\",\n      \"alias\": \"num_sku_u_qty\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_lc_amt)\",\n      \"alias\": \"price_per_u_lc_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_lc_amt)\",\n      \"alias\": \"price_per_su_lc_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_cus_amt)\",\n      \"alias\": \"price_per_su_cus_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_cnprc_mlc_efeat_amt)\",\n      \"alias\": \"sales_cnprc_mlc_efeat_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_efprc_mlc_efeat_amt)\",\n      \"alias\": \"sales_efprc_mlc_efeat_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_non_prmtn_qty)\",\n      \"alias\": \"sales_msu_non_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_any_prmtn_qty)\",\n      \"alias\": \"sales_msu_any_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_non_prmtn_qty)\",\n      \"alias\": \"basln_msu_non_prmtn_qty\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_pct)\",\n      \"alias\": \"wgt_dist_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_featr_pct)\",\n      \"alias\": \"wgt_dist_featr_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_featr_wo_dsply_pct)\",\n      \"alias\": \"wgt_dist_featr_wo_dsply_pct\"\n    },\n    {\n      \"expression\": \"sum(num_store_unvrs_sellg_u_qty)\",\n      \"alias\": \"num_store_unvrs_sellg_u_qty\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_eur_amt)\",\n      \"alias\": \"price_per_u_eur_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_cnprc_mlc_amt)\",\n      \"alias\": \"sales_cnprc_mlc_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_any_prmtn_amt)\",\n      \"alias\": \"sales_mlc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_featr_amt)\",\n      \"alias\": \"sales_mlc_featr_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_prcut_only_amt)\",\n      \"alias\": \"sales_mlc_prcut_only_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_featr_dsply_amt)\",\n      \"alias\": \"sales_mlc_featr_dsply_amt\"\n    },\n    {\n      \"expression\": \"avg(numrc_dist_pct)\",\n      \"alias\": \"numrc_dist_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_dsply_pct)\",\n      \"alias\": \"wgt_dist_dsply_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_sellg_4_wk_pct)\",\n      \"alias\": \"wgt_dist_sellg_4_wk_pct\"\n    },\n    {\n      \"expression\": \"sum(tdp_u_qty)\",\n      \"alias\": \"tdp_u_qty\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_usd_amt)\",\n      \"alias\": \"price_per_u_usd_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_cus_amt)\",\n      \"alias\": \"price_per_u_cus_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_lc_non_prmtn_amt)\",\n      \"alias\": \"price_per_su_lc_non_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_eur_amt)\",\n      \"alias\": \"price_per_su_eur_amt\"\n    }\n  ],\n  \"groupBy\": [\n    \"prod_skid\",\n    \"time_perd_id\",\n    \"mkt_skid\",\n    \"fact_type_code\",\n    \"prod_prttn_code\",\n    \"time_perd_class_code\",\n    \"srce_sys_id\",\n    \"mm_time_perd_end_date\",\n    \"time_perd_type_code\",\n    \"iso_crncy_code\",\n    \"cntrt_id\"\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mkt_ca\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Aggregator",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] Recalculate Measures after Aggregation",
      "predecessorName": "[AGG] Aggregate Fact Data For Mkt Custom Aggregate",
      "jsonSpecification": "{\r\n  \"active\": \"true\",\r\n  \"AddAllSourceColumns\": \"false\",\r\n  \"milestone\": \"false\",\r\n  \"saveOutputDfsToTempTable\": \"true\",\r\n  \"inputDataframes\": [\r\n    {\r\n      \"name\": \"df_mkt_ca\"\r\n    }\r\n  ],\r\n  \"transformations\": [\r\n    {\r\n      \"transformation\": \"<<PROCESS_RUN_KEY>>\",\r\n      \"columnName\": \"run_id\"\r\n    },\r\n    {\r\n      \"transformation\": \"CAST(0 AS INTEGER)\",\r\n      \"columnName\": \"atomic_prod_skid\"\r\n    },\r\n    {\r\n      \"transformation\": \"CAST(0 AS INTEGER)\",\r\n      \"columnName\": \"atomic_mkt_skid\"\r\n    },\r\n    {\r\n      \"transformation\": \"'A'\",\r\n      \"columnName\": \"rcd_orign_code\"\r\n    },\r\n    {\r\n      \"transformation\": \"nvl((case when sales_msu_qty != 0 then (sales_msu_any_prmtn_qty / sales_msu_qty) * 100 end),(prmtn_itsty_su_pct))\",\r\n      \"columnName\": \"prmtn_itsty_su_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"nvl((case when sales_mu_qty != 0 then sales_mlc_amt / sales_mu_qty end),(price_per_u_lc_amt))\",\r\n      \"columnName\": \"price_per_u_lc_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"nvl((case when sales_mu_non_prmtn_qty != 0 then sales_mlc_non_prmtn_amt / sales_mu_non_prmtn_qty end),(price_per_u_lc_non_prmtn_amt))\",\r\n      \"columnName\": \"price_per_u_lc_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"nvl((case when sales_mu_any_prmtn_qty != 0 then sales_mlc_any_prmtn_amt / sales_mu_any_prmtn_qty end),(price_per_u_lc_any_prmtn_amt))\",\r\n      \"columnName\": \"price_per_u_lc_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"nvl((case when sales_msu_qty != 0 then sales_mlc_amt / sales_msu_qty end),(price_per_su_lc_amt))\",\r\n      \"columnName\": \"price_per_su_lc_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"nvl((case when sales_msu_non_prmtn_qty != 0 then sales_mlc_non_prmtn_amt / sales_msu_non_prmtn_qty end),(price_per_su_lc_non_prmtn_amt))\",\r\n      \"columnName\": \"price_per_su_lc_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"nvl((case when sales_msu_any_prmtn_qty != 0 then sales_mlc_any_prmtn_amt / sales_msu_any_prmtn_qty end),(price_per_su_lc_any_prmtn_amt))\",\r\n      \"columnName\": \"price_per_su_lc_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"nvl((case when num_store_unvrs_sellg_u_qty != 0 then sales_mu_qty / num_store_unvrs_sellg_u_qty end),(sales_per_dspt_mu_qty))\",\r\n      \"columnName\": \"sales_per_dspt_mu_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"nvl((case when num_store_unvrs_sellg_u_qty != 0 then sales_msu_qty / num_store_unvrs_sellg_u_qty end),(sales_per_dspt_msu_qty))\",\r\n      \"columnName\": \"sales_per_dspt_msu_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"nvl((case when num_store_unvrs_sellg_u_qty != 0 then sales_mlc_amt / num_store_unvrs_sellg_u_qty end),(sales_per_dspt_mlc_amt))\",\r\n      \"columnName\": \"sales_per_dspt_mlc_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"(case when sales_mlc_amt != 0 then sales_musd_amt/sales_mlc_amt end)\",\r\n      \"columnName\": \"exchg_rate_usd_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"(case when sales_mlc_amt != 0 then sales_mcus_amt/sales_mlc_amt end)\",\r\n      \"columnName\": \"exchg_rate_cus_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"(case when sales_mlc_amt != 0 then sales_meur_amt/sales_mlc_amt end)\",\r\n      \"columnName\": \"exchg_rate_eur_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"(case when shelf_sellg_lngth_qty != 0 then sales_msu_qty / shelf_sellg_lngth_qty end)\",\r\n      \"columnName\": \"sales_per_lngth_msu_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"(case when shelf_sellg_lngth_qty != 0 then sales_mlc_amt / shelf_sellg_lngth_qty end)\",\r\n      \"columnName\": \"sales_per_lngth_mlc_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"(case when numrc_dist_pct != 0 then wgt_dist_pct / numrc_dist_pct end)\",\r\n      \"columnName\": \"dist_effcy_u_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_cnprc_mlc_any_prmtn_amt\",\r\n      \"columnName\": \"sales_cnprc_mlc_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_mlc_non_prmtn_amt\",\r\n      \"columnName\": \"sales_mlc_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_musd_amt\",\r\n      \"columnName\": \"sales_musd_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"basln_mlc_non_prmtn_amt\",\r\n      \"columnName\": \"basln_mlc_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"wgt_dist_featr_dsply_pct\",\r\n      \"columnName\": \"wgt_dist_featr_dsply_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_msu_qty\",\r\n      \"columnName\": \"sales_msu_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_mcus_amt\",\r\n      \"columnName\": \"sales_mcus_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_per_dspt_musd_amt\",\r\n      \"columnName\": \"sales_per_dspt_musd_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"basln_mu_non_prmtn_qty\",\r\n      \"columnName\": \"basln_mu_non_prmtn_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"basln_mu_any_prmtn_qty\",\r\n      \"columnName\": \"basln_mu_any_prmtn_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"shelf_sellg_lngth_qty\",\r\n      \"columnName\": \"shelf_sellg_lngth_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"numrc_dist_any_prmtn_pct\",\r\n      \"columnName\": \"numrc_dist_any_prmtn_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"numrc_dist_sellg_pct\",\r\n      \"columnName\": \"numrc_dist_sellg_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"numrc_dist_sellg_4_wk_pct\",\r\n      \"columnName\": \"numrc_dist_sellg_4_wk_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"price_per_su_usd_amt\",\r\n      \"columnName\": \"price_per_su_usd_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_mu_any_prmtn_qty\",\r\n      \"columnName\": \"sales_mu_any_prmtn_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_msu_dsply_qty\",\r\n      \"columnName\": \"sales_msu_dsply_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_msu_featr_dsply_qty\",\r\n      \"columnName\": \"sales_msu_featr_dsply_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_mlc_dsply_amt\",\r\n      \"columnName\": \"sales_mlc_dsply_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"basln_mu_qty\",\r\n      \"columnName\": \"basln_mu_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"basln_msu_qty\",\r\n      \"columnName\": \"basln_msu_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"wgt_dist_sellg_pct\",\r\n      \"columnName\": \"wgt_dist_sellg_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_msu_efeat_qty\",\r\n      \"columnName\": \"sales_msu_efeat_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_mu_non_prmtn_qty\",\r\n      \"columnName\": \"sales_mu_non_prmtn_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"basln_msu_featr_dsply_qty\",\r\n      \"columnName\": \"basln_msu_featr_dsply_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"basln_mlc_amt\",\r\n      \"columnName\": \"basln_mlc_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"wgt_dist_any_prmtn_pct\",\r\n      \"columnName\": \"wgt_dist_any_prmtn_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_msu_prcut_only_qty\",\r\n      \"columnName\": \"sales_msu_prcut_only_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_mlc_amt\",\r\n      \"columnName\": \"sales_mlc_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_per_dspt_meur_amt\",\r\n      \"columnName\": \"sales_per_dspt_meur_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"basln_msu_dsply_qty\",\r\n      \"columnName\": \"basln_msu_dsply_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"num_sku_u_qty\",\r\n      \"columnName\": \"num_sku_u_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"price_per_su_cus_amt\",\r\n      \"columnName\": \"price_per_su_cus_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_cnprc_mlc_efeat_amt\",\r\n      \"columnName\": \"sales_cnprc_mlc_efeat_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_efprc_mlc_efeat_amt\",\r\n      \"columnName\": \"sales_efprc_mlc_efeat_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_msu_non_prmtn_qty\",\r\n      \"columnName\": \"sales_msu_non_prmtn_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_msu_any_prmtn_qty\",\r\n      \"columnName\": \"sales_msu_any_prmtn_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"basln_msu_non_prmtn_qty\",\r\n      \"columnName\": \"basln_msu_non_prmtn_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"wgt_dist_pct\",\r\n      \"columnName\": \"wgt_dist_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"wgt_dist_featr_pct\",\r\n      \"columnName\": \"wgt_dist_featr_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"wgt_dist_featr_wo_dsply_pct\",\r\n      \"columnName\": \"wgt_dist_featr_wo_dsply_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"num_store_unvrs_sellg_u_qty\",\r\n      \"columnName\": \"num_store_unvrs_sellg_u_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"price_per_u_eur_amt\",\r\n      \"columnName\": \"price_per_u_eur_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_cnprc_mlc_amt\",\r\n      \"columnName\": \"sales_cnprc_mlc_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_mlc_any_prmtn_amt\",\r\n      \"columnName\": \"sales_mlc_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_mlc_featr_amt\",\r\n      \"columnName\": \"sales_mlc_featr_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_mlc_prcut_only_amt\",\r\n      \"columnName\": \"sales_mlc_prcut_only_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_mlc_featr_dsply_amt\",\r\n      \"columnName\": \"sales_mlc_featr_dsply_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"numrc_dist_pct\",\r\n      \"columnName\": \"numrc_dist_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"wgt_dist_dsply_pct\",\r\n      \"columnName\": \"wgt_dist_dsply_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"wgt_dist_sellg_4_wk_pct\",\r\n      \"columnName\": \"wgt_dist_sellg_4_wk_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"tdp_u_qty\",\r\n      \"columnName\": \"tdp_u_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"price_per_u_usd_amt\",\r\n      \"columnName\": \"price_per_u_usd_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"price_per_u_cus_amt\",\r\n      \"columnName\": \"price_per_u_cus_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"price_per_su_eur_amt\",\r\n      \"columnName\": \"price_per_su_eur_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"prod_skid\",\r\n      \"columnName\": \"prod_skid\"\r\n    },\r\n    {\r\n      \"transformation\": \"time_perd_id\",\r\n      \"columnName\": \"time_perd_id\"\r\n    },\r\n    {\r\n      \"transformation\": \"mkt_skid\",\r\n      \"columnName\": \"mkt_skid\"\r\n    },\r\n    {\r\n      \"transformation\": \"fact_type_code\",\r\n      \"columnName\": \"fact_type_code\"\r\n    },\r\n    {\r\n      \"transformation\": \"prod_prttn_code\",\r\n      \"columnName\": \"prod_prttn_code\"\r\n    },\r\n    {\r\n      \"transformation\": \"time_perd_class_code\",\r\n      \"columnName\": \"time_perd_class_code\"\r\n    },\r\n    {\r\n      \"transformation\": \"srce_sys_id\",\r\n      \"columnName\": \"srce_sys_id\"\r\n    },\r\n    {\r\n      \"transformation\": \"mm_time_perd_end_date\",\r\n      \"columnName\": \"mm_time_perd_end_date\"\r\n    },\r\n    {\r\n      \"transformation\": \"time_perd_type_code\",\r\n      \"columnName\": \"time_perd_type_code\"\r\n    },\r\n    {\r\n      \"transformation\": \"iso_crncy_code\",\r\n      \"columnName\": \"iso_crncy_code\"\r\n    },\r\n    {\r\n      \"transformation\": \"cntrt_id\",\r\n      \"columnName\": \"cntrt_id\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_mu_qty\",\r\n      \"columnName\": \"sales_mu_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_msu_featr_qty\",\r\n      \"columnName\": \"sales_msu_featr_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_meur_amt\",\r\n      \"columnName\": \"sales_meur_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"sales_per_dspt_mcus_amt\",\r\n      \"columnName\": \"sales_per_dspt_mcus_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"basln_msu_any_prmtn_qty\",\r\n      \"columnName\": \"basln_msu_any_prmtn_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"basln_msu_featr_qty\",\r\n      \"columnName\": \"basln_msu_featr_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"basln_msu_prcut_only_qty\",\r\n      \"columnName\": \"basln_msu_prcut_only_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"basln_mlc_any_prmtn_amt\",\r\n      \"columnName\": \"basln_mlc_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"transformation\": \"shelf_lngth_qty\",\r\n      \"columnName\": \"shelf_lngth_qty\"\r\n    },\r\n    {\r\n      \"transformation\": \"wgt_dist_prcut_only_pct\",\r\n      \"columnName\": \"wgt_dist_prcut_only_pct\"\r\n    },\r\n    {\r\n      \"transformation\": \"wgt_dist_dsply_wo_featr_pct\",\r\n      \"columnName\": \"wgt_dist_dsply_wo_featr_pct\"\r\n    }\r\n  ],\r\n  \"outputDataframes\": [\r\n    {\r\n      \"name\": \"df_mkt_pca\",\r\n      \"cache\": \"materialize\"\r\n    }\r\n  ]\r\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "[Gen] Materialize Custom Aggregate Facts",
      "predecessorName": "[CET] Recalculate Measures after Aggregation",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\n\\ndf_mkt_pca = dict_all_dfs['df_mkt_pca'][\\\"df_object\\\"]\\n\\ndf_fct_mkt_pubtmp= df_mkt_pca\\n\\n\\ndf_output_dict['df_fct_mkt_pubtmp'] = df_fct_mkt_pubtmp\\n\\ndict_all_dfs['df_fct_mkt_pubtmp'] = {\\\"df_object\\\" :df_fct_mkt_pubtmp}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_pca\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_mkt_pubtmp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] complementer for fct_pubtmp",
      "predecessorName": "[Gen] Materialize Custom Aggregate Facts",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"referenceDataframe\": \"df_fct_pubtmp\",\n  \"deleteColumns\": \"true\",\n  \"referenceColumnOrder\": \"true\",\n  \"milestone\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_mkt_pubtmp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_mkt_pubtmp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnComplementer",
      "overridableIndicator": false
    },
    {
      "operationName": "[Mer] fct_mkt_pubtmp",
      "predecessorName": "[CC] complementer for fct_pubtmp",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"referenceDataframe\": \"df_fct_pubtmp\",\n  \"distinct\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_mkt_pubtmp\"\n    },\n    {\n      \"name\": \"df_fct_pubtmp\"\n    }\n  ],\n  \"logicalKey\": [],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_pubtmp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Merger",
      "overridableIndicator": false
    },
    {
      "operationName": "[File Load] MM_TIME_PERD_ASSOC_IGRTD_VW",
      "predecessorName": "[Mer] fct_mkt_pubtmp",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"fileType\": \"parquet\",\n  \"inferSchema\": \"false\",\n  \"path\": \"<@@PATH1@@>MM_TIME_PERD_ASSOC_IGRTD_VW/\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"shared\",\n  \"createIfNotExist\": \"false\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_time_perd_assoc_igrtd_vw\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": false
    },
    {
      "operationName": "[sem] release MM_TIME_PERD_ASSOC_IGRTD_VW",
      "predecessorName": "[File Load] MM_TIME_PERD_ASSOC_IGRTD_VW",
      "jsonSpecification": "{\r\n  \"active\": \"true\",\r\n  \"actionType\": \"release\",\r\n  \"itemType\": \"path\",\r\n  \"itemPath\": \"/mnt/<@@PATH1@@>MM_TIME_PERD_ASSOC_IGRTD_VW/\"\r\n}",
      "operationVersionName": "SemaphoreOperation",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] Standadrdize Custom Aggregates Data to Months",
      "predecessorName": "[sem] release MM_TIME_PERD_ASSOC_IGRTD_VW",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_pca\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"CASE WHEN rcd_orign_code ='C' THEN 'Y' ELSE 'N' END\",\n      \"columnName\": \"rcd_orign_code\"\n    },\n    {\n      \"transformation\": \"nvl(numrc_dist_pct,-9999)\",\n      \"columnName\": \"numrc_dist_pct\"\n    },\n    {\n      \"transformation\": \"nvl(numrc_dist_any_prmtn_pct,-9999) \",\n      \"columnName\": \"numrc_dist_any_prmtn_pct\"\n    },\n    {\n      \"transformation\": \"nvl(numrc_dist_sellg_pct,-9999) \",\n      \"columnName\": \"numrc_dist_sellg_pct\"\n    },\n    {\n      \"transformation\": \"nvl(numrc_dist_sellg_4_wk_pct,-9999) \",\n      \"columnName\": \"numrc_dist_sellg_4_wk_pct\"\n    },\n    {\n      \"transformation\": \"nvl(wgt_dist_pct,-9999) \",\n      \"columnName\": \"wgt_dist_pct\"\n    },\n    {\n      \"transformation\": \"nvl(wgt_dist_any_prmtn_pct,-9999) \",\n      \"columnName\": \"wgt_dist_any_prmtn_pct\"\n    },\n    {\n      \"transformation\": \"nvl(wgt_dist_featr_pct,-9999) \",\n      \"columnName\": \"wgt_dist_featr_pct\"\n    },\n    {\n      \"transformation\": \"nvl(wgt_dist_dsply_pct,-9999) \",\n      \"columnName\": \"wgt_dist_dsply_pct\"\n    },\n    {\n      \"transformation\": \"nvl(wgt_dist_prcut_only_pct,-9999) \",\n      \"columnName\": \"wgt_dist_prcut_only_pct\"\n    },\n    {\n      \"transformation\": \"nvl(wgt_dist_featr_dsply_pct,-9999) \",\n      \"columnName\": \"wgt_dist_featr_dsply_pct\"\n    },\n    {\n      \"transformation\": \"nvl(wgt_dist_featr_wo_dsply_pct,-9999) \",\n      \"columnName\": \"wgt_dist_featr_wo_dsply_pct\"\n    },\n    {\n      \"transformation\": \"nvl(wgt_dist_dsply_wo_featr_pct,-9999) \",\n      \"columnName\": \"wgt_dist_dsply_wo_featr_pct\"\n    },\n    {\n      \"transformation\": \"nvl(wgt_dist_sellg_pct,-9999) \",\n      \"columnName\": \"wgt_dist_sellg_pct\"\n    },\n    {\n      \"transformation\": \"nvl(wgt_dist_sellg_4_wk_pct,-9999) \",\n      \"columnName\": \"wgt_dist_sellg_4_wk_pct\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mkt_pca\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "[FIL] df_0001_tmp",
      "predecessorName": "[CET] Standadrdize Custom Aggregates Data to Months",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"expression\": \"time_perd_type_code_a = 'EB' AND time_perd_type_code_b = 'WKMS'\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_time_perd_assoc_igrtd_vw\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_assoc1\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Filter",
      "overridableIndicator": false
    },
    {
      "operationName": "[Join] Assoc1",
      "predecessorName": "[FIL] df_0001_tmp",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"joinType\": \"INNER\",\n  \"referenceDataframe\": \"df_assoc1\",\n  \"joinExpression\": \"in.mm_time_perd_end_date = ref.time_perd_end_date_b\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_pca\",\n      \"addAllColumns\": \"true\",\n      \"columns\": [\n        {\n          \"columnName\": \"mm_time_perd_end_date\",\n          \"columnAlias\": \"mm_time_perd_end_date\"\n        }\n      ]\n    },\n    {\n      \"name\": \"df_assoc1\",\n      \"addAllColumns\": \"false\",\n      \"columns\": [\n        {\n          \"columnName\": \"time_perd_end_date_b\",\n          \"columnAlias\": \"time_perd_end_date_b\"\n        }\n      ]\n    }\n  ],\n  \"alterQuery\": [\n    {\n      \"hintType\": \"none\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_assoc1\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Joiner",
      "overridableIndicator": false
    },
    {
      "operationName": "[AGG] Assoc1",
      "predecessorName": "[Join] Assoc1",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_assoc1\"\n    }\n  ],\n  \"aggregate\": [\n    {\n      \"expression\": \"sum(sales_msu_efeat_qty) \",\n      \"alias\": \"sales_msu_efeat_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_cnprc_mlc_amt) \",\n      \"alias\": \"sales_cnprc_mlc_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_cnprc_mlc_any_prmtn_amt) \",\n      \"alias\": \"sales_cnprc_mlc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_cnprc_mlc_efeat_amt) \",\n      \"alias\": \"sales_cnprc_mlc_efeat_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_efprc_mlc_efeat_amt) \",\n      \"alias\": \"sales_efprc_mlc_efeat_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mu_qty) \",\n      \"alias\": \"sales_mu_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_mu_non_prmtn_qty) \",\n      \"alias\": \"sales_mu_non_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_mu_any_prmtn_qty) \",\n      \"alias\": \"sales_mu_any_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_qty) \",\n      \"alias\": \"sales_msu_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_non_prmtn_qty) \",\n      \"alias\": \"sales_msu_non_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_any_prmtn_qty) \",\n      \"alias\": \"sales_msu_any_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_featr_qty) \",\n      \"alias\": \"sales_msu_featr_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_dsply_qty) \",\n      \"alias\": \"sales_msu_dsply_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_prcut_only_qty) \",\n      \"alias\": \"sales_msu_prcut_only_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_featr_dsply_qty) \",\n      \"alias\": \"sales_msu_featr_dsply_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_amt) \",\n      \"alias\": \"sales_mlc_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_non_prmtn_amt) \",\n      \"alias\": \"sales_mlc_non_prmtn_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_any_prmtn_amt) \",\n      \"alias\": \"sales_mlc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_featr_amt) \",\n      \"alias\": \"sales_mlc_featr_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_dsply_amt) \",\n      \"alias\": \"sales_mlc_dsply_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_prcut_only_amt) \",\n      \"alias\": \"sales_mlc_prcut_only_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_featr_dsply_amt) \",\n      \"alias\": \"sales_mlc_featr_dsply_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_musd_amt) \",\n      \"alias\": \"sales_musd_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mcus_amt) \",\n      \"alias\": \"sales_mcus_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_meur_amt) \",\n      \"alias\": \"sales_meur_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_mu_qty) \",\n      \"alias\": \"sales_per_dspt_mu_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_msu_qty) \",\n      \"alias\": \"sales_per_dspt_msu_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_mlc_amt) \",\n      \"alias\": \"sales_per_dspt_mlc_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_musd_amt) \",\n      \"alias\": \"sales_per_dspt_musd_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_mcus_amt) \",\n      \"alias\": \"sales_per_dspt_mcus_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_meur_amt) \",\n      \"alias\": \"sales_per_dspt_meur_amt\"\n    },\n    {\n      \"expression\": \"sum(basln_mu_qty) \",\n      \"alias\": \"basln_mu_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_mu_non_prmtn_qty) \",\n      \"alias\": \"basln_mu_non_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_mu_any_prmtn_qty) \",\n      \"alias\": \"basln_mu_any_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_qty) \",\n      \"alias\": \"basln_msu_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_non_prmtn_qty) \",\n      \"alias\": \"basln_msu_non_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_any_prmtn_qty) \",\n      \"alias\": \"basln_msu_any_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_featr_qty) \",\n      \"alias\": \"basln_msu_featr_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_dsply_qty) \",\n      \"alias\": \"basln_msu_dsply_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_prcut_only_qty) \",\n      \"alias\": \"basln_msu_prcut_only_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_featr_dsply_qty) \",\n      \"alias\": \"basln_msu_featr_dsply_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_mlc_amt) \",\n      \"alias\": \"basln_mlc_amt\"\n    },\n    {\n      \"expression\": \"sum(basln_mlc_non_prmtn_amt) \",\n      \"alias\": \"basln_mlc_non_prmtn_amt\"\n    },\n    {\n      \"expression\": \"sum(basln_mlc_any_prmtn_amt) \",\n      \"alias\": \"basln_mlc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(num_sku_u_qty) \",\n      \"alias\": \"num_sku_u_qty\"\n    },\n    {\n      \"expression\": \"avg(shelf_lngth_qty) \",\n      \"alias\": \"shelf_lngth_qty\"\n    },\n    {\n      \"expression\": \"avg(shelf_sellg_lngth_qty) \",\n      \"alias\": \"shelf_sellg_lngth_qty\"\n    },\n    {\n      \"expression\": \"avg(prmtn_itsty_su_pct) \",\n      \"alias\": \"prmtn_itsty_su_pct\"\n    },\n    {\n      \"expression\": \"avg(numrc_dist_pct) \",\n      \"alias\": \"numrc_dist_pct\"\n    },\n    {\n      \"expression\": \"avg(numrc_dist_any_prmtn_pct) \",\n      \"alias\": \"numrc_dist_any_prmtn_pct\"\n    },\n    {\n      \"expression\": \"avg(numrc_dist_sellg_pct) \",\n      \"alias\": \"numrc_dist_sellg_pct\"\n    },\n    {\n      \"expression\": \"avg(numrc_dist_sellg_4_wk_pct) \",\n      \"alias\": \"numrc_dist_sellg_4_wk_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_pct) \",\n      \"alias\": \"wgt_dist_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_any_prmtn_pct) \",\n      \"alias\": \"wgt_dist_any_prmtn_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_featr_pct) \",\n      \"alias\": \"wgt_dist_featr_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_dsply_pct) \",\n      \"alias\": \"wgt_dist_dsply_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_prcut_only_pct) \",\n      \"alias\": \"wgt_dist_prcut_only_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_featr_dsply_pct) \",\n      \"alias\": \"wgt_dist_featr_dsply_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_featr_wo_dsply_pct) \",\n      \"alias\": \"wgt_dist_featr_wo_dsply_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_dsply_wo_featr_pct) \",\n      \"alias\": \"wgt_dist_dsply_wo_featr_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_sellg_pct) \",\n      \"alias\": \"wgt_dist_sellg_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_sellg_4_wk_pct) \",\n      \"alias\": \"wgt_dist_sellg_4_wk_pct\"\n    },\n    {\n      \"expression\": \"sum(tdp_u_qty) \",\n      \"alias\": \"tdp_u_qty\"\n    },\n    {\n      \"expression\": \"avg(num_store_unvrs_sellg_u_qty) \",\n      \"alias\": \"num_store_unvrs_sellg_u_qty\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_lc_amt) \",\n      \"alias\": \"price_per_u_lc_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_lc_non_prmtn_amt) \",\n      \"alias\": \"price_per_u_lc_non_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_lc_any_prmtn_amt) \",\n      \"alias\": \"price_per_u_lc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_usd_amt) \",\n      \"alias\": \"price_per_u_usd_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_cus_amt) \",\n      \"alias\": \"price_per_u_cus_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_eur_amt) \",\n      \"alias\": \"price_per_u_eur_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_lc_amt) \",\n      \"alias\": \"price_per_su_lc_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_lc_non_prmtn_amt) \",\n      \"alias\": \"price_per_su_lc_non_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_lc_any_prmtn_amt) \",\n      \"alias\": \"price_per_su_lc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_usd_amt) \",\n      \"alias\": \"price_per_su_usd_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_cus_amt) \",\n      \"alias\": \"price_per_su_cus_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_eur_amt) \",\n      \"alias\": \"price_per_su_eur_amt\"\n    }\n  ],\n  \"groupBy\": [\n    \"time_perd_id\",\n    \"mm_time_perd_end_date\",\n    \"srce_sys_id\",\n    \"cntrt_id\",\n    \"prod_prttn_code\",\n    \"fact_type_code\",\n    \"mkt_skid\",\n    \"prod_skid\",\n    \"iso_crncy_code\",\n    \"time_perd_type_code\"\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_assoc1\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Aggregator",
      "overridableIndicator": false
    },
    {
      "operationName": "[FIL] df_0002_tmp",
      "predecessorName": "[AGG] Assoc1",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"expression\": \"time_perd_type_code_a = 'MH' AND time_perd_type_code_b = 'WKMS'\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_time_perd_assoc_igrtd_vw\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_assoc2\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Filter",
      "overridableIndicator": false
    },
    {
      "operationName": "[Join] Assoc2",
      "predecessorName": "[FIL] df_0002_tmp",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"joinType\": \"INNER\",\n  \"referenceDataframe\": \"df_assoc2\",\n  \"joinExpression\": \"in.mm_time_perd_end_date = ref.time_perd_end_date_b\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_pca\",\n      \"addAllColumns\": \"true\",\n      \"columns\": [\n        {\n          \"columnName\": \"mm_time_perd_end_date\",\n          \"columnAlias\": \"mm_time_perd_end_date\"\n        }\n      ]\n    },\n    {\n      \"name\": \"df_assoc2\",\n      \"addAllColumns\": \"false\",\n      \"columns\": [\n        {\n          \"columnName\": \"time_perd_end_date_b\",\n          \"columnAlias\": \"time_perd_end_date_b\"\n        }\n      ]\n    }\n  ],\n  \"alterQuery\": [\n    {\n      \"hintType\": \"none\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_assoc2\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Joiner",
      "overridableIndicator": false
    },
    {
      "operationName": "[AGG] Assoc2",
      "predecessorName": "[Join] Assoc2",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_0002_tmp\"\n    }\n  ],\n  \"aggregate\": [\n    {\n      \"expression\": \"sum(sales_msu_efeat_qty) \",\n      \"alias\": \"sales_msu_efeat_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_cnprc_mlc_amt) \",\n      \"alias\": \"sales_cnprc_mlc_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_cnprc_mlc_any_prmtn_amt) \",\n      \"alias\": \"sales_cnprc_mlc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_cnprc_mlc_efeat_amt) \",\n      \"alias\": \"sales_cnprc_mlc_efeat_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_efprc_mlc_efeat_amt) \",\n      \"alias\": \"sales_efprc_mlc_efeat_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mu_qty) \",\n      \"alias\": \"sales_mu_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_mu_non_prmtn_qty) \",\n      \"alias\": \"sales_mu_non_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_mu_any_prmtn_qty) \",\n      \"alias\": \"sales_mu_any_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_qty) \",\n      \"alias\": \"sales_msu_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_non_prmtn_qty) \",\n      \"alias\": \"sales_msu_non_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_any_prmtn_qty) \",\n      \"alias\": \"sales_msu_any_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_featr_qty) \",\n      \"alias\": \"sales_msu_featr_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_dsply_qty) \",\n      \"alias\": \"sales_msu_dsply_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_prcut_only_qty) \",\n      \"alias\": \"sales_msu_prcut_only_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_msu_featr_dsply_qty) \",\n      \"alias\": \"sales_msu_featr_dsply_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_amt) \",\n      \"alias\": \"sales_mlc_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_non_prmtn_amt) \",\n      \"alias\": \"sales_mlc_non_prmtn_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_any_prmtn_amt) \",\n      \"alias\": \"sales_mlc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_featr_amt) \",\n      \"alias\": \"sales_mlc_featr_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_dsply_amt) \",\n      \"alias\": \"sales_mlc_dsply_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_prcut_only_amt) \",\n      \"alias\": \"sales_mlc_prcut_only_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mlc_featr_dsply_amt) \",\n      \"alias\": \"sales_mlc_featr_dsply_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_musd_amt) \",\n      \"alias\": \"sales_musd_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_mcus_amt) \",\n      \"alias\": \"sales_mcus_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_meur_amt) \",\n      \"alias\": \"sales_meur_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_mu_qty) \",\n      \"alias\": \"sales_per_dspt_mu_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_msu_qty) \",\n      \"alias\": \"sales_per_dspt_msu_qty\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_mlc_amt) \",\n      \"alias\": \"sales_per_dspt_mlc_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_musd_amt) \",\n      \"alias\": \"sales_per_dspt_musd_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_mcus_amt) \",\n      \"alias\": \"sales_per_dspt_mcus_amt\"\n    },\n    {\n      \"expression\": \"sum(sales_per_dspt_meur_amt) \",\n      \"alias\": \"sales_per_dspt_meur_amt\"\n    },\n    {\n      \"expression\": \"sum(basln_mu_qty) \",\n      \"alias\": \"basln_mu_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_mu_non_prmtn_qty) \",\n      \"alias\": \"basln_mu_non_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_mu_any_prmtn_qty) \",\n      \"alias\": \"basln_mu_any_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_qty) \",\n      \"alias\": \"basln_msu_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_non_prmtn_qty) \",\n      \"alias\": \"basln_msu_non_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_any_prmtn_qty) \",\n      \"alias\": \"basln_msu_any_prmtn_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_featr_qty) \",\n      \"alias\": \"basln_msu_featr_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_dsply_qty) \",\n      \"alias\": \"basln_msu_dsply_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_prcut_only_qty) \",\n      \"alias\": \"basln_msu_prcut_only_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_msu_featr_dsply_qty) \",\n      \"alias\": \"basln_msu_featr_dsply_qty\"\n    },\n    {\n      \"expression\": \"sum(basln_mlc_amt) \",\n      \"alias\": \"basln_mlc_amt\"\n    },\n    {\n      \"expression\": \"sum(basln_mlc_non_prmtn_amt) \",\n      \"alias\": \"basln_mlc_non_prmtn_amt\"\n    },\n    {\n      \"expression\": \"sum(basln_mlc_any_prmtn_amt) \",\n      \"alias\": \"basln_mlc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(num_sku_u_qty) \",\n      \"alias\": \"num_sku_u_qty\"\n    },\n    {\n      \"expression\": \"avg(shelf_lngth_qty) \",\n      \"alias\": \"shelf_lngth_qty\"\n    },\n    {\n      \"expression\": \"avg(shelf_sellg_lngth_qty) \",\n      \"alias\": \"shelf_sellg_lngth_qty\"\n    },\n    {\n      \"expression\": \"avg(prmtn_itsty_su_pct) \",\n      \"alias\": \"prmtn_itsty_su_pct\"\n    },\n    {\n      \"expression\": \"avg(numrc_dist_pct) \",\n      \"alias\": \"numrc_dist_pct\"\n    },\n    {\n      \"expression\": \"avg(numrc_dist_any_prmtn_pct) \",\n      \"alias\": \"numrc_dist_any_prmtn_pct\"\n    },\n    {\n      \"expression\": \"avg(numrc_dist_sellg_pct) \",\n      \"alias\": \"numrc_dist_sellg_pct\"\n    },\n    {\n      \"expression\": \"avg(numrc_dist_sellg_4_wk_pct) \",\n      \"alias\": \"numrc_dist_sellg_4_wk_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_pct) \",\n      \"alias\": \"wgt_dist_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_any_prmtn_pct) \",\n      \"alias\": \"wgt_dist_any_prmtn_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_featr_pct) \",\n      \"alias\": \"wgt_dist_featr_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_dsply_pct) \",\n      \"alias\": \"wgt_dist_dsply_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_prcut_only_pct) \",\n      \"alias\": \"wgt_dist_prcut_only_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_featr_dsply_pct) \",\n      \"alias\": \"wgt_dist_featr_dsply_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_featr_wo_dsply_pct) \",\n      \"alias\": \"wgt_dist_featr_wo_dsply_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_dsply_wo_featr_pct) \",\n      \"alias\": \"wgt_dist_dsply_wo_featr_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_sellg_pct) \",\n      \"alias\": \"wgt_dist_sellg_pct\"\n    },\n    {\n      \"expression\": \"avg(wgt_dist_sellg_4_wk_pct) \",\n      \"alias\": \"wgt_dist_sellg_4_wk_pct\"\n    },\n    {\n      \"expression\": \"sum(tdp_u_qty) \",\n      \"alias\": \"tdp_u_qty\"\n    },\n    {\n      \"expression\": \"avg(num_store_unvrs_sellg_u_qty) \",\n      \"alias\": \"num_store_unvrs_sellg_u_qty\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_lc_amt) \",\n      \"alias\": \"price_per_u_lc_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_lc_non_prmtn_amt) \",\n      \"alias\": \"price_per_u_lc_non_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_lc_any_prmtn_amt) \",\n      \"alias\": \"price_per_u_lc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_usd_amt) \",\n      \"alias\": \"price_per_u_usd_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_cus_amt) \",\n      \"alias\": \"price_per_u_cus_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_u_eur_amt) \",\n      \"alias\": \"price_per_u_eur_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_lc_amt) \",\n      \"alias\": \"price_per_su_lc_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_lc_non_prmtn_amt) \",\n      \"alias\": \"price_per_su_lc_non_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_lc_any_prmtn_amt) \",\n      \"alias\": \"price_per_su_lc_any_prmtn_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_usd_amt) \",\n      \"alias\": \"price_per_su_usd_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_cus_amt) \",\n      \"alias\": \"price_per_su_cus_amt\"\n    },\n    {\n      \"expression\": \"avg(price_per_su_eur_amt) \",\n      \"alias\": \"price_per_su_eur_amt\"\n    }\n  ],\n  \"groupBy\": [\n    \"time_perd_id\",\n    \"mm_time_perd_end_date\",\n    \"srce_sys_id\",\n    \"cntrt_id\",\n    \"prod_prttn_code\",\n    \"fact_type_code\",\n    \"mkt_skid\",\n    \"prod_skid\",\n    \"iso_crncy_code\",\n    \"time_perd_type_code\"\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_0002_tmp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Aggregator",
      "overridableIndicator": false
    },
    {
      "operationName": "[Merger] UNIONALL",
      "predecessorName": "[AGG] Assoc2",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"referenceDataframe\": \"df_assoc2\",\n  \"distinct\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_assoc1\"\n    }\n  ],\n  \"logicalKey\": [],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mkt_tsd\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Merger",
      "overridableIndicator": false
    },
    {
      "operationName": "[Gen] Standardize Custom Aggregates Data to Months",
      "predecessorName": "[Merger] UNIONALL",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\nimport csv\\nimport pandas as pd\\nfrom pyspark.sql.functions import *\\n\\ndf_mkt_pca = dict_all_dfs['df_mkt_pca'][\\\"df_object\\\"]\\ndf_mkt_pca.createOrReplaceTempView(\\\"mm_mkt_pca\\\")\\n\\ndf_assoc1 = dict_all_dfs['df_assoc1'][\\\"df_object\\\"]\\ndf_assoc1.createOrReplaceTempView(\\\"assoc1\\\")\\n\\n\\ndf_assoc2 = dict_all_dfs['df_assoc2'][\\\"df_object\\\"]\\ndf_assoc2.createOrReplaceTempView(\\\"assoc2\\\")\\n\\n\\n\\nctequery = \\\"\\\"\\\"select   \\n                           time_perd_id_a time_perd_id, time_perd_end_date_a mm_time_perd_end_date, srce_sys_id, cntrt_id, prod_prttn_code, fact_type_code, mkt_skid, prod_skid, iso_crncy_code, case when min(decode(rcd_orign_code,'C','Y','N')) = 'N' then 'V' ELSE 'I' end as rcd_orign_code, assoc1.time_perd_type_code_a, sum(sales_msu_efeat_qty) as sales_msu_efeat_qty, \\n                           sum(sales_cnprc_mlc_amt) as sales_cnprc_mlc_amt, \\n                           sum(sales_cnprc_mlc_any_prmtn_amt) as sales_cnprc_mlc_any_prmtn_amt, \\n                           sum(sales_cnprc_mlc_efeat_amt) as sales_cnprc_mlc_efeat_amt, \\n                           sum(sales_efprc_mlc_efeat_amt) as sales_efprc_mlc_efeat_amt, \\n                           sum(sales_mu_qty) as sales_mu_qty, \\n                           sum(sales_mu_non_prmtn_qty) as sales_mu_non_prmtn_qty, \\n                           sum(sales_mu_any_prmtn_qty) as sales_mu_any_prmtn_qty, \\n                           sum(sales_msu_qty) as sales_msu_qty, \\n                           sum(sales_msu_non_prmtn_qty) as sales_msu_non_prmtn_qty, \\n                           sum(sales_msu_any_prmtn_qty) as sales_msu_any_prmtn_qty, \\n                           sum(sales_msu_featr_qty) as sales_msu_featr_qty, \\n                           sum(sales_msu_dsply_qty) as sales_msu_dsply_qty, \\n                           sum(sales_msu_prcut_only_qty) as sales_msu_prcut_only_qty, \\n                           sum(sales_msu_featr_dsply_qty) as sales_msu_featr_dsply_qty, \\n                           sum(sales_mlc_amt) as sales_mlc_amt, \\n                           sum(sales_mlc_non_prmtn_amt) as sales_mlc_non_prmtn_amt, \\n                           sum(sales_mlc_any_prmtn_amt) as sales_mlc_any_prmtn_amt, \\n                           sum(sales_mlc_featr_amt) as sales_mlc_featr_amt, \\n                           sum(sales_mlc_dsply_amt) as sales_mlc_dsply_amt, \\n                           sum(sales_mlc_prcut_only_amt) as sales_mlc_prcut_only_amt, \\n                           sum(sales_mlc_featr_dsply_amt) as sales_mlc_featr_dsply_amt, \\n                           sum(sales_musd_amt) as sales_musd_amt, \\n                           sum(sales_mcus_amt) as sales_mcus_amt, \\n                           sum(sales_meur_amt) as sales_meur_amt, \\n                           sum(sales_per_dspt_mu_qty) as sales_per_dspt_mu_qty, \\n                           sum(sales_per_dspt_msu_qty) as sales_per_dspt_msu_qty, \\n                           sum(sales_per_dspt_mlc_amt) as sales_per_dspt_mlc_amt, \\n                           sum(sales_per_dspt_musd_amt) as sales_per_dspt_musd_amt, \\n                           sum(sales_per_dspt_mcus_amt) as sales_per_dspt_mcus_amt, \\n                           sum(sales_per_dspt_meur_amt) as sales_per_dspt_meur_amt, \\n                           sum(basln_mu_qty) as basln_mu_qty, \\n                           sum(basln_mu_non_prmtn_qty) as basln_mu_non_prmtn_qty, \\n                           sum(basln_mu_any_prmtn_qty) as basln_mu_any_prmtn_qty, \\n                           sum(basln_msu_qty) as basln_msu_qty, \\n                           sum(basln_msu_non_prmtn_qty) as basln_msu_non_prmtn_qty, \\n                           sum(basln_msu_any_prmtn_qty) as basln_msu_any_prmtn_qty, \\n                           sum(basln_msu_featr_qty) as basln_msu_featr_qty, \\n                           sum(basln_msu_dsply_qty) as basln_msu_dsply_qty, \\n                           sum(basln_msu_prcut_only_qty) as basln_msu_prcut_only_qty, \\n                           sum(basln_msu_featr_dsply_qty) as basln_msu_featr_dsply_qty, \\n                           sum(basln_mlc_amt) as basln_mlc_amt, \\n                           sum(basln_mlc_non_prmtn_amt) as basln_mlc_non_prmtn_amt, \\n                           sum(basln_mlc_any_prmtn_amt) as basln_mlc_any_prmtn_amt, \\n                           avg(num_sku_u_qty) as num_sku_u_qty, \\n                           avg(shelf_lngth_qty) as shelf_lngth_qty, \\n                           avg(shelf_sellg_lngth_qty) as shelf_sellg_lngth_qty, \\n                           avg(prmtn_itsty_su_pct) as prmtn_itsty_su_pct, \\n                           avg(nvl(numrc_dist_pct,-9999)) as numrc_dist_pct, \\n                           avg(nvl(numrc_dist_any_prmtn_pct,-9999)) as numrc_dist_any_prmtn_pct, \\n                           avg(nvl(numrc_dist_sellg_pct,-9999)) as numrc_dist_sellg_pct, \\n                           avg(nvl(numrc_dist_sellg_4_wk_pct,-9999)) as numrc_dist_sellg_4_wk_pct, \\n                           avg(nvl(wgt_dist_pct,-9999)) as wgt_dist_pct, \\n                           avg(nvl(wgt_dist_any_prmtn_pct,-9999)) as wgt_dist_any_prmtn_pct, \\n                           avg(nvl(wgt_dist_featr_pct,-9999)) as wgt_dist_featr_pct, \\n                           avg(nvl(wgt_dist_dsply_pct,-9999)) as wgt_dist_dsply_pct, \\n                           avg(nvl(wgt_dist_prcut_only_pct,-9999)) as wgt_dist_prcut_only_pct, \\n                           avg(nvl(wgt_dist_featr_dsply_pct,-9999)) as wgt_dist_featr_dsply_pct, \\n                           avg(nvl(wgt_dist_featr_wo_dsply_pct,-9999)) as wgt_dist_featr_wo_dsply_pct, \\n                           avg(nvl(wgt_dist_dsply_wo_featr_pct,-9999)) as wgt_dist_dsply_wo_featr_pct, \\n                           avg(nvl(wgt_dist_sellg_pct,-9999)) as wgt_dist_sellg_pct, \\n                           avg(nvl(wgt_dist_sellg_4_wk_pct,-9999)) as wgt_dist_sellg_4_wk_pct, \\n                           sum(tdp_u_qty) as tdp_u_qty, \\n                           avg(num_store_unvrs_sellg_u_qty) as num_store_unvrs_sellg_u_qty, \\n                           avg(price_per_u_lc_amt) as price_per_u_lc_amt, \\n                           avg(price_per_u_lc_non_prmtn_amt) as price_per_u_lc_non_prmtn_amt, \\n                           avg(price_per_u_lc_any_prmtn_amt) as price_per_u_lc_any_prmtn_amt, \\n                           avg(price_per_u_usd_amt) as price_per_u_usd_amt, \\n                           avg(price_per_u_cus_amt) as price_per_u_cus_amt, \\n                           avg(price_per_u_eur_amt) as price_per_u_eur_amt, \\n                           avg(price_per_su_lc_amt) as price_per_su_lc_amt, \\n                           avg(price_per_su_lc_non_prmtn_amt) as price_per_su_lc_non_prmtn_amt, \\n                           avg(price_per_su_lc_any_prmtn_amt) as price_per_su_lc_any_prmtn_amt, \\n                           avg(price_per_su_usd_amt) as price_per_su_usd_amt, \\n                           avg(price_per_su_cus_amt) as price_per_su_cus_amt, \\n                           avg(price_per_su_eur_amt) as price_per_su_eur_amt\\n                                   from (\\n                           select * from mm_mkt_pca where 1=1 and time_perd_type_code = 'WKMS'\\n                           ) mkt_pca join assoc1 on\\n                                   mkt_pca.mm_time_perd_end_date = assoc1.time_perd_end_date_b\\n                           group by time_perd_id_a ,time_perd_end_date_a, srce_sys_id, cntrt_id, prod_prttn_code, fact_type_code, mkt_skid, prod_skid, iso_crncy_code, assoc1.time_perd_type_code_a\\n                           union all select  \\n                           time_perd_id_a time_perd_id, time_perd_end_date_a mm_time_perd_end_date, srce_sys_id, cntrt_id, prod_prttn_code, fact_type_code, mkt_skid, prod_skid, iso_crncy_code, case when min(decode(rcd_orign_code,'C','Y','N')) = 'N' THEN 'V' ELSE 'I' end as rcd_orign_code, assoc2.time_perd_type_code_a, sum(sales_msu_efeat_qty) as sales_msu_efeat_qty, \\n                           sum(sales_cnprc_mlc_amt) as sales_cnprc_mlc_amt, \\n                           sum(sales_cnprc_mlc_any_prmtn_amt) as sales_cnprc_mlc_any_prmtn_amt, \\n                           sum(sales_cnprc_mlc_efeat_amt) as sales_cnprc_mlc_efeat_amt, \\n                           sum(sales_efprc_mlc_efeat_amt) as sales_efprc_mlc_efeat_amt, \\n                           sum(sales_mu_qty) as sales_mu_qty, \\n                           sum(sales_mu_non_prmtn_qty) as sales_mu_non_prmtn_qty, \\n                           sum(sales_mu_any_prmtn_qty) as sales_mu_any_prmtn_qty, \\n                           sum(sales_msu_qty) as sales_msu_qty, \\n                           sum(sales_msu_non_prmtn_qty) as sales_msu_non_prmtn_qty, \\n                           sum(sales_msu_any_prmtn_qty) as sales_msu_any_prmtn_qty, \\n                           sum(sales_msu_featr_qty) as sales_msu_featr_qty, \\n                           sum(sales_msu_dsply_qty) as sales_msu_dsply_qty, \\n                           sum(sales_msu_prcut_only_qty) as sales_msu_prcut_only_qty, \\n                           sum(sales_msu_featr_dsply_qty) as sales_msu_featr_dsply_qty, \\n                           sum(sales_mlc_amt) as sales_mlc_amt, \\n                           sum(sales_mlc_non_prmtn_amt) as sales_mlc_non_prmtn_amt, \\n                           sum(sales_mlc_any_prmtn_amt) as sales_mlc_any_prmtn_amt, \\n                           sum(sales_mlc_featr_amt) as sales_mlc_featr_amt, \\n                           sum(sales_mlc_dsply_amt) as sales_mlc_dsply_amt, \\n                           sum(sales_mlc_prcut_only_amt) as sales_mlc_prcut_only_amt, \\n                           sum(sales_mlc_featr_dsply_amt) as sales_mlc_featr_dsply_amt, \\n                           sum(sales_musd_amt) as sales_musd_amt, \\n                           sum(sales_mcus_amt) as sales_mcus_amt, \\n                           sum(sales_meur_amt) as sales_meur_amt, \\n                           sum(sales_per_dspt_mu_qty) as sales_per_dspt_mu_qty, \\n                           sum(sales_per_dspt_msu_qty) as sales_per_dspt_msu_qty, \\n                           sum(sales_per_dspt_mlc_amt) as sales_per_dspt_mlc_amt, \\n                           sum(sales_per_dspt_musd_amt) as sales_per_dspt_musd_amt, \\n                           sum(sales_per_dspt_mcus_amt) as sales_per_dspt_mcus_amt, \\n                           sum(sales_per_dspt_meur_amt) as sales_per_dspt_meur_amt, \\n                           sum(basln_mu_qty) as basln_mu_qty, \\n                           sum(basln_mu_non_prmtn_qty) as basln_mu_non_prmtn_qty, \\n                           sum(basln_mu_any_prmtn_qty) as basln_mu_any_prmtn_qty, \\n                           sum(basln_msu_qty) as basln_msu_qty, \\n                           sum(basln_msu_non_prmtn_qty) as basln_msu_non_prmtn_qty, \\n                           sum(basln_msu_any_prmtn_qty) as basln_msu_any_prmtn_qty, \\n                           sum(basln_msu_featr_qty) as basln_msu_featr_qty, \\n                           sum(basln_msu_dsply_qty) as basln_msu_dsply_qty, \\n                           sum(basln_msu_prcut_only_qty) as basln_msu_prcut_only_qty, \\n                           sum(basln_msu_featr_dsply_qty) as basln_msu_featr_dsply_qty, \\n                           sum(basln_mlc_amt) as basln_mlc_amt, \\n                           sum(basln_mlc_non_prmtn_amt) as basln_mlc_non_prmtn_amt, \\n                           sum(basln_mlc_any_prmtn_amt) as basln_mlc_any_prmtn_amt, \\n                           avg(num_sku_u_qty) as num_sku_u_qty, \\n                           avg(shelf_lngth_qty) as shelf_lngth_qty, \\n                           avg(shelf_sellg_lngth_qty) as shelf_sellg_lngth_qty, \\n                           avg(prmtn_itsty_su_pct) as prmtn_itsty_su_pct, \\n                           avg(nvl(numrc_dist_pct,-9999)) as numrc_dist_pct, \\n                           avg(nvl(numrc_dist_any_prmtn_pct,-9999)) as numrc_dist_any_prmtn_pct, \\n                           avg(nvl(numrc_dist_sellg_pct,-9999)) as numrc_dist_sellg_pct, \\n                           avg(nvl(numrc_dist_sellg_4_wk_pct,-9999)) as numrc_dist_sellg_4_wk_pct, \\n                           avg(nvl(wgt_dist_pct,-9999)) as wgt_dist_pct, \\n                           avg(nvl(wgt_dist_any_prmtn_pct,-9999)) as wgt_dist_any_prmtn_pct, \\n                           avg(nvl(wgt_dist_featr_pct,-9999)) as wgt_dist_featr_pct, \\n                           avg(nvl(wgt_dist_dsply_pct,-9999)) as wgt_dist_dsply_pct, \\n                           avg(nvl(wgt_dist_prcut_only_pct,-9999)) as wgt_dist_prcut_only_pct, \\n                           avg(nvl(wgt_dist_featr_dsply_pct,-9999)) as wgt_dist_featr_dsply_pct, \\n                           avg(nvl(wgt_dist_featr_wo_dsply_pct,-9999)) as wgt_dist_featr_wo_dsply_pct, \\n                           avg(nvl(wgt_dist_dsply_wo_featr_pct,-9999)) as wgt_dist_dsply_wo_featr_pct, \\n                           avg(nvl(wgt_dist_sellg_pct,-9999)) as wgt_dist_sellg_pct, \\n                           avg(nvl(wgt_dist_sellg_4_wk_pct,-9999)) as wgt_dist_sellg_4_wk_pct, \\n                           sum(tdp_u_qty) as tdp_u_qty, \\n                           avg(num_store_unvrs_sellg_u_qty) as num_store_unvrs_sellg_u_qty, \\n                           avg(price_per_u_lc_amt) as price_per_u_lc_amt, \\n                           avg(price_per_u_lc_non_prmtn_amt) as price_per_u_lc_non_prmtn_amt, \\n                           avg(price_per_u_lc_any_prmtn_amt) as price_per_u_lc_any_prmtn_amt, \\n                           avg(price_per_u_usd_amt) as price_per_u_usd_amt, \\n                           avg(price_per_u_cus_amt) as price_per_u_cus_amt, \\n                           avg(price_per_u_eur_amt) as price_per_u_eur_amt, \\n                           avg(price_per_su_lc_amt) as price_per_su_lc_amt, \\n                           avg(price_per_su_lc_non_prmtn_amt) as price_per_su_lc_non_prmtn_amt, \\n                           avg(price_per_su_lc_any_prmtn_amt) as price_per_su_lc_any_prmtn_amt, \\n                           avg(price_per_su_usd_amt) as price_per_su_usd_amt, \\n                           avg(price_per_su_cus_amt) as price_per_su_cus_amt, \\n                           avg(price_per_su_eur_amt) as price_per_su_eur_amt\\n                                   from (\\n                           select * from mm_mkt_pca where 1=1 and time_perd_type_code = 'WKMS'\\n                           ) mkt_pca join assoc2 on\\n                                   mkt_pca.mm_time_perd_end_date = assoc2.time_perd_end_date_b\\n                           group by time_perd_id_a ,time_perd_end_date_a, srce_sys_id, cntrt_id, prod_prttn_code, fact_type_code, mkt_skid, prod_skid, iso_crncy_code, assoc2.time_perd_type_code_a \\\"\\\"\\\"\\n                      \\ndf_mkt_tsd = spark.sql(ctequery)\\n\\ndict_all_dfs['df_mkt_tsd'] = {\\\"df_object\\\" :df_mkt_tsd}\\ndf_output_dict['df_mkt_tsd'] = df_mkt_tsd\\n\\n\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_pca\"\n    },\n    {\n      \"name\": \"df_assoc1\"\n    },\n    {\n      \"name\": \"df_assoc2\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mkt_tsd\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] TIME_PERD_TYPE_CODE",
      "predecessorName": "[Gen] Standardize Custom Aggregates Data to Months",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_tsd\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"time_perd_type_code_a\",\n      \"columnName\": \"time_perd_type_code\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mkt_tsd\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "MM_RUN_PRTTN_PLC",
      "predecessorName": "[CET] TIME_PERD_TYPE_CODE",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"fileType\": \"parquet\",\n  \"inferSchema\": \"false\",\n  \"path\": \"<@@PATH1@@>MM_RUN_PRTTN_PLC\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"shared\",\n  \"createIfNotExist\": \"false\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_run_prttn_plc\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": false
    },
    {
      "operationName": "REL MM_RUN_PRTTN_PLC",
      "predecessorName": "MM_RUN_PRTTN_PLC",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"actionType\": \"release\",\n  \"itemType\": \"path\",\n  \"itemPath\": \"/mnt/<@@PATH1@@>MM_RUN_PRTTN_PLC\"\n}",
      "operationVersionName": "SemaphoreOperation",
      "overridableIndicator": false
    },
    {
      "operationName": "[Gen] Compute Measures Based On Aggregate Measures",
      "predecessorName": "REL MM_RUN_PRTTN_PLC",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\nimport csv\\nimport pandas as pd\\nfrom pyspark.sql.functions import *\\n\\ndf_mkt_tsd = dict_all_dfs['df_mkt_tsd'][\\\"df_object\\\"]\\ndf_mkt_tsd.createOrReplaceTempView(\\\"mkt_tsd\\\")\\n\\n#df_mm_run_prttn_plc = spark.sql('''select * from parquet.`/mnt/<@@PATH1@@> /`''')\\ndf_mm_run_prttn_plc = dict_all_dfs['df_mm_run_prttn_plc'][\\\"df_object\\\"]\\ndf_mm_run_prttn_plc.createOrReplaceTempView(\\\"mm_run_prttn_plc\\\")\\n\\n\\nctequery1 = \\\"\\\"\\\"\\nSELECT * FROM (\\n                           SELECT \\n                             (<<PROCESS_RUN_KEY>>) run_id,\\n                             (0) atomic_prod_skid,\\n                             (0) atomic_mkt_skid,\\n                             (case time_perd_type_code WHEN 'MH' THEN 'MTH' WHEN 'EB' THEN 'BIMTH' WHEN 'OB' THEN 'BIMTH' END) time_perd_class_code,\\n                             coalesce((case when sales_msu_qty != 0 then (sales_msu_any_prmtn_qty / sales_msu_qty) * 100 end),(prmtn_itsty_su_pct)) prmtn_itsty_su_pct,\\n                             coalesce((case when sales_mu_qty != 0 then sales_mlc_amt / sales_mu_qty end),(price_per_u_lc_amt)) price_per_u_lc_amt,\\n                             coalesce((case when sales_mu_non_prmtn_qty != 0 then sales_mlc_non_prmtn_amt / sales_mu_non_prmtn_qty end),(price_per_u_lc_non_prmtn_amt)) price_per_u_lc_non_prmtn_amt,\\n                             coalesce((case when sales_mu_any_prmtn_qty != 0 then sales_mlc_any_prmtn_amt / sales_mu_any_prmtn_qty end),(price_per_u_lc_any_prmtn_amt)) price_per_u_lc_any_prmtn_amt,\\n                             coalesce((case when sales_msu_qty != 0 then sales_mlc_amt / sales_msu_qty end),(price_per_su_lc_amt)) price_per_su_lc_amt,\\n                             coalesce((case when sales_msu_non_prmtn_qty != 0 then sales_mlc_non_prmtn_amt / sales_msu_non_prmtn_qty end),(price_per_su_lc_non_prmtn_amt)) price_per_su_lc_non_prmtn_amt,\\n                             coalesce((case when sales_msu_any_prmtn_qty != 0 then sales_mlc_any_prmtn_amt / sales_msu_any_prmtn_qty end),(price_per_su_lc_any_prmtn_amt)) price_per_su_lc_any_prmtn_amt,\\n                             coalesce((case when num_store_unvrs_sellg_u_qty != 0 then sales_mu_qty / num_store_unvrs_sellg_u_qty end),(sales_per_dspt_mu_qty)) sales_per_dspt_mu_qty,\\n                             coalesce((case when num_store_unvrs_sellg_u_qty != 0 then sales_msu_qty / num_store_unvrs_sellg_u_qty end),(sales_per_dspt_msu_qty)) sales_per_dspt_msu_qty,\\n                             coalesce((case when num_store_unvrs_sellg_u_qty != 0 then sales_mlc_amt / num_store_unvrs_sellg_u_qty end),(sales_per_dspt_mlc_amt)) sales_per_dspt_mlc_amt,\\n                             (case when sales_mlc_amt != 0 then sales_musd_amt/sales_mlc_amt end) exchg_rate_usd_amt,\\n                             (case when sales_mlc_amt != 0 then sales_mcus_amt/sales_mlc_amt end) exchg_rate_cus_amt,\\n                             (case when sales_mlc_amt != 0 then sales_meur_amt/sales_mlc_amt end) exchg_rate_eur_amt,\\n                             (case when shelf_sellg_lngth_qty != 0 then sales_msu_qty / shelf_sellg_lngth_qty end) sales_per_lngth_msu_qty,\\n                             (case when shelf_sellg_lngth_qty != 0 then sales_mlc_amt / shelf_sellg_lngth_qty end) sales_per_lngth_mlc_amt,\\n                             (case when numrc_dist_pct != 0 then wgt_dist_pct / numrc_dist_pct end) dist_effcy_u_qty,\\n                             time_perd_id,mm_time_perd_end_date,srce_sys_id,cntrt_id,prod_prttn_code,fact_type_code,mkt_skid,prod_skid,iso_crncy_code,rcd_orign_code,time_perd_type_code,sales_msu_efeat_qty,sales_cnprc_mlc_amt,sales_cnprc_mlc_any_prmtn_amt,sales_cnprc_mlc_efeat_amt,sales_efprc_mlc_efeat_amt,basln_msu_qty,basln_msu_non_prmtn_qty,basln_msu_any_prmtn_qty,basln_msu_featr_qty,basln_msu_dsply_qty,basln_msu_prcut_only_qty,basln_msu_featr_dsply_qty,basln_mlc_amt,basln_mlc_non_prmtn_amt,basln_mlc_any_prmtn_amt,num_sku_u_qty,shelf_lngth_qty,shelf_sellg_lngth_qty,numrc_dist_pct,numrc_dist_any_prmtn_pct,numrc_dist_sellg_pct,numrc_dist_sellg_4_wk_pct,wgt_dist_pct,wgt_dist_any_prmtn_pct,wgt_dist_featr_pct,wgt_dist_dsply_pct,wgt_dist_prcut_only_pct,wgt_dist_featr_dsply_pct,wgt_dist_featr_wo_dsply_pct,wgt_dist_dsply_wo_featr_pct,wgt_dist_sellg_pct,wgt_dist_sellg_4_wk_pct,tdp_u_qty,num_store_unvrs_sellg_u_qty,price_per_u_usd_amt,price_per_u_cus_amt,price_per_u_eur_amt,price_per_su_usd_amt,price_per_su_cus_amt,price_per_su_eur_amt,sales_mu_qty,basln_mu_any_prmtn_qty,sales_mu_non_prmtn_qty,sales_mu_any_prmtn_qty,sales_msu_qty,sales_msu_non_prmtn_qty,sales_msu_any_prmtn_qty,sales_msu_featr_qty,sales_msu_dsply_qty,sales_msu_prcut_only_qty,sales_msu_featr_dsply_qty,sales_mlc_amt,sales_mlc_non_prmtn_amt,sales_mlc_any_prmtn_amt,sales_mlc_featr_amt,sales_mlc_dsply_amt,sales_mlc_prcut_only_amt,sales_mlc_featr_dsply_amt,sales_musd_amt,sales_mcus_amt,sales_meur_amt,sales_per_dspt_musd_amt,sales_per_dspt_mcus_amt,sales_per_dspt_meur_amt,basln_mu_qty,basln_mu_non_prmtn_qty\\n                           FROM\\n                             (\\n                               SELECT  \\n                                   time_perd_id,\\n                                   mm_time_perd_end_date,\\n                                   srce_sys_id,\\n                                   cntrt_id,\\n                                   prod_prttn_code,\\n                                   fact_type_code,\\n                                   mkt_skid,\\n                                   prod_skid,\\n                                   iso_crncy_code,\\n                                   rcd_orign_code,\\n                                   time_perd_type_code,\\n                                   sales_msu_efeat_qty,\\n                                   sales_cnprc_mlc_amt,\\n                                   sales_cnprc_mlc_any_prmtn_amt,\\n                                   sales_cnprc_mlc_efeat_amt,\\n                                   sales_efprc_mlc_efeat_amt,\\n                                   basln_msu_qty,\\n                                   basln_msu_non_prmtn_qty,\\n                                   basln_msu_any_prmtn_qty,\\n                                   basln_msu_featr_qty,\\n                                   basln_msu_dsply_qty,\\n                                   basln_msu_prcut_only_qty,\\n                                   basln_msu_featr_dsply_qty,\\n                                   basln_mlc_amt,\\n                                   basln_mlc_non_prmtn_amt,\\n                                   basln_mlc_any_prmtn_amt,\\n                                   num_sku_u_qty,                                   \\n                                   shelf_lngth_qty,\\n                                   shelf_sellg_lngth_qty,\\n                                   prmtn_itsty_su_pct,\\n                                   numrc_dist_pct,\\n                                   numrc_dist_any_prmtn_pct,\\n                                   numrc_dist_sellg_pct,\\n                                   numrc_dist_sellg_4_wk_pct,\\n                                   wgt_dist_pct,\\n                                   wgt_dist_any_prmtn_pct,\\n                                   wgt_dist_featr_pct,\\n                                   wgt_dist_dsply_pct,\\n                                   wgt_dist_prcut_only_pct,\\n                                   wgt_dist_featr_dsply_pct,\\n                                   wgt_dist_featr_wo_dsply_pct,\\n                                   wgt_dist_dsply_wo_featr_pct,\\n                                   wgt_dist_sellg_pct,\\n                                   wgt_dist_sellg_4_wk_pct,\\n                                   tdp_u_qty,\\n                                   num_store_unvrs_sellg_u_qty,\\n                                   price_per_u_lc_amt,\\n                                   price_per_u_lc_non_prmtn_amt,\\n                                   price_per_u_lc_any_prmtn_amt,\\n                                   price_per_u_usd_amt,\\n                                   price_per_u_cus_amt,\\n                                   price_per_u_eur_amt,\\n                                   price_per_su_lc_amt,\\n                                   price_per_su_lc_non_prmtn_amt,\\n                                   price_per_su_lc_any_prmtn_amt,\\n                                   price_per_su_usd_amt,\\n                                   price_per_su_cus_amt,\\n                                   price_per_su_eur_amt,\\n                                   sales_mu_qty,\\n                                   basln_mu_any_prmtn_qty,\\n                                   sales_mu_non_prmtn_qty,\\n                                   sales_mu_any_prmtn_qty,\\n                                   sales_msu_qty,\\n                                   sales_msu_non_prmtn_qty,\\n                                   sales_msu_any_prmtn_qty,\\n                                   sales_msu_featr_qty,\\n                                   sales_msu_dsply_qty,\\n                                   sales_msu_prcut_only_qty,\\n                                   sales_msu_featr_dsply_qty,\\n                                   sales_mlc_amt,\\n                                   sales_mlc_non_prmtn_amt,\\n                                   sales_mlc_any_prmtn_amt,\\n                                   sales_mlc_featr_amt,\\n                                   sales_mlc_dsply_amt,\\n                                   sales_mlc_prcut_only_amt,\\n                                   sales_mlc_featr_dsply_amt,\\n                                   sales_musd_amt,\\n                                   sales_mcus_amt,\\n                                   sales_meur_amt,\\n                                   sales_per_dspt_mu_qty,\\n                                   sales_per_dspt_msu_qty,\\n                                   sales_per_dspt_mlc_amt,\\n                                   sales_per_dspt_musd_amt,\\n                                   sales_per_dspt_mcus_amt,\\n                                   sales_per_dspt_meur_amt,\\n                                   basln_mu_qty,\\n                                   basln_mu_non_prmtn_qty\\n                                 from \\n                                   mkt_tsd\\n                             ) input \\n                           )\\n                           WHERE (time_perd_class_code,mm_time_perd_end_date) IN (SELECT DISTINCT time_perd_class_code,mm_time_perd_end_date FROM mm_run_prttn_plc)\\\"\\\"\\\"\\n\\t\\t\\t\\t\\t\\t   \\ndf_fct_agg_pubtmp = spark.sql(ctequery1)\\n\\ndict_all_dfs['df_fct_agg_pubtmp'] = {\\\"df_object\\\" :df_fct_agg_pubtmp}\\ndf_output_dict['df_fct_agg_pubtmp'] = df_fct_agg_pubtmp\\n\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_tsd\"\n    },\n    {\n      \"name\": \"df_mm_run_prttn_plc\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_agg_pubtmp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] Complementer for agg_pubtmp",
      "predecessorName": "[Gen] Compute Measures Based On Aggregate Measures",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"referenceDataframe\": \"df_fct_pubtmp\",\n  \"deleteColumns\": \"true\",\n  \"referenceColumnOrder\": \"true\",\n  \"milestone\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_agg_pubtmp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_agg_pubtmp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnComplementer",
      "overridableIndicator": false
    },
    {
      "operationName": "[Mer] fct_agg_pubtmp",
      "predecessorName": "[CC] Complementer for agg_pubtmp",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"referenceDataframe\": \"df_fct_pubtmp\",\n  \"distinct\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_agg_pubtmp\"\n    },\n    {\n      \"name\": \"df_fct_pubtmp\"\n    }\n  ],\n  \"logicalKey\": [],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_pubtmp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Merger",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] Compute Measures Based On Aggregate Measures",
      "predecessorName": "[Mer] fct_agg_pubtmp",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_tsd\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"<<PROCESS_RUN_KEY>>\",\n      \"columnName\": \"run_id\"\n    },\n    {\n      \"transformation\": \"CAST(0 AS INTEGER)\",\n      \"columnName\": \"atomic_prod_skid\"\n    },\n    {\n      \"transformation\": \"CAST(0 AS INTEGER)\",\n      \"columnName\": \"atomic_mkt_skid\"\n    },\n    {\n      \"transformation\": \"(CASE time_perd_type_code WHEN 'MH' THEN 'MTH' WHEN 'EB' THEN 'BIMTH' WHEN 'OB' THEN 'BIMTH' END)\",\n      \"columnName\": \"time_perd_class_code\"\n    },\n    {\n      \"transformation\": \"nvl((case when sales_msu_qty != 0 then (sales_msu_any_prmtn_qty / sales_msu_qty) * 100 end),(prmtn_itsty_su_pct))\",\n      \"columnName\": \"prmtn_itsty_su_pct\"\n    },\n    {\n      \"transformation\": \"nvl((case when sales_mu_qty != 0 then sales_mlc_amt / sales_mu_qty end),(price_per_u_lc_amt))\",\n      \"columnName\": \"price_per_u_lc_amt\"\n    },\n    {\n      \"transformation\": \"nvl((case when sales_mu_non_prmtn_qty != 0 then sales_mlc_non_prmtn_amt / sales_mu_non_prmtn_qty end),(price_per_u_lc_non_prmtn_amt))\",\n      \"columnName\": \"price_per_u_lc_non_prmtn_amt\"\n    },\n    {\n      \"transformation\": \"nvl((case when sales_mu_any_prmtn_qty != 0 then sales_mlc_any_prmtn_amt / sales_mu_any_prmtn_qty end),(price_per_u_lc_any_prmtn_amt))\",\n      \"columnName\": \"price_per_u_lc_any_prmtn_amt\"\n    },\n    {\n      \"transformation\": \"nvl((case when sales_msu_qty != 0 then sales_mlc_amt / sales_msu_qty end),(price_per_su_lc_amt))\",\n      \"columnName\": \"price_per_su_lc_amt\"\n    },\n    {\n      \"transformation\": \"nvl((case when sales_msu_non_prmtn_qty != 0 then sales_mlc_non_prmtn_amt / sales_msu_non_prmtn_qty end),(price_per_su_lc_non_prmtn_amt))\",\n      \"columnName\": \"price_per_su_lc_non_prmtn_amt\"\n    },\n    {\n      \"transformation\": \"nvl((case when sales_msu_any_prmtn_qty != 0 then sales_mlc_any_prmtn_amt / sales_msu_any_prmtn_qty end),(price_per_su_lc_any_prmtn_amt))\",\n      \"columnName\": \"price_per_su_lc_any_prmtn_amt\"\n    },\n    {\n      \"transformation\": \"nvl((case when num_store_unvrs_sellg_u_qty != 0 then sales_mu_qty / num_store_unvrs_sellg_u_qty end),(sales_per_dspt_mu_qty))\",\n      \"columnName\": \"sales_per_dspt_mu_qty\"\n    },\n    {\n      \"transformation\": \"nvl((case when num_store_unvrs_sellg_u_qty != 0 then sales_msu_qty / num_store_unvrs_sellg_u_qty end),(sales_per_dspt_msu_qty))\",\n      \"columnName\": \"sales_per_dspt_msu_qty\"\n    },\n    {\n      \"transformation\": \"nvl((case when num_store_unvrs_sellg_u_qty != 0 then sales_mlc_amt / num_store_unvrs_sellg_u_qty end),(sales_per_dspt_mlc_amt))\",\n      \"columnName\": \"sales_per_dspt_mlc_amt\"\n    },\n    {\n      \"transformation\": \"(case when sales_mlc_amt != 0 then sales_musd_amt/sales_mlc_amt end)\",\n      \"columnName\": \"exchg_rate_usd_amt\"\n    },\n    {\n      \"transformation\": \"(case when sales_mlc_amt != 0 then sales_mcus_amt/sales_mlc_amt end)\",\n      \"columnName\": \"exchg_rate_cus_amt\"\n    },\n    {\n      \"transformation\": \"(case when sales_mlc_amt != 0 then sales_meur_amt/sales_mlc_amt end)\",\n      \"columnName\": \"exchg_rate_eur_amt\"\n    },\n    {\n      \"transformation\": \"(case when shelf_sellg_lngth_qty != 0 then sales_msu_qty / shelf_sellg_lngth_qty end)\",\n      \"columnName\": \"sales_per_lngth_msu_qty\"\n    },\n    {\n      \"transformation\": \"(case when shelf_sellg_lngth_qty != 0 then sales_mlc_amt / shelf_sellg_lngth_qty end)\",\n      \"columnName\": \"sales_per_lngth_mlc_amt\"\n    },\n    {\n      \"transformation\": \"(case when numrc_dist_pct != 0 then wgt_dist_pct / numrc_dist_pct end)\",\n      \"columnName\": \"dist_effcy_u_qty\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_pubtmp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] Get Tot Cntry Mkt Skid From Customer Aggregate SetUP",
      "predecessorName": "[CET] Compute Measures Based On Aggregate Measures",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_ca_cntrt\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"parnt_mkt_skid\",\n      \"columnName\": \"mkt_skid\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mkt_ttm\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "[DIST] Get Tot Cntry Mkt Skid From Customer Aggregate SetUP",
      "predecessorName": "[CET] Get Tot Cntry Mkt Skid From Customer Aggregate SetUP",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_ttm\"\n    }\n  ],\n  \"columns\": [\n    {\n      \"name\": \"mkt_skid\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mkt_ttm\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Distinct",
      "overridableIndicator": false
    },
    {
      "operationName": "[JOIN] Get Facts For Total Country Loaded From Files",
      "predecessorName": "[DIST] Get Tot Cntry Mkt Skid From Customer Aggregate SetUP",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"joinType\": \"INNER\",\n  \"referenceDataframe\": \"df_fct_pubtmp\",\n  \"joinExpression\": \"in.mkt_skid = ref.mkt_skid\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_ttm\",\n      \"addAllColumns\": \"false\",\n      \"columns\": [\n        {\n          \"columnName\": \"mkt_skid\",\n          \"columnAlias\": \"mkt_skid\"\n        }\n      ]\n    },\n    {\n      \"name\": \"df_fct_pubtmp\",\n      \"addAllColumns\": \"false\",\n      \"columns\": [\n        {\n          \"columnName\": \"mm_time_perd_end_date\",\n          \"columnAlias\": \"mm_time_perd_end_date\"\n        }\n      ]\n    }\n  ],\n  \"alterQuery\": [\n    {\n      \"hintType\": \"none\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mkt_ttf\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Joiner",
      "overridableIndicator": false
    },
    {
      "operationName": "[Gen] Prioritize Fact Data",
      "predecessorName": "[JOIN] Get Facts For Total Country Loaded From Files",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\nimport csv\\nimport pandas as pd\\nfrom pyspark.sql.functions import *\\n\\ndf_fct_pubtmp = dict_all_dfs['df_fct_pubtmp'][\\\"df_object\\\"]\\ndf_fct_pubtmp.createOrReplaceTempView(\\\"fct_pubtmp\\\")\\n\\ndf_mkt_ttm = dict_all_dfs['df_mkt_ttm'][\\\"df_object\\\"]\\ndf_mkt_ttm.createOrReplaceTempView(\\\"mkt_ttm\\\")\\n\\n\\nctequery2 = \\\"\\\"\\\"\\nWITH input AS (\\n                           SELECT  \\n                               atomic_prod_skid,\\n                               atomic_mkt_skid,\\n                               row_num,\\n                               price_per_u_lc_featr_dsply_amt,\\n                               price_per_u_lc_featr_wo_dsply_amt,\\n                               price_per_u_lc_prcut_amt,\\n                               price_per_u_usd_dsply_wo_featr_amt,\\n                               price_per_u_usd_featr_dsply_amt,\\n                               price_per_u_usd_featr_wo_dsply_amt,\\n                               price_per_u_usd_prcut_amt,\\n                               basln_mlc_featr_dsply_amt,\\n                               basln_musd_featr_dsply_amt,\\n                               run_id,\\n                               srce_sys_id,\\n                               cntrt_id,\\n                               prod_prttn_code,\\n                               fact_type_code,\\n                               mm_time_perd_end_date,\\n                               time_perd_id,\\n                               iso_crncy_code,\\n                               rcd_orign_code,\\n                               num_sku_u_qty,\\n                               basln_mlc_amt,\\n                               basln_mlc_any_prmtn_amt,\\n                               basln_mlc_non_prmtn_amt,\\n                               basln_msu_any_prmtn_qty,\\n                               basln_msu_dsply_qty,\\n                               basln_msu_featr_dsply_qty,\\n                               basln_msu_featr_qty,\\n                               basln_msu_non_prmtn_qty,\\n                               basln_msu_prcut_only_qty,\\n                               basln_msu_qty,\\n                               basln_mu_any_prmtn_qty,\\n                               basln_mu_non_prmtn_qty,\\n                               basln_mu_qty,\\n                               dist_effcy_u_qty,\\n                               numrc_dist_any_prmtn_pct,\\n                               numrc_dist_pct,\\n                               numrc_dist_sellg_4_wk_pct,\\n                               numrc_dist_sellg_pct,\\n                               num_store_unvrs_sellg_u_qty,\\n                               price_per_su_cus_amt,\\n                               price_per_su_eur_amt,\\n                               price_per_su_lc_amt,\\n                               price_per_su_lc_any_prmtn_amt,\\n                               price_per_su_lc_non_prmtn_amt,\\n                               price_per_su_usd_amt,\\n                               price_per_u_cus_amt,\\n                               price_per_u_eur_amt,\\n                               price_per_u_lc_amt,\\n                               price_per_u_lc_any_prmtn_amt,\\n                               price_per_u_lc_non_prmtn_amt,\\n                               price_per_u_usd_amt,\\n                               prmtn_itsty_su_pct,\\n                               sales_cnprc_mlc_amt,\\n                               sales_cnprc_mlc_any_prmtn_amt,\\n                               sales_cnprc_mlc_efeat_amt,\\n                               sales_efprc_mlc_efeat_amt,\\n                               sales_mcus_amt,\\n                               sales_meur_amt,\\n                               sales_mlc_amt,\\n                               sales_mlc_any_prmtn_amt,\\n                               sales_mlc_dsply_amt,\\n                               sales_mlc_featr_amt,\\n                               sales_mlc_featr_dsply_amt,\\n                               sales_mlc_non_prmtn_amt,\\n                               sales_mlc_prcut_only_amt,\\n                               sales_msu_any_prmtn_qty,\\n                               sales_msu_dsply_qty,\\n                               sales_msu_efeat_qty,\\n                               sales_msu_featr_dsply_qty,\\n                               sales_msu_featr_qty,\\n                               sales_msu_non_prmtn_qty,\\n                               sales_msu_prcut_only_qty,\\n                               sales_msu_qty,\\n                               sales_musd_amt,\\n                               sales_mu_any_prmtn_qty,\\n                               sales_mu_non_prmtn_qty,\\n                               sales_mu_qty,\\n                               sales_per_dspt_mcus_amt,\\n                               sales_per_dspt_meur_amt,\\n                               sales_per_dspt_mlc_amt,\\n                               sales_per_dspt_msu_qty,\\n                               sales_per_dspt_musd_amt,\\n                               sales_per_dspt_mu_qty,\\n                               sales_per_lngth_mlc_amt,\\n                               sales_per_lngth_msu_qty,\\n                               shelf_lngth_qty,\\n                               shelf_sellg_lngth_qty,\\n\\n                               tdp_u_qty,\\n                               wgt_dist_any_prmtn_pct,\\n                               wgt_dist_dsply_pct,\\n                               wgt_dist_dsply_wo_featr_pct,\\n                               wgt_dist_featr_dsply_pct,\\n                               wgt_dist_featr_pct,\\n                               wgt_dist_featr_wo_dsply_pct,\\n                               wgt_dist_pct,\\n                               wgt_dist_prcut_only_pct,\\n                               wgt_dist_sellg_4_wk_pct,\\n                               wgt_dist_sellg_pct,\\n                               sales_per_lngth_mcus_amt,\\n                               sales_per_lngth_meur_amt,\\n                               sales_per_lngth_musd_amt,\\n                               prod_skid,\\n                               mkt_skid,\\n                               time_perd_class_code,\\n                               categ_share_su_dsply_wo_featr_pct,\\n                               categ_share_su_featr_dsply_pct,\\n                               categ_share_su_featr_wo_dsply_pct,\\n                               categ_share_su_prcut_pct,\\n                               price_per_su_lc_dsply_wo_featr_amt,\\n                               price_per_su_lc_featr_dsply_amt,\\n                               price_per_su_lc_featr_wo_dsply_amt,\\n                               price_per_su_lc_prcut_amt,\\n                               price_per_su_usd_dsply_wo_featr_amt,\\n                               price_per_su_usd_featr_dsply_amt,\\n                               price_per_su_usd_featr_wo_dsply_amt,\\n                               price_per_su_usd_prcut_amt,\\n                               price_per_u_lc_dsply_wo_featr_amt\\n                             from \\n                               fct_pubtmp\\n                           ),\\n                           mkt as (\\n                           select  * from mkt_ttm\\n                           where 1=1 \\n                           )\\n                           select \\n                             input.atomic_prod_skid,input.atomic_mkt_skid,input.price_per_u_lc_featr_dsply_amt,input.price_per_u_lc_featr_wo_dsply_amt,input.price_per_u_lc_prcut_amt,input.price_per_u_usd_dsply_wo_featr_amt,input.price_per_u_usd_featr_dsply_amt,input.price_per_u_usd_featr_wo_dsply_amt,input.price_per_u_usd_prcut_amt,input.basln_mlc_featr_dsply_amt,input.basln_musd_featr_dsply_amt,input.run_id,input.srce_sys_id,input.cntrt_id,input.prod_prttn_code,input.fact_type_code,input.mm_time_perd_end_date,input.time_perd_id,input.iso_crncy_code,input.rcd_orign_code,input.num_sku_u_qty,input.basln_mlc_amt,input.basln_mlc_any_prmtn_amt,input.basln_mlc_non_prmtn_amt,input.basln_msu_any_prmtn_qty,input.basln_msu_dsply_qty,input.basln_msu_featr_dsply_qty,input.basln_msu_featr_qty,input.basln_msu_non_prmtn_qty,input.basln_msu_prcut_only_qty,input.basln_msu_qty,input.basln_mu_any_prmtn_qty,input.basln_mu_non_prmtn_qty,input.basln_mu_qty,input.dist_effcy_u_qty,input.numrc_dist_any_prmtn_pct,input.numrc_dist_pct,input.numrc_dist_sellg_4_wk_pct,input.numrc_dist_sellg_pct,input.num_store_unvrs_sellg_u_qty,input.price_per_su_cus_amt,input.price_per_su_eur_amt,input.price_per_su_lc_amt,input.price_per_su_lc_any_prmtn_amt,input.price_per_su_lc_non_prmtn_amt,input.price_per_su_usd_amt,input.price_per_u_cus_amt,input.price_per_u_eur_amt,input.price_per_u_lc_amt,input.price_per_u_lc_any_prmtn_amt,input.price_per_u_lc_non_prmtn_amt,input.price_per_u_usd_amt,input.prmtn_itsty_su_pct,input.sales_cnprc_mlc_amt,input.sales_cnprc_mlc_any_prmtn_amt,input.sales_cnprc_mlc_efeat_amt,input.sales_efprc_mlc_efeat_amt,input.sales_mcus_amt,input.sales_meur_amt,input.sales_mlc_amt,input.sales_mlc_any_prmtn_amt,input.sales_mlc_dsply_amt,input.sales_mlc_featr_amt,input.sales_mlc_featr_dsply_amt,input.sales_mlc_non_prmtn_amt,input.sales_mlc_prcut_only_amt,input.sales_msu_any_prmtn_qty,input.sales_msu_dsply_qty,input.sales_msu_efeat_qty,input.sales_msu_featr_dsply_qty,input.sales_msu_featr_qty,input.sales_msu_non_prmtn_qty,input.sales_msu_prcut_only_qty,input.sales_msu_qty,input.sales_musd_amt,input.sales_mu_any_prmtn_qty,input.sales_mu_non_prmtn_qty,input.sales_mu_qty,input.sales_per_dspt_mcus_amt,input.sales_per_dspt_meur_amt,input.sales_per_dspt_mlc_amt,input.sales_per_dspt_msu_qty,input.sales_per_dspt_musd_amt,input.sales_per_dspt_mu_qty,input.sales_per_lngth_mlc_amt,input.sales_per_lngth_msu_qty,input.shelf_lngth_qty,input.shelf_sellg_lngth_qty,input.tdp_u_qty,input.wgt_dist_any_prmtn_pct,input.wgt_dist_dsply_pct,input.wgt_dist_dsply_wo_featr_pct,input.wgt_dist_featr_dsply_pct,input.wgt_dist_featr_pct,input.wgt_dist_featr_wo_dsply_pct,input.wgt_dist_pct,input.wgt_dist_prcut_only_pct,input.wgt_dist_sellg_4_wk_pct,input.wgt_dist_sellg_pct,input.sales_per_lngth_mcus_amt,input.sales_per_lngth_meur_amt,input.sales_per_lngth_musd_amt,input.prod_skid,input.mkt_skid,input.time_perd_class_code,input.categ_share_su_dsply_wo_featr_pct,input.categ_share_su_featr_dsply_pct,input.categ_share_su_featr_wo_dsply_pct,input.categ_share_su_prcut_pct,input.price_per_su_lc_dsply_wo_featr_amt,input.price_per_su_lc_featr_dsply_amt,input.price_per_su_lc_featr_wo_dsply_amt,input.price_per_su_lc_prcut_amt,input.price_per_su_usd_dsply_wo_featr_amt,input.price_per_su_usd_featr_dsply_amt,input.price_per_su_usd_featr_wo_dsply_amt,input.price_per_su_usd_prcut_amt,input.price_per_u_lc_dsply_wo_featr_amt\\n                           , CASE WHEN mkt.mkt_skid IS NOT NULL THEN 'Y' ELSE 'N' END total_cntry_mkt_ind,CASE WHEN mkt.mkt_skid IS NOT NULL THEN ROW_NUMBER() OVER (PARTITION BY fact_type_code, srce_sys_id, prod_prttn_code, time_perd_id, input.mkt_skid, prod_skid, mm_time_perd_end_date ORDER BY CASE mkt.rcd_orign_code WHEN 'B' THEN 0 WHEN 'A' THEN 1 WHEN 'C' THEN 2 WHEN 'T' THEN 3 WHEN 'U' THEN 4 WHEN 'V' THEN 5 WHEN 'W' THEN 6 WHEN 'F' THEN 7 WHEN 'G' THEN 8 WHEN 'I' THEN 9 WHEN 'K' THEN 10 ELSE 20 END ASC, run_id DESC) END row_num,CASE WHEN mkt.mkt_skid IS NOT NULL THEN CASE mkt.rcd_orign_code WHEN 'B' THEN 0 WHEN 'A' THEN 1 WHEN 'C' THEN 2 WHEN 'T' THEN 3 WHEN 'U' THEN 4 WHEN 'V' THEN 5 WHEN 'W' THEN 6 WHEN 'F' THEN 7 WHEN 'G' THEN 8 WHEN 'I' THEN 9 WHEN 'K' THEN 10 ELSE 20 END END priority_num,CASE WHEN mkt.mkt_skid IS NOT NULL THEN MIN(CASE mkt.rcd_orign_code WHEN 'B' THEN 0 WHEN 'A' THEN 1 WHEN 'C' THEN 2 WHEN 'T' THEN 3 WHEN 'U' THEN 4 WHEN 'V' THEN 5 WHEN 'W' THEN 6 WHEN 'F' THEN 7 WHEN 'G' THEN 8 WHEN 'I' THEN 9 WHEN 'K' THEN 10 ELSE 20 end) over (PARTITION BY fact_type_code, srce_sys_id, prod_prttn_code, time_perd_id,input.mkt_skid, mm_time_perd_end_date) END min_priority_num\\n                           FROM  input\\n                            LEFT OUTER JOIN mkt ON input.mkt_skid = mkt.mkt_skid\\\"\\\"\\\"\\n\\t\\t\\t\\t\\t\\t   \\ndf_mkt_fp = spark.sql(ctequery2)\\n\\ndict_all_dfs['df_mkt_fp'] = {\\\"df_object\\\" :df_mkt_fp}\\ndf_output_dict['df_mkt_fp'] = df_mkt_fp\\n\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_pubtmp\"\n    },\n    {\n      \"name\": \"df_mkt_ttm\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mkt_fp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[FIL] Copy Prioritize Fact Data",
      "predecessorName": "[Gen] Prioritize Fact Data",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"expression\": \"(total_cntry_mkt_ind='N') OR (total_cntry_mkt_ind='Y' AND row_num=1 AND min_priority_num = PRIORITY_NUM)\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mkt_fp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_pubtmp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Filter",
      "overridableIndicator": false
    }
  ],
  "graphName": "T1 Integrated Market Custom Aggregate Calculation_v1"
}