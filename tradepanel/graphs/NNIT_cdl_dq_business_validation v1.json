{
  "applicationName": "TURBINE_INTERNAL",
  "jsonSpecification": "{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"title\": \"DQ Test\",\r\n    \"description\": \"DQ test\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \r\n   },\r\n    \"required\": [],\r\n    \"configurable\": []\r\n}",
  "nodes": [
    {
      "operationName": "[FL] mm_prod_dim vw",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"fileType\": \"parquet\",\n  \"inferSchema\": \"false\",\n  \"path\": \"refined/NNIT/tradepanel/prod-tp-lightrefined/MM_PROD_DIM_VW/part_srce_sys_id=<<SRCE_SYS_ID>>\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"shared\",\n  \"createIfNotExist\": \"true\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_prod_dim\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": false
    },
    {
      "operationName": "[Gen] read prod_dim schema",
      "predecessorName": "[FL] mm_prod_dim vw",
      "jsonSpecification": "{\r\n  \"active\": \"true\",\r\n  \"separateSparkSession\": \"false\",\r\n  \"milestone\": \"false\",\r\n  \"saveOutputDfsToTempTable\": \"false\",\r\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\n\\n\\n\\ndf_prod_dim_schema = spark.read.format(\\\"parquet\\\").load(\\\"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_PROD_DIM_VW_SCHEMA\\\")\\n    \\ndf_output_dict['df_prod_dim_schema'] = df_prod_dim_schema\\ndict_all_dfs['df_prod_dim_schema'] = {\\\"df_object\\\" :df_prod_dim_schema}\",\r\n  \"inputDataframes\": [\r\n    {\r\n      \"name\": \"df_mm_prod_dim\"\r\n    }\r\n  ],\r\n  \"outputDataframes\": [\r\n    {\r\n      \"name\": \"df_prod_dim_schema\",\r\n      \"cache\": \"none\"\r\n    }\r\n  ]\r\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[Gen] col comp prod_dim",
      "predecessorName": "[Gen] read prod_dim schema",
      "jsonSpecification": "{\r\n  \"active\": \"true\",\r\n  \"separateSparkSession\": \"false\",\r\n  \"milestone\": \"false\",\r\n  \"saveOutputDfsToTempTable\": \"false\",\r\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf_mm_prod_dim= dict_all_dfs['df_mm_prod_dim'][\\\"df_object\\\"]\\ndf_prod_dim_schema = dict_all_dfs['df_prod_dim_schema'][\\\"df_object\\\"]\\n\\nfrom pyspark.sql.functions import col\\n\\nlkp_cols = df_mm_prod_dim.columns\\nsdim_cols = df_prod_dim_schema.columns\\n\\nfrom pyspark.sql.functions import lit\\nadd_cols = list(set(sdim_cols)-set(lkp_cols))\\nfor i in add_cols:\\n  df_mm_prod_dim = df_mm_prod_dim.withColumn(i,lit(None).cast('string'))\\n\\ndf_mm_prod_dim = df_mm_prod_dim.select(*sdim_cols)\\ncols = df_mm_prod_dim.columns\\n\\nfor j in cols:\\n  df_mm_prod_dim = df_mm_prod_dim.withColumn(j, col(j).cast(dict(df_prod_dim_schema.dtypes)[j]))\\n\\ndf_mm_prod_dim  = df_mm_prod_dim \\n\\ndict_all_dfs['df_mm_prod_dim'] = {\\\"df_object\\\" :df_mm_prod_dim}\\ndf_output_dict['df_mm_prod_dim'] = df_mm_prod_dim\",\r\n  \"inputDataframes\": [\r\n    {\r\n      \"name\": \"df_prod_dim_schema\"\r\n    },\r\n    {\r\n      \"name\": \"df_mm_prod_dim\"\r\n    }\r\n  ],\r\n  \"outputDataframes\": [\r\n    {\r\n      \"name\": \"df_mm_prod_dim\",\r\n      \"cache\": \"materialize\"\r\n    }\r\n  ]\r\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "release mm_prod_dim vw",
      "predecessorName": "[Gen] col comp prod_dim",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"actionType\": \"release\",\n  \"itemType\": \"path\",\n  \"itemPath\": \"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_PROD_DIM_VW/part_srce_sys_id=<<SRCE_SYS_ID>>\"\n}",
      "operationVersionName": "SemaphoreOperation",
      "overridableIndicator": false
    },
    {
      "operationName": "[GEN] - Create MM_TIER2_TP_VALDN_PROD_DIM_VW",
      "predecessorName": "release mm_prod_dim vw",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\n\\ndf_mm_prod_dim = dict_all_dfs['df_mm_prod_dim'][\\\"df_object\\\"]\\n#df_mm_prod_dim = spark.read.format('parquet').load('/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_PROD_DIM_VW/part_srce_sys_id=<<SRCE_SYS_ID>>')\\ndf_mm_prod_dim.createOrReplaceTempView('MM_PROD_DIM')\\nrefresh = \\\"REFRESH table MM_PROD_DIM\\\"\\nspark.sql(refresh)\\nquery1 = \\\"select * from MM_PROD_DIM\\\"\\ndf_mm_prod_dim = spark.sql(query1)\\ndf_mm_prod_dim.createOrReplaceTempView(\\\"MM_PROD_DIM\\\")\\ncntrt_id = <<CNTRT_ID>>\\n\\n\\n\\ndf_mm_cntrt_lkp = spark.read.format(\\\"parquet\\\").load(\\\"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_CNTRT_LKP WHERE cntrt_id = {cntrt_id}\\\")\\ndf_mm_cntrt_lkp.createOrReplaceTempView('mm_cntrt_lkp')\\n\\ndf_mm_cntrt_categ_assoc = spark.read.format(\\\"parquet\\\").load(\\\"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_CNTRT_CATEG_ASSOC WHERE cntrt_id = {cntrt_id}\\\")\\ndf_mm_cntrt_categ_assoc.createOrReplaceTempView('mm_cntrt_categ_assoc')\\n\\ndf_dpf_run = spark.read.format(\\\"parquet\\\").load(\\\"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_PROCESS_RUN_LKP_VW WHERE cntrt_id = {cntrt_id}\\\")\\ndf_dpf_run.createOrReplaceTempView('dpf_run')\\n\\nquery = query = \\\"\\\"\\\"\\nwith product_levels as (\\nselect /*+ MATERIALIZE */\\nprod_skid,run_id, srce_sys_id, prod_prttn_code, \\n\\ncase when prod_lvl_name is null and upper(priv_label_txt) <> 'YES' then 'NoLevelName'\\n     when prod_lvl_name is null and upper(priv_label_txt) = 'YES' then MFGR_NAME_TXT \\n     when model_num_txt is not null and prod_lvl_id is not null then 'Hier no. ' || prod_lvl_id || ', level no. ' || model_num_txt || ' - ' || prod_lvl_name\\n     else prod_lvl_name end as prod_lvl_name,\\n\\npg_categ_txt,categ_txt,\\nlong_prod_desc_txt, short_prod_desc_txt,\\ncase \\nwhen prod_lvl_name like '%!%' then length(prod_lvl_name) - length(replace(prod_lvl_name,'!')) + 1 \\nwhen prod_lvl_name like '0%' then CAST (substr(prod_lvl_name,2,1) as integer)\\nWHEN model_num_txt IS NOT NULL AND prod_lvl_id IS NOT NULL THEN CAST(prod_lvl_id||model_num_txt AS integer)\\nelse 1 --TOP level \\nend\\nas prod_lvl\\nfrom MM_PROD_DIM\\nwhere srce_sys_id not in (3, 100)\\nand upper(prod_lvl_name) not in ('LEVEL')\\nand upper(prod_lvl_name) not like ('%DRILL%')\\n),\\ndecoded_names as (\\nselect /*+ MATERIALIZE */\\nprod_skid,run_id,srce_sys_id, prod_prttn_code, prod_lvl_name, \\ncase when prod_lvl = 1 then nvl(pg_categ_txt,nvl(categ_txt,nvl(long_prod_desc_txt, nvl(short_prod_desc_txt,'NoProductName')) )) \\nelse nvl(long_prod_desc_txt, nvl(short_prod_desc_txt,'NoProductName')) end as prod_desc,\\nprod_lvl\\nfrom product_levels \\n--where prod_lvl <=5\\n)\\nselect /*+ PARALLEL(8) */\\na.prod_skid,a.run_id,a.srce_sys_id,a.prod_prttn_code,a.prod_lvl_name,a.prod_desc,\\n--this is to fix extraordinary Japan product level names, incompatible with other Tier 2 contract levels\\ncase when cntrt_name like 'JAPAN%' then\\n\\tcase when PROD_LVL_NAME = 'CATEGORY' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 1 \\n\\t\\t when upper(PROD_LVL_NAME) = 'SUB-CATEGORY' \\t\\t\\t\\t\\t\\t\\t\\t\\tthen 3\\n\\t\\t when upper(PROD_LVL_NAME) = 'SEGMENT' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 5\\n\\t\\t when upper(PROD_LVL_NAME) = 'GENDER' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 7\\n\\t\\t when upper(PROD_LVL_NAME) = 'MAKER' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 9\\n\\t\\t when upper(PROD_LVL_NAME) = 'MAKER GROUP' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 11\\n\\t\\t when upper(PROD_LVL_NAME) = 'MAIN BRAND TOTAL' \\t\\t\\t\\t\\t\\t\\t\\tthen 13\\n\\t\\t when upper(PROD_LVL_NAME) = 'MAIN BRAND TTL' \\t\\t\\t\\t\\t\\t\\t\\t\\tthen 15\\n\\t\\t when upper(PROD_LVL_NAME) = 'BRAND' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 17\\n\\t\\t when upper(PROD_LVL_NAME) = 'SUB BRAND' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 19\\n\\t\\t when upper(PROD_LVL_NAME) = 'FORM' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 21\\n\\t\\t when upper(PROD_LVL_NAME) = 'TYPE' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 23\\n\\t\\t when upper(PROD_LVL_NAME) = 'SEGMENT+DISPOSABLE TYPE' \\t\\t\\t\\t\\t\\t\\tthen 25\\n\\t\\t when upper(PROD_LVL_NAME) = 'USER' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 27\\n\\t\\t when upper(PROD_LVL_NAME) = 'TARGET USER' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 29\\n\\t\\t when upper(PROD_LVL_NAME) = 'CONCEPT' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 31\\n\\t\\t when upper(PROD_LVL_NAME) = 'HDD_LDD' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 33\\n\\t\\t when upper(PROD_LVL_NAME) = 'VARIANT' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 35\\n\\t\\t when upper(PROD_LVL_NAME) = 'FLAVOR' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 37\\n\\t\\t when upper(PROD_LVL_NAME) = 'COMPACT' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 39\\n\\t\\t when upper(PROD_LVL_NAME) = 'KOGEN VARIANT' \\t\\t\\t\\t\\t\\t\\t\\t\\tthen 41\\n\\t\\t when upper(PROD_LVL_NAME) = 'MATERIAL' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 43\\n\\t\\t when upper(PROD_LVL_NAME) = 'PACKAGE TYPE' \\t\\t\\t\\t\\t\\t\\t\\t\\tthen 45\\n\\t\\t when upper(PROD_LVL_NAME) = 'LINE UP' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 47\\n\\t\\t when upper(PROD_LVL_NAME) = 'PRODUCT TYPE' \\t\\t\\t\\t\\t\\t\\t\\t\\tthen 49\\n\\t\\t when upper(PROD_LVL_NAME) = 'PURPOSE' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 51\\n\\t\\t when upper(PROD_LVL_NAME) = 'CONCENTRATION' \\t\\t\\t\\t\\t\\t\\t\\t\\tthen 53\\n\\t\\t when upper(PROD_LVL_NAME) = 'BENEFIT DIRECTION' \\t\\t\\t\\t\\t\\t\\t\\tthen 55\\n\\t\\t when upper(PROD_LVL_NAME) = 'PACKAGE' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 57\\n\\t\\t when upper(PROD_LVL_NAME) = 'PACK SIZE' or upper(PROD_LVL_NAME) = 'PACKSIZE'   then 59\\n\\t\\t when upper(PROD_LVL_NAME) = 'LIQUID SIZE' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 61\\n\\t\\t when upper(PROD_LVL_NAME) = 'SIZE' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 63\\n\\t\\t when upper(PROD_LVL_NAME) = 'BASIC SIZE' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 65\\n\\t\\t when upper(PROD_LVL_NAME) = 'SKU' \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen 67\\n        else 99 end\\n    else a.prod_lvl end as prod_lvl,\\nCASE when a.run_id= last_run.run_id then 'Y' else 'N' END last_run_ind,\\nb.cntrt_id, b.cntrt_code\\nfrom decoded_names a, mm_cntrt_lkp b, mm_cntrt_categ_assoc c,\\n(SELECT max(run_id) run_id,cntrt_id FROM dpf_run group by cntrt_id) last_run\\nwhere 1=1\\nand last_run.cntrt_id = b.prcsg_id\\nand a.srce_sys_id = b.srce_sys_id\\nand a.prod_prttn_code = c.categ_id\\nand b.cntrt_id = c.cntrt_id\\\"\\\"\\\"\\n\\nspark.sql('''REFRESH TABLE MM_PROD_DIM''')\\n\\ndf_TP_VALDN_PROD_DIM_VW = spark.sql(query)\\n\\ndict_all_dfs['df_TP_VALDN_PROD_DIM_VW'] = {\\\"df_object\\\" :df_TP_VALDN_PROD_DIM_VW}\\ndf_output_dict['df_TP_VALDN_PROD_DIM_VW'] = df_TP_VALDN_PROD_DIM_VW\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_prod_promo_vw\"\n    },\n    {\n      \"name\": \"df_mm_prod_dim\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_TP_VALDN_PROD_DIM_VW\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[FL] MM_PROD_XREF",
      "predecessorName": "[GEN] - Create MM_TIER2_TP_VALDN_PROD_DIM_VW",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"fileType\": \"parquet\",\n  \"inferSchema\": \"false\",\n  \"path\": \"refined/NNIT/tradepanel/prod-tp-lightrefined/MM_PROD_XREF/\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"shared\",\n  \"createIfNotExist\": \"false\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_xref\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": false
    },
    {
      "operationName": "release prod_xref",
      "predecessorName": "[FL] MM_PROD_XREF",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"actionType\": \"release\",\n  \"itemType\": \"path\",\n  \"itemPath\": \"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_PROD_XREF/\"\n}",
      "operationVersionName": "SemaphoreOperation",
      "overridableIndicator": false
    },
    {
      "operationName": "[Fl] MM_RUN_PRTTN_PLC",
      "predecessorName": "release prod_xref",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"fileType\": \"parquet\",\n  \"inferSchema\": \"false\",\n  \"path\": \"refined/NNIT/tradepanel/prod-tp-lightrefined/MM_RUN_PRTTN_PLC/\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"shared\",\n  \"createIfNotExist\": \"false\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_run_prttn_plc\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": false
    },
    {
      "operationName": "release MM_RUN_PRTTN_PLC",
      "predecessorName": "[Fl] MM_RUN_PRTTN_PLC",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"actionType\": \"release\",\n  \"itemType\": \"path\",\n  \"itemPath\": \"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_RUN_PRTTN_PLC/\"\n}",
      "operationVersionName": "SemaphoreOperation",
      "overridableIndicator": false
    },
    {
      "operationName": "[GEN] - Set New Time Period Flag",
      "predecessorName": "release MM_RUN_PRTTN_PLC",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"#Step 1\\n\\nspark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\nfrom pyspark.sql.types import StructType,StructField, StringType, IntegerType, LongType, DoubleType\\n\\n#MM_DVM_CNTRT_STRCT_PRC2_VW\\nsrce_sys_id = <<SRCE_SYS_ID>>\\nPROD_PRTTN_CODE = '<<CATEGORY_ID>>'\\n\\ncntrt_id = <<CNTRT_ID>>\\nrun_id = <<PROCESS_RUN_KEY>>\\n# ref_file_path = '/mnt/unrefined/NNIT/tradepanel/cloudpanel-test-unref/test/dvm/busi_val/processing_files/'\\nref_file_path = '/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/'\\n\\n\\n\\ndf_prod_promo_vw = dict_all_dfs['df_prod_promo_vw'][\\\"df_object\\\"]\\ndf_TP_VALDN_PROD_DIM_VW = dict_all_dfs['df_TP_VALDN_PROD_DIM_VW'][\\\"df_object\\\"]\\n\\ndef convert_cols_to_lower(df):\\n  cols = df.columns\\n  cols_lower = [col.lower() for col in cols]\\n  df = df.select(*cols_lower)\\n  return df\\n\\n#Get Product Structure Setup of Business Checks\\nfrom pyspark.sql.functions import lit, col, abs\\n\\n# df_mm_dvm_cntrt_strct_prc2_vw = spark.read.format('csv').option('header', True).load('/mnt/bf/unrefined/cloudpanel-test/cloudpanel-test-unref/test/dvm/tables/MM_DVM_CNTRT_STRCT_PRC2_VW.csv')\\n\\ndf_mm_dvm_cntrt_strct_prc2_vw = spark.read.format(\\\"parquet\\\").load(\\\"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_DVM_CNTRT_STRCT_PRC2_VW\\\")\\ndf_mm_dvm_cntrt_strct_prc2_vw = df_mm_dvm_cntrt_strct_prc2_vw.filter(f'CNTRT_ID = {cntrt_id} ')\\n\\ndf_mm_dvm_cntrt_strct_prc2_vw = convert_cols_to_lower(df_mm_dvm_cntrt_strct_prc2_vw)\\ndf_mm_dvm_cntrt_strct_prc2_vw = df_mm_dvm_cntrt_strct_prc2_vw.withColumn('strct_id', abs('strct_id')) #test code\\ndf_2 = df_mm_dvm_cntrt_strct_prc2_vw.withColumn('run_id', lit(run_id))\\n\\ndf3 = df_2.select(col('run_id').cast('long'),col('strct_id').cast('long'),col('parnt_child_check_val').cast('double'),col('neg_check_val').cast('long'))\\n\\n#------------------------------------------------------------\\n\\n#Pubilsh Product Structure Setup of  Business Checks\\nimport delta\\npath = f'{ref_file_path}mm_dvm_run_strct_plc'\\n\\ndef path_exists(path):\\n  try:\\n    if len(dbutils.fs.ls(path)) > 0:\\n      return True\\n  except:\\n    return False\\n\\nif path_exists(path):\\n  spark.sql(f\\\" delete from delta.`{ref_file_path}mm_dvm_run_strct_plc` where RUN_ID = {run_id}\\\")\\n  df3.write.format('delta').mode('append').save(f'{ref_file_path}mm_dvm_run_strct_plc')\\nelse:\\n  df3.write.format('delta').mode('append').save(f'{ref_file_path}mm_dvm_run_strct_plc')\\n\\n#------------------------------------------------------------\\n\\n#Get product structure level setup of checks\\n\\n#File Loading\\n\\n#df_mm_dvm_tier2_strct_lvl_prc_vw = spark.read.format('delta').load('/mnt/unrefined/NNIT/tradepanel/cloudpanel-test-unref/test/dvm/busi_val/processing_files/MM_DVM_TIER2_STRCT_LVL_PRC_VW').filter(f'CNTRT_ID = {cntrt_id} ')\\n\\nschm = StructType([\\n        StructField(\\\"cntrt_id\\\", IntegerType(), True),\\n        StructField(\\\"strct_lvl_id\\\", LongType(), True),\\n        StructField(\\\"abslt_thshd_val\\\", DoubleType(), True),\\n        StructField(\\\"ipp_check_val\\\", DoubleType(), True),\\n        StructField(\\\"iya_check_val\\\", DoubleType(), True),\\n        StructField(\\\"ipd_check_val\\\", DoubleType(), True),\\n        StructField(\\\"top_lvl_ind\\\", StringType(), True)])\\n# df_mm_dvm_tier2_strct_lvl_prc_vw = spark.read.format('csv').schema(schm).option('header', True).load('/mnt/bf/unrefined/cloudpanel-test/cloudpanel-test-unref/test/dvm/tables/MM_DVM_TIER2_STRCT_LVL_PRC_VW.csv')\\n\\n\\ndf_mm_dvm_tier2_strct_lvl_prc_vw = spark.read.format(\\\"parquet\\\").load(\\\"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_DVM_TIER2_STRCT_LVL_PRC_VW\\\")\\n\\ndf_mm_dvm_tier2_strct_lvl_prc_vw = df_mm_dvm_tier2_strct_lvl_prc_vw.withColumn('strct_lvl_id', abs('strct_lvl_id')) #test code\\n\\ndf_mm_dvm_tier2_strct_lvl_prc_vw = df_mm_dvm_tier2_strct_lvl_prc_vw.filter(f'CNTRT_ID = {cntrt_id} ')\\n\\ndf_mm_dvm_tier2_strct_lvl_prc_vw = convert_cols_to_lower(df_mm_dvm_tier2_strct_lvl_prc_vw)\\n\\ndf4 = df_mm_dvm_tier2_strct_lvl_prc_vw.withColumn('run_id', lit(run_id))\\ndf4 = df4.select('run_id','strct_lvl_id', 'abslt_thshd_val','ipp_check_val','iya_check_val','ipd_check_val')\\n\\ndf4 = df4.select(col('run_id').cast('long'),col('strct_lvl_id').cast('long'),col('abslt_thshd_val').cast('double'),col('ipp_check_val').cast('double'), col('iya_check_val').cast('double'), col('ipd_check_val').cast('double'))\\n\\n#-------------------------------------------------------------\\n\\n#Publish product structure level setup of checks\\npath_strct_run_lvl_plc = f'{ref_file_path}mm_dvm_run_strct_lvl_plc'\\nif path_exists(path_strct_run_lvl_plc):\\n  spark.sql(f\\\" delete from delta.`{ref_file_path}mm_dvm_run_strct_lvl_plc` where RUN_ID = {run_id}\\\")\\n  df4.write.format('delta').mode('append').save(f'{ref_file_path}mm_dvm_run_strct_lvl_plc')\\nelse:\\n  df4.write.format('delta').mode('append').save(f'{ref_file_path}mm_dvm_run_strct_lvl_plc')\\n\\n\\n#------------------------------------------------------------\\n\\n#Get Products for Business Checks\\n\\ndf_xref = dict_all_dfs['df_xref'][\\\"df_object\\\"]\\n#df_xref = spark.read.format('parquet').option(\\\"ignoreCorruptFiles\\\", True).option('ignoreMissingFiles', True).load('/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined//MM_PROD_XREF')\\ndf_xref = convert_cols_to_lower(df_xref)\\n\\nfrom pyspark.sql.functions import col, nanvl\\nPROD_PRTTN_CODE = PROD_PRTTN_CODE\\nDPF_PROD_PROMO_VW = 'MM_PROD_DIM_VW'\\nMM_TIER2_TP_VALDN_PROD_DIM_VW = 'MM_TIER2_TP_VALDN_PROD_DIM_VW'\\nstrct_lvl_id_list = df4.select('strct_lvl_id').rdd.flatMap(lambda x: x).collect()\\n\\ndf_prod_promo = df_prod_promo_vw\\ndf_tier2_vldn = df_TP_VALDN_PROD_DIM_VW\\n\\ndf_dqm_prod = df_prod_promo.join(df_tier2_vldn, ( (df_prod_promo.srce_sys_id == df_tier2_vldn.srce_sys_id) & (df_prod_promo.prod_prttn_code == df_tier2_vldn.prod_prttn_code ) & (df_prod_promo.prod_skid == df_tier2_vldn.prod_skid ) ), \\\"inner\\\").join(df_xref, df_prod_promo.prod_skid == df_xref.prod_skid , \\\"inner\\\").withColumn(\\\"prod_attr_val_name\\\", nanvl(col('short_prod_desc_txt'),nanvl(col('long_prod_desc_txt'),col('extrn_prod_attr_val_list')))).select(df_prod_promo[\\\"*\\\"],df_tier2_vldn[\\\"prod_lvl\\\"],\\\"prod_attr_val_name\\\" )\\n\\ndf_dqm_prod = df_dqm_prod.filter( (col('prod_lvl').isin(strct_lvl_id_list)) & (col('prod_prttn_code')==PROD_PRTTN_CODE))\\n\\n#--------------------------------------------------------------\\n\\n#Prepare Validation Products\\n\\ndf6 = df_dqm_prod.withColumn('parnt_prod_skid', lit(0)).select('prod_skid', 'parnt_prod_skid', 'run_id','srce_sys_id','cntrt_id',  'prod_lvl_id',  'prod_attr_val_name', 'prod_lvl_name'  )\\ndf6 = df6.select( df6.prod_skid.cast('long'),df6.parnt_prod_skid.cast('long'), df6.run_id.cast('long'), df6.srce_sys_id.cast('int'),df6.cntrt_id.cast('long'),  df6.prod_lvl_id.cast('long'), col('prod_attr_val_name').cast('string'), 'prod_lvl_name' )\\n\\n#--------------------------------------------------------------\\n\\n# Publish Validation Reports\\n\\npath_MM_TP_VALDN_PROD_DIM = f'{ref_file_path}MM_TP_VALDN_PROD_DIM'\\nif path_exists(path_MM_TP_VALDN_PROD_DIM):\\n  spark.sql(f\\\" delete from delta.`{ref_file_path}MM_TP_VALDN_PROD_DIM` where RUN_ID = {run_id}\\\")\\n  df6.write.format('delta').mode('append').save(f'{ref_file_path}MM_TP_VALDN_PROD_DIM')\\nelse:\\n  df6.write.format('delta').mode('append').save(f'{ref_file_path}MM_TP_VALDN_PROD_DIM')\\n\\n#--------------------------------------------------------------\\n# Get market Top Nodes\\n\\n\\ndf_DQM_CNTRT_MKT = spark.read.format(\\\"parquet\\\").load(\\\"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_CNTRT_TOP_MKT_VW\\\")\\ndf_DQM_CNTRT_MKT = df_DQM_CNTRT_MKT.filter(f'cntrt_id = {cntrt_id}').filter(f'CNTRT_ID = {cntrt_id} ')\\n\\ndf_DQM_CNTRT_MKT = convert_cols_to_lower(df_DQM_CNTRT_MKT)\\n#--------------------------------------------------------------\\n\\n# Get all the monthly Time Periods\\n\\nfrom pyspark.sql.functions import count, max\\n\\ndf_all_run = spark.read.format(\\\"parquet\\\").load(\\\"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_PROCESS_RUN_LKP_VW\\\")\\ndf_all_run = df_all_run.filter(f'cntrt_id = {cntrt_id}')\\n\\ndf_all_run = df_all_run.withColumn(\\\"process_status\\\", lit('FINISHED'))\\n# df_all_run = spark.read.format('parquet').option(\\\"ignoreCorruptFiles\\\", True).option('ignoreMissingFiles', True).load('/mnt/unrefined/NNIT/tradepanel/adw/DPF_ALL_RUN_VW/')\\ndf_all_run.createOrReplaceTempView('dpf_all_run_vw')\\n\\n\\n#df_run_prttn_plc = spark.read.format('parquet').option(\\\"ignoreCorruptFiles\\\", True).option('ignoreMissingFiles', True).load('/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined//MM_RUN_PRTTN_PLC/')\\ndf_run_prttn_plc = dict_all_dfs['df_run_prttn_plc'][\\\"df_object\\\"]\\ndf_run_prttn_plc.createOrReplaceTempView('MM_RUN_PRTTN_PLC')\\n\\nprttn_run_stat = \\\"\\\"\\\"SELECT plc.FACT_TYPE_CODE,\\n          plc.TIME_PERD_CLASS_CODE,\\n          plc.SRCE_SYS_ID,\\n          plc.CNTRT_ID,\\n          plc.PROD_PRTTN_CODE,\\n          plc.MM_TIME_PERD_END_DATE,\\n          plc.RUN_ID,\\n          process_status\\n     FROM MM_RUN_PRTTN_PLC plc JOIN dpf_all_run_vw run ON run.run_id = plc.run_id\\\"\\\"\\\"\\n\\ndf_mm_run_prttn_run_sttus_vw  = spark.sql(prttn_run_stat)\\ndf_mm_run_prttn_run_sttus_vw = convert_cols_to_lower(df_mm_run_prttn_run_sttus_vw)\\n# df_mm_run_prttn_run_sttus_vw.createOrReplaceTempView('MM_RUN_PRTTN_RUN_STTUS_VW')\\n\\n\\nTIME_PERD_CLASS_CODE = 'MTH'\\ndf7 = df_mm_run_prttn_run_sttus_vw.filter(f\\\"cntrt_id = {cntrt_id} and time_perd_class_code = '{TIME_PERD_CLASS_CODE}' AND (run_id = {run_id} or (run_id <> {run_id} and process_status= 'FINISHED'))\\\")\\ndf7 = df7.withColumn('run_id', col('run_id').cast('int'))\\ndf8  = df7.groupBy('mm_time_perd_end_date','prod_prttn_code','fact_type_code','cntrt_id','time_perd_class_code','srce_sys_id').agg(max('run_id').alias('run_id'), count('run_id').alias('cnt'))\\n\\n#---------------------------------------------------------------\\n\\n#Set New Time Period Flag\\n\\nfrom pyspark.sql.functions import when\\ndf_new_time_pds = df8.withColumn('new_time_perd_ind', when(col('cnt')==1, lit('Y')).otherwise(lit('N'))).withColumn('pd_time_perd_ind', when(col('cnt')>1, lit('Y')).otherwise(lit('N'))).withColumn('time_factr', lit(1))\\n\\n#-----------------------------------------------------------------\\n\\n# Get fact data previously delivered Time periods\\n\\ndf_new_pds = df_new_time_pds.filter(\\\"new_time_perd_ind='N' \\\")\\n\\n#----------------------------------------------------------------\\n\\ndict_all_dfs['df_new_pds'] = {\\\"df_object\\\" :df_new_pds}\\ndict_all_dfs['df_dqm_prod'] = {\\\"df_object\\\" :df_dqm_prod}\\ndict_all_dfs['df_DQM_CNTRT_MKT'] = {\\\"df_object\\\" :df_DQM_CNTRT_MKT}\\ndict_all_dfs['df_new_time_pds'] = {\\\"df_object\\\" :df_new_time_pds}\\n\\ndf_output_dict['df_new_pds'] = df_new_pds\\ndf_output_dict['df_dqm_prod'] = df_dqm_prod\\ndf_output_dict['df_DQM_CNTRT_MKT'] = df_DQM_CNTRT_MKT\\ndf_output_dict['df_new_time_pds'] = df_new_time_pds\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fact_promo_vw\"\n    },\n    {\n      \"name\": \"df_prod_promo_vw\"\n    },\n    {\n      \"name\": \"df_TP_VALDN_PROD_DIM_VW\"\n    },\n    {\n      \"name\": \"df_xref\"\n    },\n    {\n      \"name\": \"df_run_prttn_plc\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_new_pds\",\n      \"cache\": \"materialize\"\n    },\n    {\n      \"name\": \"df_dqm_prod\",\n      \"cache\": \"materialize\"\n    },\n    {\n      \"name\": \"df_DQM_CNTRT_MKT\",\n      \"cache\": \"materialize\"\n    },\n    {\n      \"name\": \"df_new_time_pds\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[GEN] - Get fact data previously delivered Time periods",
      "predecessorName": "[GEN] - Set New Time Period Flag",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"# Step 2\\n\\nspark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf_fact_promo_img = dict_all_dfs['df_fact_promo_vw'][\\\"df_object\\\"]\\ndf_dqm_prod = dict_all_dfs['df_dqm_prod'][\\\"df_object\\\"]\\ndf_new_pds = dict_all_dfs['df_new_pds'][\\\"df_object\\\"]\\ndf_DQM_CNTRT_MKT = dict_all_dfs['df_DQM_CNTRT_MKT'][\\\"df_object\\\"]\\n\\ndef convert_cols_to_lower(df):\\n  cols = df.columns\\n  cols_lower = [col.lower() for col in cols]\\n  df = df.select(*cols_lower)\\n  return df\\n\\nsrce_sys_id = <<SRCE_SYS_ID>>\\ncntrt_id = <<CNTRT_ID>>\\n\\n\\n\\n\\n\\ntry:\\n  df_mth_fct = spark.read.format('parquet').option(\\\"ignoreCorruptFiles\\\", True).option('ignoreMissingFiles', True).load('/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_TP_<<TIME_PERD_CLASS_CODE>>_FCT/part_srce_sys_id=<<SRCE_SYS_ID>>/part_cntrt_id={cntrt_id}')\\nexcept Exception as x:\\n  df_mth_fct = spark.read.format(\\\"parquet\\\").load(\\\"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_TP_FCT_SCHEMA\\\").limit(0)\\n\\ndf_mth_fct = convert_cols_to_lower(df_mth_fct)\\n\\ndf_new_pds = convert_cols_to_lower(df_new_pds)\\ndf_DQM_CNTRT_MKT = convert_cols_to_lower(df_DQM_CNTRT_MKT)\\n\\nfrom pyspark.sql.functions import expr, lit, when, col\\n\\ndf_curr_fct = df_dqm_prod.join(df_fact_promo_img, df_dqm_prod.prod_skid == df_fact_promo_img.prod_skid , \\\"inner\\\").join(df_new_pds, (df_fact_promo_img.mm_time_perd_end_date == df_new_pds.mm_time_perd_end_date) & (df_fact_promo_img.srce_sys_id == df_new_pds.srce_sys_id) & (df_fact_promo_img.prod_prttn_code == df_new_pds.prod_prttn_code) & (df_fact_promo_img.cntrt_id == df_new_pds.cntrt_id) & (df_fact_promo_img.fact_type_code == df_new_pds.fact_type_code) ,\\\"inner\\\").join(df_mth_fct, (df_new_pds.mm_time_perd_end_date == df_mth_fct.mm_time_perd_end_date) & (df_new_pds.srce_sys_id == df_mth_fct.srce_sys_id) & (df_new_pds.prod_prttn_code == df_mth_fct.prod_prttn_code) & (df_new_pds.cntrt_id == df_mth_fct.cntrt_id) & (df_new_pds.fact_type_code == df_mth_fct.fact_type_code) & (df_dqm_prod.prod_skid == df_mth_fct.prod_skid) , \\\"inner\\\" ).join(df_DQM_CNTRT_MKT, (df_fact_promo_img.mkt_skid == df_DQM_CNTRT_MKT.mkt_top_node_skid) & (df_mth_fct.mkt_skid == df_DQM_CNTRT_MKT.mkt_top_node_skid)  ,\\\"inner\\\").select(df_dqm_prod.prod_skid,\\tdf_dqm_prod. run_id,df_dqm_prod.prod_lvl,\\tdf_dqm_prod. prod_name,\\tdf_dqm_prod. prod_desc,\\tdf_dqm_prod. prod_lvl_id,\\tdf_dqm_prod. prod_lvl_name,\\tdf_dqm_prod. all_prod_name,\\tdf_dqm_prod. gbu_id,\\tdf_dqm_prod. gbu_name,\\tdf_dqm_prod. sub_gbu_id,\\tdf_dqm_prod. sub_gbu_name,\\tdf_dqm_prod. categ_id,\\tdf_dqm_prod. categ_name,\\tdf_dqm_prod. custm_agg_ind,\\tdf_dqm_prod. pg_absbc_txt,\\tdf_dqm_prod. pg_adtv_txt,\\tdf_dqm_prod. pg_airfl_sttng,\\tdf_dqm_prod. pg_antbc,\\tdf_dqm_prod. pg_appl,\\tdf_dqm_prod. pg_asmbl_txt,\\tdf_dqm_prod. pg_attch,\\tdf_dqm_prod. pg_adnce_txt,\\tdf_dqm_prod. pg_base_pack_cnt_txt,\\tdf_dqm_prod. pg_base_roll_eqvnc_txt,\\tdf_dqm_prod. pg_base_roll_life_txt,\\tdf_dqm_prod. pg_base_size_txt,\\tdf_dqm_prod. pg_base_size_rng_txt,\\tdf_dqm_prod. pg_bttry_use_time,\\tdf_dqm_prod. pg_benft_txt,\\tdf_dqm_prod. pg_blgcl,\\tdf_dqm_prod. pg_blade_size,\\tdf_dqm_prod. pg_blade_type,\\tdf_dqm_prod. pg_blndr_shaft,\\tdf_dqm_prod. pg_body_txt,\\tdf_dqm_prod. pg_boutq,\\tdf_dqm_prod. pg_brand_txt,\\tdf_dqm_prod. pg_brand_acmld_txt,\\tdf_dqm_prod. pg_brand_desc,\\tdf_dqm_prod. pg_breed_txt,\\tdf_dqm_prod. pg_brstl_frmns_txt,\\tdf_dqm_prod. pg_brstl_type,\\tdf_dqm_prod. pg_bundl,\\tdf_dqm_prod. pg_calcn_txt,\\tdf_dqm_prod. pg_cpcty_ctrl,\\tdf_dqm_prod. pg_care_adtv,\\tdf_dqm_prod. pg_categ_txt,\\tdf_dqm_prod. pg_categ_algn_txt,\\tdf_dqm_prod. pg_cell_prsnc_txt,\\tdf_dqm_prod. pg_cell_size_txt,\\tdf_dqm_prod. pg_crmic_plate,\\tdf_dqm_prod. pg_chrg_time_txt,\\tdf_dqm_prod. pg_chmst_txt,\\tdf_dqm_prod. pg_clean_chrg,\\tdf_dqm_prod. pg_clctn_txt,\\tdf_dqm_prod. pg_color_txt,\\tdf_dqm_prod. pg_color_grp,\\tdf_dqm_prod. pg_color_prfum,\\tdf_dqm_prod. pg_co_type,\\tdf_dqm_prod. pg_cmpr_to_claim_txt,\\tdf_dqm_prod. pg_conc_txt,\\tdf_dqm_prod. pg_cool_shot,\\tdf_dqm_prod. pg_cord,\\tdf_dqm_prod. pg_cough_type,\\tdf_dqm_prod. pg_cnt_txt,\\tdf_dqm_prod. pg_cvrg_txt,\\tdf_dqm_prod. pg_custm_sub_brand_txt,\\tdf_dqm_prod. pg_dyprt_txt,\\tdf_dqm_prod. pg_deal_txt,\\tdf_dqm_prod. pg_dtctn_claim_txt,\\tdf_dqm_prod. pg_diapr_size_txt,\\tdf_dqm_prod. pg_difsr_attch,\\tdf_dqm_prod. pg_dsply_txt,\\tdf_dqm_prod. pg_dspbl_blade,\\tdf_dqm_prod. pg_dose_txt,\\tdf_dqm_prod. pg_durtn_txt,\\tdf_dqm_prod. pg_duty,\\tdf_dqm_prod. pg_emlsn,\\tdf_dqm_prod. pg_end_benft,\\tdf_dqm_prod. pg_envtl_claim_txt,\\tdf_dqm_prod. pg_extnb_handl,\\tdf_dqm_prod. pg_extra_roll_life_txt,\\tdf_dqm_prod. pg_facil_epltr_attch,\\tdf_dqm_prod. pg_famly,\\tdf_dqm_prod. pg_featr_txt,\\tdf_dqm_prod. pg_flavr_txt,\\tdf_dqm_prod. pg_form_txt,\\tdf_dqm_prod. pg_formt,\\tdf_dqm_prod. pg_frag,\\tdf_dqm_prod. pg_free_vol,\\tdf_dqm_prod. pg_freq_of_use,\\tdf_dqm_prod. pg_gendr_txt,\\tdf_dqm_prod. pg_gift_set,\\tdf_dqm_prod. pg_gbu_txt,\\tdf_dqm_prod. pg_globl_gendr_txt,\\tdf_dqm_prod. pg_good_hair_day_txt,\\tdf_dqm_prod. pg_gray_cvrg_txt,\\tdf_dqm_prod. pg_grp_brand_txt,\\tdf_dqm_prod. pg_grp_diapr_size_txt,\\tdf_dqm_prod. pg_grp_scent_txt,\\tdf_dqm_prod. pg_grp_seg_txt,\\tdf_dqm_prod. pg_grp_size_txt,\\tdf_dqm_prod. pg_grp_strth_txt,\\tdf_dqm_prod. pg_grp_sub_brand_txt,\\tdf_dqm_prod. pg_hair_type,\\tdf_dqm_prod. pg_handl_type_txt,\\tdf_dqm_prod. pg_head_foil_type,\\tdf_dqm_prod. pg_head_size_txt,\\tdf_dqm_prod. pg_head_type,\\tdf_dqm_prod. pg_heat_airfl_sttng,\\tdf_dqm_prod. pg_heat_sttng,\\tdf_dqm_prod. pg_herbl,\\tdf_dqm_prod. pg_hold_lvl,\\tdf_dqm_prod. pg_ingr_txt,\\tdf_dqm_prod. pg_ion_tech,\\tdf_dqm_prod. pg_job_cnt,\\tdf_dqm_prod. pg_large_cnt_pack_txt,\\tdf_dqm_prod. pg_lnch_date,\\tdf_dqm_prod. pg_lngth_txt,\\tdf_dqm_prod. pg_lfstg_txt,\\tdf_dqm_prod. pg_lfstl_txt,\\tdf_dqm_prod. pg_light_dsply_txt,\\tdf_dqm_prod. pg_local_price_tier_txt,\\tdf_dqm_prod. pg_mfgr_txt,\\tdf_dqm_prod. pg_matl_type,\\tdf_dqm_prod. pg_max_wattg,\\tdf_dqm_prod. pg_mega_categ_txt,\\tdf_dqm_prod. pg_mega_prop_txt,\\tdf_dqm_prod. pg_model_num_txt,\\tdf_dqm_prod. pg_motr,\\tdf_dqm_prod. pg_multi_func,\\tdf_dqm_prod. pg_multi_use,\\tdf_dqm_prod. pg_mltpk_flag_txt,\\tdf_dqm_prod. pg_natrl_txt,\\tdf_dqm_prod. pg_odor_remov,\\tdf_dqm_prod. pg_one_num_txt,\\tdf_dqm_prod. pg_pack_cnt_grp_txt,\\tdf_dqm_prod. pg_pack_grp_txt,\\tdf_dqm_prod. pg_pack_type,\\tdf_dqm_prod. pg_pkg_cnt,\\tdf_dqm_prod. pg_pkg_cnt_size_txt,\\tdf_dqm_prod. pg_pkg_size,\\tdf_dqm_prod. pg_pkg_size_2,\\tdf_dqm_prod. pg_pkg_tot,\\tdf_dqm_prod. pg_pkg_type_txt,\\tdf_dqm_prod. pg_phos,\\tdf_dqm_prod. pg_phys_need_txt,\\tdf_dqm_prod. pg_pwr_srce_txt,\\tdf_dqm_prod. pg_pwr_srce_clean_chrg,\\tdf_dqm_prod. pg_price_disc,\\tdf_dqm_prod. pg_price_seg_txt,\\tdf_dqm_prod. pg_price_tier,\\tdf_dqm_prod. pg_prod_claim_txt,\\tdf_dqm_prod. pg_prod_size_txt,\\tdf_dqm_prod. pg_prmtn_rottn,\\tdf_dqm_prod. pg_prmtn_type,\\tdf_dqm_prod. pg_purch_mtvtr_txt,\\tdf_dqm_prod. pg_refl_txt,\\tdf_dqm_prod. pg_refl_cnt_txt,\\tdf_dqm_prod. pg_refl_type_txt,\\tdf_dqm_prod. pg_retl_flag_txt,\\tdf_dqm_prod. pg_roll_eqvnc_txt,\\tdf_dqm_prod. pg_roll_eqvnc_grp_txt,\\tdf_dqm_prod. pg_roll_life_txt,\\tdf_dqm_prod. pg_scent_txt,\\tdf_dqm_prod. pg_scent_strth,\\tdf_dqm_prod. pg_scnd_benft,\\tdf_dqm_prod. pg_sectr_txt,\\tdf_dqm_prod. pg_seg_txt,\\tdf_dqm_prod. pg_sellg_strem_txt,\\tdf_dqm_prod. pg_shade,\\tdf_dqm_prod. pg_shade_lvl_txt,\\tdf_dqm_prod. pg_shave_featr_txt,\\tdf_dqm_prod. pg_shavr_head,\\tdf_dqm_prod. pg_sheet_size_txt,\\tdf_dqm_prod. pg_shelf_loc,\\tdf_dqm_prod. pg_sbd_txt,\\tdf_dqm_prod. pg_shppr_seg,\\tdf_dqm_prod. pg_size_txt,\\tdf_dqm_prod. pg_size_eqvnc_txt,\\tdf_dqm_prod. pg_size_rng,\\tdf_dqm_prod. pg_skin_coolr,\\tdf_dqm_prod. pg_skin_type_txt,\\tdf_dqm_prod. pg_specl_pack_txt,\\tdf_dqm_prod. pg_speed,\\tdf_dqm_prod. pg_steam,\\tdf_dqm_prod. pg_sku_base_desc_txt,\\tdf_dqm_prod. pg_sku_base_size_txt,\\tdf_dqm_prod. pg_sku_detl_txt,\\tdf_dqm_prod. pg_sku_num_txt,\\tdf_dqm_prod. pg_strght_attch,\\tdf_dqm_prod. pg_strth_txt,\\tdf_dqm_prod. pg_sub_brand_txt,\\tdf_dqm_prod. pg_sub_clctn_txt,\\tdf_dqm_prod. pg_sub_form_txt,\\tdf_dqm_prod. pg_sub_grp,\\tdf_dqm_prod. pg_sub_mfgr_txt,\\tdf_dqm_prod. pg_sub_seg,\\tdf_dqm_prod. pg_sub_type,\\tdf_dqm_prod. pg_sub_vty_txt,\\tdf_dqm_prod. pg_sbstr_txt,\\tdf_dqm_prod. pg_sbtnc_type_txt,\\tdf_dqm_prod. pg_suds_txt,\\tdf_dqm_prod. pg_sugar_cntnt_txt,\\tdf_dqm_prod. pg_super_categ_txt,\\tdf_dqm_prod. pg_sys_txt,\\tdf_dqm_prod. pg_trgt_aplnc,\\tdf_dqm_prod. pg_trgt_user,\\tdf_dqm_prod. pg_tech_txt,\\tdf_dqm_prod. pg_temp,\\tdf_dqm_prod. pg_test_cnt_txt,\\tdf_dqm_prod. pg_txtr_txt,\\tdf_dqm_prod. pg_thkns_txt,\\tdf_dqm_prod. pg_tier,\\tdf_dqm_prod. pg_time_txt,\\tdf_dqm_prod. pg_tone_txt,\\tdf_dqm_prod. pg_tot_cnt_txt,\\tdf_dqm_prod. pg_tot_cvrg_txt,\\tdf_dqm_prod. pg_tot_pack_cnt_txt,\\tdf_dqm_prod. pg_tot_size_txt,\\tdf_dqm_prod. pg_trmng_comb_attch,\\tdf_dqm_prod. pg_type_txt,\\tdf_dqm_prod. pg_use_txt,\\tdf_dqm_prod. pg_varnt,\\tdf_dqm_prod. pg_vty_txt,\\tdf_dqm_prod. pg_vers_txt,\\tdf_dqm_prod. pg_vlmzr_attch,\\tdf_dqm_prod. pg_warmr_cnt_txt,\\tdf_dqm_prod. pg_wshld_txt,\\tdf_dqm_prod. pg_wattg,\\tdf_dqm_prod. pg_wet_dry,\\tdf_dqm_prod. pg_wing_color_grp,\\tdf_dqm_prod. absbc_txt,\\tdf_dqm_prod. absbc_wetns_comp_featr_txt,\\tdf_dqm_prod. acsry_txt,\\tdf_dqm_prod. aim_methd_txt,\\tdf_dqm_prod. etoh_prsnc_claim_txt,\\tdf_dqm_prod. anmal_txt,\\tdf_dqm_prod. anmal_size_txt,\\tdf_dqm_prod. antpr_txt,\\tdf_dqm_prod. aplnc_attch_txt,\\tdf_dqm_prod. aplnc_color_txt,\\tdf_dqm_prod. aplnc_model_dsign_name_txt,\\tdf_dqm_prod. aplnc_plcmt_txt,\\tdf_dqm_prod. appl_txt,\\tdf_dqm_prod. appl_area_txt,\\tdf_dqm_prod. artfc_color_flavr_claim_txt,\\tdf_dqm_prod. adnce_txt,\\tdf_dqm_prod. bag_filtr_featr_txt,\\tdf_dqm_prod. bndng_txt,\\tdf_dqm_prod. bar_size_txt,\\tdf_dqm_prod. base_desc_txt,\\tdf_dqm_prod. base_featr_txt,\\tdf_dqm_prod. base_size_txt,\\tdf_dqm_prod. bttry_cnt_reqmt_txt,\\tdf_dqm_prod. bttry_outdr_chrg_txt,\\tdf_dqm_prod. bttry_type_optn_txt,\\tdf_dqm_prod. bttry_type_reqmt_txt,\\tdf_dqm_prod. benft_txt,\\tdf_dqm_prod. blade_cnt_txt,\\tdf_dqm_prod. blade_dspbl_txt,\\tdf_dqm_prod. blade_featr_txt,\\tdf_dqm_prod. blade_type_txt,\\tdf_dqm_prod. boutq_txt,\\tdf_dqm_prod. brand_comp_flavr_txt,\\tdf_dqm_prod. brand_desc_txt,\\tdf_dqm_prod. brand_famly_txt,\\tdf_dqm_prod. brand_scent_txt,\\tdf_dqm_prod. brand_scent_1_txt,\\tdf_dqm_prod. brand_scent_2_txt,\\tdf_dqm_prod. brand_scent_3_txt,\\tdf_dqm_prod. brand_scent_4_txt,\\tdf_dqm_prod. brand_scent_5_txt,\\tdf_dqm_prod. brand_scent_6_txt,\\tdf_dqm_prod. brand_scent_7_txt,\\tdf_dqm_prod. brand_scent_8_txt,\\tdf_dqm_prod. brand_scent_9_txt,\\tdf_dqm_prod. brtbl_claim_txt,\\tdf_dqm_prod. brstl_type_txt,\\tdf_dqm_prod. brush_featr_txt,\\tdf_dqm_prod. brush_type_txt,\\tdf_dqm_prod. bus_entpr_high_txt,\\tdf_dqm_prod. bus_entpr_low_txt,\\tdf_dqm_prod. calcm_prsnc_claim_txt,\\tdf_dqm_prod. calor_claim_txt,\\tdf_dqm_prod. candl_name_txt,\\tdf_dqm_prod. candl_style_txt,\\tdf_dqm_prod. cpcty_txt,\\tdf_dqm_prod. crbhd_prsnc_claim_txt,\\tdf_dqm_prod. crbnt_ingr_txt,\\tdf_dqm_prod. categ_txt,\\tdf_dqm_prod. cell_size_txt,\\tdf_dqm_prod. char_txt,\\tdf_dqm_prod. chmcl_name_txt,\\tdf_dqm_prod. chmcl_sys_txt,\\tdf_dqm_prod. chlrn_prsnc_claim_txt,\\tdf_dqm_prod. claim_txt,\\tdf_dqm_prod. clean_featr_txt,\\tdf_dqm_prod. clean_width_txt,\\tdf_dqm_prod. cloth_cnt_txt,\\tdf_dqm_prod. coatn_txt,\\tdf_dqm_prod. color_txt,\\tdf_dqm_prod. color_cnt_txt,\\tdf_dqm_prod. color_grp_txt,\\tdf_dqm_prod. color_image_prsnc_txt,\\tdf_dqm_prod. color_stock_num_txt,\\tdf_dqm_prod. cmbpk_txt,\\tdf_dqm_prod. cmbpk_mkt_name_txt,\\tdf_dqm_prod. cmbpk_mltpk_pkg_genl_shape_txt,\\tdf_dqm_prod. cmbpk_prod_txt,\\tdf_dqm_prod. cmdty_grp_txt,\\tdf_dqm_prod. commn_cnsmr_name_txt,\\tdf_dqm_prod. cmpr_to_claim_txt,\\tdf_dqm_prod. cmptv_categ_id_txt,\\tdf_dqm_prod. cpttr_txt,\\tdf_dqm_prod. comp_txt,\\tdf_dqm_prod. conc_txt,\\tdf_dqm_prod. cnstn_txt,\\tdf_dqm_prod. cntnr_txt,\\tdf_dqm_prod. cntnt_txt,\\tdf_dqm_prod. ctrl_featr_txt,\\tdf_dqm_prod. ctrl_type_txt,\\tdf_dqm_prod. ctrld_label_txt,\\tdf_dqm_prod. cord_lngth_txt,\\tdf_dqm_prod. cord_storg_featr_txt,\\tdf_dqm_prod. cnt_txt,\\tdf_dqm_prod. cover_txt,\\tdf_dqm_prod. crmnl_type_txt,\\tdf_dqm_prod. deal_txt,\\tdf_dqm_prod. deca_cmdty_code_txt,\\tdf_dqm_prod. deca_rsl_centl_txt,\\tdf_dqm_prod. deca_rsl_hdqtr_txt,\\tdf_dqm_prod. deca_rsl_midw_txt,\\tdf_dqm_prod. deca_rsl_ne_txt,\\tdf_dqm_prod. deca_rsl_nw_txt,\\tdf_dqm_prod. deca_rsl_sthrn_txt,\\tdf_dqm_prod. deca_rsl_sw_txt,\\tdf_dqm_prod. ddrnt_prsnc_claim_txt,\\tdf_dqm_prod. diapr_size_txt,\\tdf_dqm_prod. dmnsn_txt,\\tdf_dqm_prod. dmnsn_ht_txt,\\tdf_dqm_prod. dmnsn_width_txt,\\tdf_dqm_prod. dspns_txt,\\tdf_dqm_prod. dose_txt,\\tdf_dqm_prod. drug_fact_activ_ingr_txt,\\tdf_dqm_prod. drug_fact_activ_ingr_1_txt,\\tdf_dqm_prod. drug_fact_activ_ingr_2_txt,\\tdf_dqm_prod. drug_fact_activ_ingr_3_txt,\\tdf_dqm_prod. drug_fact_activ_ingr_4_txt,\\tdf_dqm_prod. drug_fact_activ_ingr_5_txt,\\tdf_dqm_prod. drug_fact_adult_dose_txt,\\tdf_dqm_prod. drug_fact_adult_dose_exced_txt,\\tdf_dqm_prod. drug_fact_adult_dose_freq_txt,\\tdf_dqm_prod. drug_fact_child_dose_txt,\\tdf_dqm_prod. drug_fact_child_dose_exced_txt,\\tdf_dqm_prod. drug_fact_child_dose_freq_txt,\\tdf_dqm_prod. drug_fact_purps_txt,\\tdf_dqm_prod. durtn_txt,\\tdf_dqm_prod. durtn_claim_txt,\\tdf_dqm_prod. duty_txt,\\tdf_dqm_prod. ease_of_use_txt,\\tdf_dqm_prod. end_benft_txt,\\tdf_dqm_prod. envtl_claim_txt,\\tdf_dqm_prod. extnd_size_txt,\\tdf_dqm_prod. extrr_sfty_txt,\\tdf_dqm_prod. famly_txt,\\tdf_dqm_prod. famly_varnt_txt,\\tdf_dqm_prod. fat_prsnc_claim_txt,\\tdf_dqm_prod. flshl_bulb_name_txt,\\tdf_dqm_prod. flavr_txt,\\tdf_dqm_prod. flurd_prsnc_claim_txt,\\tdf_dqm_prod. flsbl_prsnc_claim_txt,\\tdf_dqm_prod. food_splmt_txt,\\tdf_dqm_prod. form_txt,\\tdf_dqm_prod. frml_txt,\\tdf_dqm_prod. fmltn_txt,\\tdf_dqm_prod. frag_txt,\\tdf_dqm_prod. freq_of_use_txt,\\tdf_dqm_prod. fruit_cntnt_txt,\\tdf_dqm_prod. func_txt,\\tdf_dqm_prod. gendr_txt,\\tdf_dqm_prod. genrc_mdctn_txt,\\tdf_dqm_prod. gtin_txt,\\tdf_dqm_prod. grp_diapr_size_txt,\\tdf_dqm_prod. grp_scent_txt,\\tdf_dqm_prod. grp_seg_txt,\\tdf_dqm_prod. grp_size_txt,\\tdf_dqm_prod. hair_color_after_trmnt_txt,\\tdf_dqm_prod. handl_featr_txt,\\tdf_dqm_prod. head_size_txt,\\tdf_dqm_prod. head_type_txt,\\tdf_dqm_prod. herb_type_txt,\\tdf_dqm_prod. holdr_comp_txt,\\tdf_dqm_prod. hose_featr_txt,\\tdf_dqm_prod. hose_lngth_txt,\\tdf_dqm_prod. hshld_spclt_aplnc_featr_txt,\\tdf_dqm_prod. hdrtn_txt,\\tdf_dqm_prod. image_carrd_txt,\\tdf_dqm_prod. info_1_txt,\\tdf_dqm_prod. info_2_txt,\\tdf_dqm_prod. info_3_txt,\\tdf_dqm_prod. info_dspsl_methd_txt,\\tdf_dqm_prod. ingr_txt,\\tdf_dqm_prod. item_name_on_label_txt,\\tdf_dqm_prod. kind_prod_txt,\\tdf_dqm_prod. kind_trmnt_txt,\\tdf_dqm_prod. lnch_date_txt,\\tdf_dqm_prod. lngth_txt,\\tdf_dqm_prod. lcnsd_tm_txt,\\tdf_dqm_prod. lid_featr_txt,\\tdf_dqm_prod. lfstg_txt,\\tdf_dqm_prod. light_dsply_txt,\\tdf_dqm_prod. loc_txt,\\tdf_dqm_prod. long_prod_desc_txt,\\tdf_dqm_prod. major_seg_txt,\\tdf_dqm_prod. manul_elctr_txt,\\tdf_dqm_prod. mfgr_name_txt,\\tdf_dqm_prod. mfg_prcss_txt,\\tdf_dqm_prod. mfg_prcss_packd_in_txt,\\tdf_dqm_prod. matl_sbtnc_txt,\\tdf_dqm_prod. matl_type_txt,\\tdf_dqm_prod. max_bttry_cnt_txt,\\tdf_dqm_prod. med_form_txt,\\tdf_dqm_prod. mdctn_txt,\\tdf_dqm_prod. mega_brand_txt,\\tdf_dqm_prod. mrbu_txt,\\tdf_dqm_prod. minrl_type_txt,\\tdf_dqm_prod. model_num_txt,\\tdf_dqm_prod. multi_func,\\tdf_dqm_prod. mltpk_txt,\\tdf_dqm_prod. naked_prod_genl_shape_txt,\\tdf_dqm_prod. naked_prod_size_claim_txt,\\tdf_dqm_prod. naked_prod_srce_txt,\\tdf_dqm_prod. num_of_bttry_txt,\\tdf_dqm_prod. num_one_txt,\\tdf_dqm_prod. ntrnl_hlth_claim_txt,\\tdf_dqm_prod. occsn_txt,\\tdf_dqm_prod. odor_absbc_claim_txt,\\tdf_dqm_prod. oil_ctrl_txt,\\tdf_dqm_prod. oil_prsnc_claim_txt,\\tdf_dqm_prod. oil_type_txt,\\tdf_dqm_prod. oper_noise_claim_txt,\\tdf_dqm_prod. optn_txt,\\tdf_dqm_prod. orgnc_claim_txt,\\tdf_dqm_prod. orign_txt,\\tdf_dqm_prod. pack_txt,\\tdf_dqm_prod. pack_grp_txt,\\tdf_dqm_prod. pack_size_txt,\\tdf_dqm_prod. pack_type_txt,\\tdf_dqm_prod. pkg_cnt_size_txt,\\tdf_dqm_prod. pkg_dlvry_methd_txt,\\tdf_dqm_prod. pkg_fastn_methd_txt,\\tdf_dqm_prod. pkg_featr_tm_txt,\\tdf_dqm_prod. pkg_genl_shape_txt,\\tdf_dqm_prod. pkg_mfg_prcss_txt,\\tdf_dqm_prod. pkg_matl_sbtnc_txt,\\tdf_dqm_prod. pkg_prstn_optn_txt,\\tdf_dqm_prod. pkg_prmtn_txt,\\tdf_dqm_prod. pkg_qty_txt,\\tdf_dqm_prod. pkg_trgt_use_txt,\\tdf_dqm_prod. pkg_top_openg_txt,\\tdf_dqm_prod. pkg_type_txt,\\tdf_dqm_prod. paper_ply_txt,\\tdf_dqm_prod. ply_txt,\\tdf_dqm_prod. ptpri_item_txt,\\tdf_dqm_prod. pwr_txt,\\tdf_dqm_prod. pwr_claim_txt,\\tdf_dqm_prod. pwr_sfty_featr_txt,\\tdf_dqm_prod. pwr_seg_txt,\\tdf_dqm_prod. pwr_srce_txt,\\tdf_dqm_prod. pwr_sub_seg_txt,\\tdf_dqm_prod. prepn_methd_txt,\\tdf_dqm_prod. prstn_txt,\\tdf_dqm_prod. prstv_prsnc_claim_txt,\\tdf_dqm_prod. price_factr_txt,\\tdf_dqm_prod. price_seg_txt,\\tdf_dqm_prod. price_tier_txt,\\tdf_dqm_prod. primy_md_txt,\\tdf_dqm_prod. priv_label_txt,\\tdf_dqm_prod. prod_txt,\\tdf_dqm_prod. prod_1_txt,\\tdf_dqm_prod. prod_2_txt,\\tdf_dqm_prod. prod_3_txt,\\tdf_dqm_prod. prod_4_txt,\\tdf_dqm_prod. prod_5_txt,\\tdf_dqm_prod. prod_6_txt,\\tdf_dqm_prod. prod_7_txt,\\tdf_dqm_prod. prod_8_txt,\\tdf_dqm_prod. prod_9_txt,\\tdf_dqm_prod. prod_claim_txt,\\tdf_dqm_prod. prod_image_age_grp_txt,\\tdf_dqm_prod. prod_image_gendr_age_grp_txt,\\tdf_dqm_prod. prod_size_txt,\\tdf_dqm_prod. prod_size_1_txt,\\tdf_dqm_prod. prod_size_2_txt,\\tdf_dqm_prod. prod_size_3_txt,\\tdf_dqm_prod. prod_size_4_txt,\\tdf_dqm_prod. prod_size_5_txt,\\tdf_dqm_prod. prod_size_6_txt,\\tdf_dqm_prod. prod_size_7_txt,\\tdf_dqm_prod. prod_size_8_txt,\\tdf_dqm_prod. prod_size_9_txt,\\tdf_dqm_prod. prmtn_txt,\\tdf_dqm_prod. prmtn_type_txt,\\tdf_dqm_prod. protn_prsnc_claim_txt,\\tdf_dqm_prod. rng_txt,\\tdf_dqm_prod. rchrg_time_txt,\\tdf_dqm_prod. ref_txt,\\tdf_dqm_prod. refl_type_txt,\\tdf_dqm_prod. rbu_txt,\\tdf_dqm_prod. reslt_readt_txt,\\tdf_dqm_prod. reuse_txt,\\tdf_dqm_prod. rinse_txt,\\tdf_dqm_prod. roll_lngth_txt,\\tdf_dqm_prod. roll_life_txt,\\tdf_dqm_prod. scent_txt,\\tdf_dqm_prod. scent_1_txt,\\tdf_dqm_prod. scnd_benft_txt,\\tdf_dqm_prod. seg_txt,\\tdf_dqm_prod. srvng_per_cntnr_txt,\\tdf_dqm_prod. shade_txt,\\tdf_dqm_prod. shavr_featr_txt,\\tdf_dqm_prod. shvng_sys_txt,\\tdf_dqm_prod. sheet_cnt_txt,\\tdf_dqm_prod. sheet_dmnsn_lngth_txt,\\tdf_dqm_prod. sheet_dmnsn_width_txt,\\tdf_dqm_prod. short_prod_desc_txt,\\tdf_dqm_prod. size_txt,\\tdf_dqm_prod. size_absrp_txt,\\tdf_dqm_prod. size_rng_txt,\\tdf_dqm_prod. size_varnt_txt,\\tdf_dqm_prod. skin_coat_claim_txt,\\tdf_dqm_prod. skin_type_txt,\\tdf_dqm_prod. speed_txt,\\tdf_dqm_prod. spray_featr_txt,\\tdf_dqm_prod. su_factr_txt,\\tdf_dqm_prod. strgc_ingr_prsnc_claim_txt,\\tdf_dqm_prod. strth_txt,\\tdf_dqm_prod. strth_claim_txt,\\tdf_dqm_prod. style_txt,\\tdf_dqm_prod. sub_brand_txt,\\tdf_dqm_prod. sub_categ_txt,\\tdf_dqm_prod. sub_prtct_factr_txt,\\tdf_dqm_prod. sub_seg_txt,\\tdf_dqm_prod. sub_type_txt,\\tdf_dqm_prod. suctn_clean_claim_txt,\\tdf_dqm_prod. suds_txt,\\tdf_dqm_prod. splmt_fact_srvng_hshld_txt,\\tdf_dqm_prod. splmt_fact_srvng_mtrc_txt,\\tdf_dqm_prod. splmt_fact_srvng_per_cntnr_txt,\\tdf_dqm_prod. splmt_type_txt,\\tdf_dqm_prod. surfc_ht_featr_txt,\\tdf_dqm_prod. swtnr_txt,\\tdf_dqm_prod. swtnr_prsnc_claim_txt,\\tdf_dqm_prod. swtnr_type_txt,\\tdf_dqm_prod. syntd_commn_cnsmr_name_txt,\\tdf_dqm_prod. trgt_anmal_txt,\\tdf_dqm_prod. trgt_anmal_naked_prod_size_txt,\\tdf_dqm_prod. trgt_aplnc_txt,\\tdf_dqm_prod. trgt_grp_txt,\\tdf_dqm_prod. trgt_grp_age_txt,\\tdf_dqm_prod. trgt_grp_cond_txt,\\tdf_dqm_prod. trgt_grp_cond_claim_txt,\\tdf_dqm_prod. trgt_grp_gendr_txt,\\tdf_dqm_prod. trgt_mdctn_grp_txt,\\tdf_dqm_prod. trgt_skin_cond_txt,\\tdf_dqm_prod. trgt_use_txt,\\tdf_dqm_prod. trgt_user_txt,\\tdf_dqm_prod. tartr_prsnc_claim_txt,\\tdf_dqm_prod. test_reslt_durtn_txt,\\tdf_dqm_prod. thkns_txt,\\tdf_dqm_prod. tier_txt,\\tdf_dqm_prod. timer_ctrl_txt,\\tdf_dqm_prod. thpst_comp_size_txt,\\tdf_dqm_prod. top_sheet_txt,\\tdf_dqm_prod. tot_brand_txt,\\tdf_dqm_prod. tot_bus_txt,\\tdf_dqm_prod. tune_titl_txt,\\tdf_dqm_prod. tune_titl_artst_txt,\\tdf_dqm_prod. type_txt,\\tdf_dqm_prod. type_1_txt,\\tdf_dqm_prod. type_2_txt,\\tdf_dqm_prod. type_3_txt,\\tdf_dqm_prod. unit_txt,\\tdf_dqm_prod. uom_txt,\\tdf_dqm_prod. usda_orgnc_seal_txt,\\tdf_dqm_prod. upc_txt,\\tdf_dqm_prod. upc_detl_txt,\\tdf_dqm_prod. usage_amt_txt,\\tdf_dqm_prod. use_txt,\\tdf_dqm_prod. use_as_refl_ind_txt,\\tdf_dqm_prod. vacum_carpt_clnr_txt,\\tdf_dqm_prod. vagnl_yeast_trmnt_durtn_txt,\\tdf_dqm_prod. varnt_txt,\\tdf_dqm_prod. vty_txt,\\tdf_dqm_prod. vers_txt,\\tdf_dqm_prod. vitmn_txt,\\tdf_dqm_prod. vitmn_prsnc_claim_txt,\\tdf_dqm_prod. vitmn_type_txt,\\tdf_dqm_prod. voltg_txt,\\tdf_dqm_prod. wshld_cnt_txt,\\tdf_dqm_prod. wght_txt,\\tdf_dqm_prod. wght_grwth_claim_txt,\\tdf_dqm_prod. wetns_prot_claim_txt,\\tdf_dqm_prod. white_uv_txt,\\tdf_dqm_prod. wick_cnt_txt,\\tdf_dqm_prod. wing_txt,\\tdf_dqm_prod. wood_color_txt,\\tdf_dqm_prod. yield_txt,\\tdf_dqm_prod. pg_top_sheet,\\tdf_dqm_prod. pg_wing,\\tdf_dqm_prod. pg_prmtd_prod_grp,\\tdf_dqm_prod. pg_age_txt,\\tdf_dqm_prod. pg_stain_fight_txt,\\tdf_dqm_prod. pg_val_add_txt,\\tdf_dqm_prod. pg_ozs_per_load_txt,\\tdf_dqm_prod. pg_mach_type_txt,\\tdf_dqm_prod. age_txt,\\tdf_dqm_prod. stain_fight_txt,\\tdf_dqm_prod. val_add_txt,\\tdf_dqm_prod. ozs_per_load_txt,\\tdf_dqm_prod. mach_type_txt,\\tdf_dqm_prod. pg_prmtd_prod_id,\\tdf_dqm_prod. pg_price_rottn,\\tdf_dqm_prod. pg_plr_txt,\\tdf_dqm_prod. plr_txt,\\tdf_dqm_prod. basic_size_txt,\\tdf_dqm_prod. pg_basic_size_txt,\\tdf_dqm_prod. aisle_txt,\\tdf_dqm_prod. categ_gift_set_txt,\\tdf_dqm_prod. clnsg_exprc_txt,\\tdf_dqm_prod. gca_top_sheet_def_txt,\\tdf_dqm_prod. globl_pack_type_txt,\\tdf_dqm_prod. grp_benft_txt,\\tdf_dqm_prod. pg_aisle_txt,\\tdf_dqm_prod. pg_categ_gift_set_txt,\\tdf_dqm_prod. pg_clnsg_exprc_txt,\\tdf_dqm_prod. pg_gca_top_sheet_def_txt,\\tdf_dqm_prod. pg_globl_pack_type_txt,\\tdf_dqm_prod. pg_grp_benft_txt,\\tdf_dqm_prod. pg_scent_grp_txt,\\tdf_dqm_prod. pg_shelf_seg_txt,\\tdf_dqm_prod. pg_style_txt,\\tdf_dqm_prod. scent_grp_txt,\\tdf_dqm_prod. shelf_seg_txt,\\tdf_dqm_prod. pg_us_offcl_txt,\\tdf_dqm_prod. pg_task_txt,\\tdf_dqm_prod. tot_size_txt,\\tdf_dqm_prod. pg_drop_size_txt,df_fact_promo_img.sales_msu_qty,df_fact_promo_img.sales_mlc_amt,df_fact_promo_img.sales_musd_amt ,df_fact_promo_img.mkt_skid ,df_fact_promo_img.time_perd_id ,df_fact_promo_img.fact_type_code, df_fact_promo_img.mm_time_perd_end_date, df_fact_promo_img.srce_sys_id, df_fact_promo_img.prod_prttn_code, df_fact_promo_img.cntrt_id, df_new_pds.new_time_perd_ind , df_new_pds.time_factr, df_mth_fct.sales_msu_qty.alias('sales_msu_qty1'),df_mth_fct.sales_mlc_amt.alias('sales_mlc_amt1'), df_mth_fct.sales_musd_amt.alias('sales_musd_amt1')  ).withColumn('pd_time_perd_ind', lit('Y')).withColumn('sales_msu_qty_pd', when(col('pd_time_perd_ind')=='Y', 'sales_msu_qty1')).withColumn('sales_mlc_amt_pd', when(col('pd_time_perd_ind')=='Y', 'sales_mlc_amt1')).withColumn('sales_musd_amt_pd', when(col('pd_time_perd_ind')=='Y', 'sales_musd_amt1')).drop('sales_msu_qty1','sales_mlc_amt1','sales_musd_amt1')\\n\\ndict_all_dfs['df_curr_fct'] = {\\\"df_object\\\" :df_curr_fct}\\ndf_output_dict['df_curr_fct'] = df_curr_fct\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_dqm_prod\"\n    },\n    {\n      \"name\": \"df_new_pds\"\n    },\n    {\n      \"name\": \"df_DQM_CNTRT_MKT\"\n    },\n    {\n      \"name\": \"df_fact_promo_vw\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_curr_fct\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[GEN] - Get fact data for newly delivered time periods",
      "predecessorName": "[GEN] - Get fact data previously delivered Time periods",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"#Step 3\\n\\nspark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\n# Get fact data for newly delivered time periods\\n\\nsrce_sys_id = <<SRCE_SYS_ID>>\\n\\ndef convert_cols_to_lower(df):\\n  cols = df.columns\\n  cols_lower = [col.lower() for col in cols]\\n  df = df.select(*cols_lower)\\n  return df\\n\\nfrom pyspark.sql.functions import expr, lit, when, col\\n\\ndf_fact_promo_img = dict_all_dfs['df_fact_promo_vw'][\\\"df_object\\\"]\\ndf_dqm_prod = dict_all_dfs['df_dqm_prod'][\\\"df_object\\\"]\\ndf_new_time_pds = dict_all_dfs['df_new_time_pds'][\\\"df_object\\\"]\\ndf_DQM_CNTRT_MKT = dict_all_dfs['df_DQM_CNTRT_MKT'][\\\"df_object\\\"]\\ndf_new_time_pds = convert_cols_to_lower(df_new_time_pds)\\ndf_dqm_prod = convert_cols_to_lower(df_dqm_prod)\\ndf_DQM_CNTRT_MKT = convert_cols_to_lower(df_DQM_CNTRT_MKT)\\n\\ndf_TIME_PERD_NEW = df_new_time_pds.filter(\\\"new_time_perd_ind='Y' \\\")\\ndf_TIME_PERD_PD = df_new_time_pds.filter(\\\"new_time_perd_ind='N' \\\")\\n\\n\\n#-------------------------------------------------------\\n\\nfrom pyspark.sql.functions import expr\\n\\ndf_new_del_time_pd  = df_dqm_prod.join(df_fact_promo_img, df_dqm_prod.prod_skid == df_fact_promo_img.prod_skid , \\\"inner\\\").join(df_TIME_PERD_NEW, (df_fact_promo_img.mm_time_perd_end_date == df_TIME_PERD_NEW.mm_time_perd_end_date) & (df_fact_promo_img.srce_sys_id == df_TIME_PERD_NEW.srce_sys_id) & (df_fact_promo_img.prod_prttn_code == df_TIME_PERD_NEW.prod_prttn_code) & (df_fact_promo_img.cntrt_id == df_TIME_PERD_NEW.cntrt_id) & (df_fact_promo_img.fact_type_code == df_TIME_PERD_NEW.fact_type_code)  ,\\\"left_outer\\\").join(df_TIME_PERD_PD, (df_fact_promo_img.mm_time_perd_end_date == df_TIME_PERD_PD.mm_time_perd_end_date) & (df_fact_promo_img.srce_sys_id == df_TIME_PERD_PD.srce_sys_id) & (df_fact_promo_img.prod_prttn_code == df_TIME_PERD_PD.prod_prttn_code) & (df_fact_promo_img.cntrt_id == df_TIME_PERD_PD.cntrt_id) & (df_fact_promo_img.fact_type_code == df_TIME_PERD_PD.fact_type_code)  , \\\"left_outer\\\").join(df_DQM_CNTRT_MKT, df_fact_promo_img.mkt_skid == df_DQM_CNTRT_MKT.mkt_top_node_skid  , \\\"inner\\\").select(df_dqm_prod.prod_skid,\\tdf_dqm_prod. run_id,df_dqm_prod.prod_lvl ,df_dqm_prod.prod_prttn_code, df_dqm_prod.cntrt_id, df_dqm_prod.srce_sys_id.alias('srce_sys_id')\\t,df_dqm_prod. prod_name,\\tdf_dqm_prod. prod_desc,\\tdf_dqm_prod. prod_lvl_id,\\tdf_dqm_prod. prod_lvl_name,\\tdf_dqm_prod. all_prod_name,\\tdf_dqm_prod. gbu_id,\\tdf_dqm_prod. gbu_name,\\tdf_dqm_prod. sub_gbu_id,\\tdf_dqm_prod. sub_gbu_name,\\tdf_dqm_prod. categ_id,\\tdf_dqm_prod. categ_name,\\tdf_dqm_prod. custm_agg_ind,\\tdf_dqm_prod. pg_absbc_txt,\\tdf_dqm_prod. pg_adtv_txt,\\tdf_dqm_prod. pg_airfl_sttng,\\tdf_dqm_prod. pg_antbc,\\tdf_dqm_prod. pg_appl,\\tdf_dqm_prod. pg_asmbl_txt,\\tdf_dqm_prod. pg_attch,\\tdf_dqm_prod. pg_adnce_txt,\\tdf_dqm_prod. pg_base_pack_cnt_txt,\\tdf_dqm_prod. pg_base_roll_eqvnc_txt,\\tdf_dqm_prod. pg_base_roll_life_txt,\\tdf_dqm_prod. pg_base_size_txt,\\tdf_dqm_prod. pg_base_size_rng_txt,\\tdf_dqm_prod. pg_bttry_use_time,\\tdf_dqm_prod. pg_benft_txt,\\tdf_dqm_prod. pg_blgcl,\\tdf_dqm_prod. pg_blade_size,\\tdf_dqm_prod. pg_blade_type,\\tdf_dqm_prod. pg_blndr_shaft,\\tdf_dqm_prod. pg_body_txt,\\tdf_dqm_prod. pg_boutq,\\tdf_dqm_prod. pg_brand_txt,\\tdf_dqm_prod. pg_brand_acmld_txt,\\tdf_dqm_prod. pg_brand_desc,\\tdf_dqm_prod. pg_breed_txt,\\tdf_dqm_prod. pg_brstl_frmns_txt,\\tdf_dqm_prod. pg_brstl_type,\\tdf_dqm_prod. pg_bundl,\\tdf_dqm_prod. pg_calcn_txt,\\tdf_dqm_prod. pg_cpcty_ctrl,\\tdf_dqm_prod. pg_care_adtv,\\tdf_dqm_prod. pg_categ_txt,\\tdf_dqm_prod. pg_categ_algn_txt,\\tdf_dqm_prod. pg_cell_prsnc_txt,\\tdf_dqm_prod. pg_cell_size_txt,\\tdf_dqm_prod. pg_crmic_plate,\\tdf_dqm_prod. pg_chrg_time_txt,\\tdf_dqm_prod. pg_chmst_txt,\\tdf_dqm_prod. pg_clean_chrg,\\tdf_dqm_prod. pg_clctn_txt,\\tdf_dqm_prod. pg_color_txt,\\tdf_dqm_prod. pg_color_grp,\\tdf_dqm_prod. pg_color_prfum,\\tdf_dqm_prod. pg_co_type,\\tdf_dqm_prod. pg_cmpr_to_claim_txt,\\tdf_dqm_prod. pg_conc_txt,\\tdf_dqm_prod. pg_cool_shot,\\tdf_dqm_prod. pg_cord,\\tdf_dqm_prod. pg_cough_type,\\tdf_dqm_prod. pg_cnt_txt,\\tdf_dqm_prod. pg_cvrg_txt,\\tdf_dqm_prod. pg_custm_sub_brand_txt,\\tdf_dqm_prod. pg_dyprt_txt,\\tdf_dqm_prod. pg_deal_txt,\\tdf_dqm_prod. pg_dtctn_claim_txt,\\tdf_dqm_prod. pg_diapr_size_txt,\\tdf_dqm_prod. pg_difsr_attch,\\tdf_dqm_prod. pg_dsply_txt,\\tdf_dqm_prod. pg_dspbl_blade,\\tdf_dqm_prod. pg_dose_txt,\\tdf_dqm_prod. pg_durtn_txt,\\tdf_dqm_prod. pg_duty,\\tdf_dqm_prod. pg_emlsn,\\tdf_dqm_prod. pg_end_benft,\\tdf_dqm_prod. pg_envtl_claim_txt,\\tdf_dqm_prod. pg_extnb_handl,\\tdf_dqm_prod. pg_extra_roll_life_txt,\\tdf_dqm_prod. pg_facil_epltr_attch,\\tdf_dqm_prod. pg_famly,\\tdf_dqm_prod. pg_featr_txt,\\tdf_dqm_prod. pg_flavr_txt,\\tdf_dqm_prod. pg_form_txt,\\tdf_dqm_prod. pg_formt,\\tdf_dqm_prod. pg_frag,\\tdf_dqm_prod. pg_free_vol,\\tdf_dqm_prod. pg_freq_of_use,\\tdf_dqm_prod. pg_gendr_txt,\\tdf_dqm_prod. pg_gift_set,\\tdf_dqm_prod. pg_gbu_txt,\\tdf_dqm_prod. pg_globl_gendr_txt,\\tdf_dqm_prod. pg_good_hair_day_txt,\\tdf_dqm_prod. pg_gray_cvrg_txt,\\tdf_dqm_prod. pg_grp_brand_txt,\\tdf_dqm_prod. pg_grp_diapr_size_txt,\\tdf_dqm_prod. pg_grp_scent_txt,\\tdf_dqm_prod. pg_grp_seg_txt,\\tdf_dqm_prod. pg_grp_size_txt,\\tdf_dqm_prod. pg_grp_strth_txt,\\tdf_dqm_prod. pg_grp_sub_brand_txt,\\tdf_dqm_prod. pg_hair_type,\\tdf_dqm_prod. pg_handl_type_txt,\\tdf_dqm_prod. pg_head_foil_type,\\tdf_dqm_prod. pg_head_size_txt,\\tdf_dqm_prod. pg_head_type,\\tdf_dqm_prod. pg_heat_airfl_sttng,\\tdf_dqm_prod. pg_heat_sttng,\\tdf_dqm_prod. pg_herbl,\\tdf_dqm_prod. pg_hold_lvl,\\tdf_dqm_prod. pg_ingr_txt,\\tdf_dqm_prod. pg_ion_tech,\\tdf_dqm_prod. pg_job_cnt,\\tdf_dqm_prod. pg_large_cnt_pack_txt,\\tdf_dqm_prod. pg_lnch_date,\\tdf_dqm_prod. pg_lngth_txt,\\tdf_dqm_prod. pg_lfstg_txt,\\tdf_dqm_prod. pg_lfstl_txt,\\tdf_dqm_prod. pg_light_dsply_txt,\\tdf_dqm_prod. pg_local_price_tier_txt,\\tdf_dqm_prod. pg_mfgr_txt,\\tdf_dqm_prod. pg_matl_type,\\tdf_dqm_prod. pg_max_wattg,\\tdf_dqm_prod. pg_mega_categ_txt,\\tdf_dqm_prod. pg_mega_prop_txt,\\tdf_dqm_prod. pg_model_num_txt,\\tdf_dqm_prod. pg_motr,\\tdf_dqm_prod. pg_multi_func,\\tdf_dqm_prod. pg_multi_use,\\tdf_dqm_prod. pg_mltpk_flag_txt,\\tdf_dqm_prod. pg_natrl_txt,\\tdf_dqm_prod. pg_odor_remov,\\tdf_dqm_prod. pg_one_num_txt,\\tdf_dqm_prod. pg_pack_cnt_grp_txt,\\tdf_dqm_prod. pg_pack_grp_txt,\\tdf_dqm_prod. pg_pack_type,\\tdf_dqm_prod. pg_pkg_cnt,\\tdf_dqm_prod. pg_pkg_cnt_size_txt,\\tdf_dqm_prod. pg_pkg_size,\\tdf_dqm_prod. pg_pkg_size_2,\\tdf_dqm_prod. pg_pkg_tot,\\tdf_dqm_prod. pg_pkg_type_txt,\\tdf_dqm_prod. pg_phos,\\tdf_dqm_prod. pg_phys_need_txt,\\tdf_dqm_prod. pg_pwr_srce_txt,\\tdf_dqm_prod. pg_pwr_srce_clean_chrg,\\tdf_dqm_prod. pg_price_disc,\\tdf_dqm_prod. pg_price_seg_txt,\\tdf_dqm_prod. pg_price_tier,\\tdf_dqm_prod. pg_prod_claim_txt,\\tdf_dqm_prod. pg_prod_size_txt,\\tdf_dqm_prod. pg_prmtn_rottn,\\tdf_dqm_prod. pg_prmtn_type,\\tdf_dqm_prod. pg_purch_mtvtr_txt,\\tdf_dqm_prod. pg_refl_txt,\\tdf_dqm_prod. pg_refl_cnt_txt,\\tdf_dqm_prod. pg_refl_type_txt,\\tdf_dqm_prod. pg_retl_flag_txt,\\tdf_dqm_prod. pg_roll_eqvnc_txt,\\tdf_dqm_prod. pg_roll_eqvnc_grp_txt,\\tdf_dqm_prod. pg_roll_life_txt,\\tdf_dqm_prod. pg_scent_txt,\\tdf_dqm_prod. pg_scent_strth,\\tdf_dqm_prod. pg_scnd_benft,\\tdf_dqm_prod. pg_sectr_txt,\\tdf_dqm_prod. pg_seg_txt,\\tdf_dqm_prod. pg_sellg_strem_txt,\\tdf_dqm_prod. pg_shade,\\tdf_dqm_prod. pg_shade_lvl_txt,\\tdf_dqm_prod. pg_shave_featr_txt,\\tdf_dqm_prod. pg_shavr_head,\\tdf_dqm_prod. pg_sheet_size_txt,\\tdf_dqm_prod. pg_shelf_loc,\\tdf_dqm_prod. pg_sbd_txt,\\tdf_dqm_prod. pg_shppr_seg,\\tdf_dqm_prod. pg_size_txt,\\tdf_dqm_prod. pg_size_eqvnc_txt,\\tdf_dqm_prod. pg_size_rng,\\tdf_dqm_prod. pg_skin_coolr,\\tdf_dqm_prod. pg_skin_type_txt,\\tdf_dqm_prod. pg_specl_pack_txt,\\tdf_dqm_prod. pg_speed,\\tdf_dqm_prod. pg_steam,\\tdf_dqm_prod. pg_sku_base_desc_txt,\\tdf_dqm_prod. pg_sku_base_size_txt,\\tdf_dqm_prod. pg_sku_detl_txt,\\tdf_dqm_prod. pg_sku_num_txt,\\tdf_dqm_prod. pg_strght_attch,\\tdf_dqm_prod. pg_strth_txt,\\tdf_dqm_prod. pg_sub_brand_txt,\\tdf_dqm_prod. pg_sub_clctn_txt,\\tdf_dqm_prod. pg_sub_form_txt,\\tdf_dqm_prod. pg_sub_grp,\\tdf_dqm_prod. pg_sub_mfgr_txt,\\tdf_dqm_prod. pg_sub_seg,\\tdf_dqm_prod. pg_sub_type,\\tdf_dqm_prod. pg_sub_vty_txt,\\tdf_dqm_prod. pg_sbstr_txt,\\tdf_dqm_prod. pg_sbtnc_type_txt,\\tdf_dqm_prod. pg_suds_txt,\\tdf_dqm_prod. pg_sugar_cntnt_txt,\\tdf_dqm_prod. pg_super_categ_txt,\\tdf_dqm_prod. pg_sys_txt,\\tdf_dqm_prod. pg_trgt_aplnc,\\tdf_dqm_prod. pg_trgt_user,\\tdf_dqm_prod. pg_tech_txt,\\tdf_dqm_prod. pg_temp,\\tdf_dqm_prod. pg_test_cnt_txt,\\tdf_dqm_prod. pg_txtr_txt,\\tdf_dqm_prod. pg_thkns_txt,\\tdf_dqm_prod. pg_tier,\\tdf_dqm_prod. pg_time_txt,\\tdf_dqm_prod. pg_tone_txt,\\tdf_dqm_prod. pg_tot_cnt_txt,\\tdf_dqm_prod. pg_tot_cvrg_txt,\\tdf_dqm_prod. pg_tot_pack_cnt_txt,\\tdf_dqm_prod. pg_tot_size_txt,\\tdf_dqm_prod. pg_trmng_comb_attch,\\tdf_dqm_prod. pg_type_txt,\\tdf_dqm_prod. pg_use_txt,\\tdf_dqm_prod. pg_varnt,\\tdf_dqm_prod. pg_vty_txt,\\tdf_dqm_prod. pg_vers_txt,\\tdf_dqm_prod. pg_vlmzr_attch,\\tdf_dqm_prod. pg_warmr_cnt_txt,\\tdf_dqm_prod. pg_wshld_txt,\\tdf_dqm_prod. pg_wattg,\\tdf_dqm_prod. pg_wet_dry,\\tdf_dqm_prod. pg_wing_color_grp,\\tdf_dqm_prod. absbc_txt,\\tdf_dqm_prod. absbc_wetns_comp_featr_txt,\\tdf_dqm_prod. acsry_txt,\\tdf_dqm_prod. aim_methd_txt,\\tdf_dqm_prod. etoh_prsnc_claim_txt,\\tdf_dqm_prod. anmal_txt,\\tdf_dqm_prod. anmal_size_txt,\\tdf_dqm_prod. antpr_txt,\\tdf_dqm_prod. aplnc_attch_txt,\\tdf_dqm_prod. aplnc_color_txt,\\tdf_dqm_prod. aplnc_model_dsign_name_txt,\\tdf_dqm_prod. aplnc_plcmt_txt,\\tdf_dqm_prod. appl_txt,\\tdf_dqm_prod. appl_area_txt,\\tdf_dqm_prod. artfc_color_flavr_claim_txt,\\tdf_dqm_prod. adnce_txt,\\tdf_dqm_prod. bag_filtr_featr_txt,\\tdf_dqm_prod. bndng_txt,\\tdf_dqm_prod. bar_size_txt,\\tdf_dqm_prod. base_desc_txt,\\tdf_dqm_prod. base_featr_txt,\\tdf_dqm_prod. base_size_txt,\\tdf_dqm_prod. bttry_cnt_reqmt_txt,\\tdf_dqm_prod. bttry_outdr_chrg_txt,\\tdf_dqm_prod. bttry_type_optn_txt,\\tdf_dqm_prod. bttry_type_reqmt_txt,\\tdf_dqm_prod. benft_txt,\\tdf_dqm_prod. blade_cnt_txt,\\tdf_dqm_prod. blade_dspbl_txt,\\tdf_dqm_prod. blade_featr_txt,\\tdf_dqm_prod. blade_type_txt,\\tdf_dqm_prod. boutq_txt,\\tdf_dqm_prod. brand_comp_flavr_txt,\\tdf_dqm_prod. brand_desc_txt,\\tdf_dqm_prod. brand_famly_txt,\\tdf_dqm_prod. brand_scent_txt,\\tdf_dqm_prod. brand_scent_1_txt,\\tdf_dqm_prod. brand_scent_2_txt,\\tdf_dqm_prod. brand_scent_3_txt,\\tdf_dqm_prod. brand_scent_4_txt,\\tdf_dqm_prod. brand_scent_5_txt,\\tdf_dqm_prod. brand_scent_6_txt,\\tdf_dqm_prod. brand_scent_7_txt,\\tdf_dqm_prod. brand_scent_8_txt,\\tdf_dqm_prod. brand_scent_9_txt,\\tdf_dqm_prod. brtbl_claim_txt,\\tdf_dqm_prod. brstl_type_txt,\\tdf_dqm_prod. brush_featr_txt,\\tdf_dqm_prod. brush_type_txt,\\tdf_dqm_prod. bus_entpr_high_txt,\\tdf_dqm_prod. bus_entpr_low_txt,\\tdf_dqm_prod. calcm_prsnc_claim_txt,\\tdf_dqm_prod. calor_claim_txt,\\tdf_dqm_prod. candl_name_txt,\\tdf_dqm_prod. candl_style_txt,\\tdf_dqm_prod. cpcty_txt,\\tdf_dqm_prod. crbhd_prsnc_claim_txt,\\tdf_dqm_prod. crbnt_ingr_txt,\\tdf_dqm_prod. categ_txt,\\tdf_dqm_prod. cell_size_txt,\\tdf_dqm_prod. char_txt,\\tdf_dqm_prod. chmcl_name_txt,\\tdf_dqm_prod. chmcl_sys_txt,\\tdf_dqm_prod. chlrn_prsnc_claim_txt,\\tdf_dqm_prod. claim_txt,\\tdf_dqm_prod. clean_featr_txt,\\tdf_dqm_prod. clean_width_txt,\\tdf_dqm_prod. cloth_cnt_txt,\\tdf_dqm_prod. coatn_txt,\\tdf_dqm_prod. color_txt,\\tdf_dqm_prod. color_cnt_txt,\\tdf_dqm_prod. color_grp_txt,\\tdf_dqm_prod. color_image_prsnc_txt,\\tdf_dqm_prod. color_stock_num_txt,\\tdf_dqm_prod. cmbpk_txt,\\tdf_dqm_prod. cmbpk_mkt_name_txt,\\tdf_dqm_prod. cmbpk_mltpk_pkg_genl_shape_txt,\\tdf_dqm_prod. cmbpk_prod_txt,\\tdf_dqm_prod. cmdty_grp_txt,\\tdf_dqm_prod. commn_cnsmr_name_txt,\\tdf_dqm_prod. cmpr_to_claim_txt,\\tdf_dqm_prod. cmptv_categ_id_txt,\\tdf_dqm_prod. cpttr_txt,\\tdf_dqm_prod. comp_txt,\\tdf_dqm_prod. conc_txt,\\tdf_dqm_prod. cnstn_txt,\\tdf_dqm_prod. cntnr_txt,\\tdf_dqm_prod. cntnt_txt,\\tdf_dqm_prod. ctrl_featr_txt,\\tdf_dqm_prod. ctrl_type_txt,\\tdf_dqm_prod. ctrld_label_txt,\\tdf_dqm_prod. cord_lngth_txt,\\tdf_dqm_prod. cord_storg_featr_txt,\\tdf_dqm_prod. cnt_txt,\\tdf_dqm_prod. cover_txt,\\tdf_dqm_prod. crmnl_type_txt,\\tdf_dqm_prod. deal_txt,\\tdf_dqm_prod. deca_cmdty_code_txt,\\tdf_dqm_prod. deca_rsl_centl_txt,\\tdf_dqm_prod. deca_rsl_hdqtr_txt,\\tdf_dqm_prod. deca_rsl_midw_txt,\\tdf_dqm_prod. deca_rsl_ne_txt,\\tdf_dqm_prod. deca_rsl_nw_txt,\\tdf_dqm_prod. deca_rsl_sthrn_txt,\\tdf_dqm_prod. deca_rsl_sw_txt,\\tdf_dqm_prod. ddrnt_prsnc_claim_txt,\\tdf_dqm_prod. diapr_size_txt,\\tdf_dqm_prod. dmnsn_txt,\\tdf_dqm_prod. dmnsn_ht_txt,\\tdf_dqm_prod. dmnsn_width_txt,\\tdf_dqm_prod. dspns_txt,\\tdf_dqm_prod. dose_txt,\\tdf_dqm_prod. drug_fact_activ_ingr_txt,\\tdf_dqm_prod. drug_fact_activ_ingr_1_txt,\\tdf_dqm_prod. drug_fact_activ_ingr_2_txt,\\tdf_dqm_prod. drug_fact_activ_ingr_3_txt,\\tdf_dqm_prod. drug_fact_activ_ingr_4_txt,\\tdf_dqm_prod. drug_fact_activ_ingr_5_txt,\\tdf_dqm_prod. drug_fact_adult_dose_txt,\\tdf_dqm_prod. drug_fact_adult_dose_exced_txt,\\tdf_dqm_prod. drug_fact_adult_dose_freq_txt,\\tdf_dqm_prod. drug_fact_child_dose_txt,\\tdf_dqm_prod. drug_fact_child_dose_exced_txt,\\tdf_dqm_prod. drug_fact_child_dose_freq_txt,\\tdf_dqm_prod. drug_fact_purps_txt,\\tdf_dqm_prod. durtn_txt,\\tdf_dqm_prod. durtn_claim_txt,\\tdf_dqm_prod. duty_txt,\\tdf_dqm_prod. ease_of_use_txt,\\tdf_dqm_prod. end_benft_txt,\\tdf_dqm_prod. envtl_claim_txt,\\tdf_dqm_prod. extnd_size_txt,\\tdf_dqm_prod. extrr_sfty_txt,\\tdf_dqm_prod. famly_txt,\\tdf_dqm_prod. famly_varnt_txt,\\tdf_dqm_prod. fat_prsnc_claim_txt,\\tdf_dqm_prod. flshl_bulb_name_txt,\\tdf_dqm_prod. flavr_txt,\\tdf_dqm_prod. flurd_prsnc_claim_txt,\\tdf_dqm_prod. flsbl_prsnc_claim_txt,\\tdf_dqm_prod. food_splmt_txt,\\tdf_dqm_prod. form_txt,\\tdf_dqm_prod. frml_txt,\\tdf_dqm_prod. fmltn_txt,\\tdf_dqm_prod. frag_txt,\\tdf_dqm_prod. freq_of_use_txt,\\tdf_dqm_prod. fruit_cntnt_txt,\\tdf_dqm_prod. func_txt,\\tdf_dqm_prod. gendr_txt,\\tdf_dqm_prod. genrc_mdctn_txt,\\tdf_dqm_prod. gtin_txt,\\tdf_dqm_prod. grp_diapr_size_txt,\\tdf_dqm_prod. grp_scent_txt,\\tdf_dqm_prod. grp_seg_txt,\\tdf_dqm_prod. grp_size_txt,\\tdf_dqm_prod. hair_color_after_trmnt_txt,\\tdf_dqm_prod. handl_featr_txt,\\tdf_dqm_prod. head_size_txt,\\tdf_dqm_prod. head_type_txt,\\tdf_dqm_prod. herb_type_txt,\\tdf_dqm_prod. holdr_comp_txt,\\tdf_dqm_prod. hose_featr_txt,\\tdf_dqm_prod. hose_lngth_txt,\\tdf_dqm_prod. hshld_spclt_aplnc_featr_txt,\\tdf_dqm_prod. hdrtn_txt,\\tdf_dqm_prod. image_carrd_txt,\\tdf_dqm_prod. info_1_txt,\\tdf_dqm_prod. info_2_txt,\\tdf_dqm_prod. info_3_txt,\\tdf_dqm_prod. info_dspsl_methd_txt,\\tdf_dqm_prod. ingr_txt,\\tdf_dqm_prod. item_name_on_label_txt,\\tdf_dqm_prod. kind_prod_txt,\\tdf_dqm_prod. kind_trmnt_txt,\\tdf_dqm_prod. lnch_date_txt,\\tdf_dqm_prod. lngth_txt,\\tdf_dqm_prod. lcnsd_tm_txt,\\tdf_dqm_prod. lid_featr_txt,\\tdf_dqm_prod. lfstg_txt,\\tdf_dqm_prod. light_dsply_txt,\\tdf_dqm_prod. loc_txt,\\tdf_dqm_prod. long_prod_desc_txt,\\tdf_dqm_prod. major_seg_txt,\\tdf_dqm_prod. manul_elctr_txt,\\tdf_dqm_prod. mfgr_name_txt,\\tdf_dqm_prod. mfg_prcss_txt,\\tdf_dqm_prod. mfg_prcss_packd_in_txt,\\tdf_dqm_prod. matl_sbtnc_txt,\\tdf_dqm_prod. matl_type_txt,\\tdf_dqm_prod. max_bttry_cnt_txt,\\tdf_dqm_prod. med_form_txt,\\tdf_dqm_prod. mdctn_txt,\\tdf_dqm_prod. mega_brand_txt,\\tdf_dqm_prod. mrbu_txt,\\tdf_dqm_prod. minrl_type_txt,\\tdf_dqm_prod. model_num_txt,\\tdf_dqm_prod. multi_func,\\tdf_dqm_prod. mltpk_txt,\\tdf_dqm_prod. naked_prod_genl_shape_txt,\\tdf_dqm_prod. naked_prod_size_claim_txt,\\tdf_dqm_prod. naked_prod_srce_txt,\\tdf_dqm_prod. num_of_bttry_txt,\\tdf_dqm_prod. num_one_txt,\\tdf_dqm_prod. ntrnl_hlth_claim_txt,\\tdf_dqm_prod. occsn_txt,\\tdf_dqm_prod. odor_absbc_claim_txt,\\tdf_dqm_prod. oil_ctrl_txt,\\tdf_dqm_prod. oil_prsnc_claim_txt,\\tdf_dqm_prod. oil_type_txt,\\tdf_dqm_prod. oper_noise_claim_txt,\\tdf_dqm_prod. optn_txt,\\tdf_dqm_prod. orgnc_claim_txt,\\tdf_dqm_prod. orign_txt,\\tdf_dqm_prod. pack_txt,\\tdf_dqm_prod. pack_grp_txt,\\tdf_dqm_prod. pack_size_txt,\\tdf_dqm_prod. pack_type_txt,\\tdf_dqm_prod. pkg_cnt_size_txt,\\tdf_dqm_prod. pkg_dlvry_methd_txt,\\tdf_dqm_prod. pkg_fastn_methd_txt,\\tdf_dqm_prod. pkg_featr_tm_txt,\\tdf_dqm_prod. pkg_genl_shape_txt,\\tdf_dqm_prod. pkg_mfg_prcss_txt,\\tdf_dqm_prod. pkg_matl_sbtnc_txt,\\tdf_dqm_prod. pkg_prstn_optn_txt,\\tdf_dqm_prod. pkg_prmtn_txt,\\tdf_dqm_prod. pkg_qty_txt,\\tdf_dqm_prod. pkg_trgt_use_txt,\\tdf_dqm_prod. pkg_top_openg_txt,\\tdf_dqm_prod. pkg_type_txt,\\tdf_dqm_prod. paper_ply_txt,\\tdf_dqm_prod. ply_txt,\\tdf_dqm_prod. ptpri_item_txt,\\tdf_dqm_prod. pwr_txt,\\tdf_dqm_prod. pwr_claim_txt,\\tdf_dqm_prod. pwr_sfty_featr_txt,\\tdf_dqm_prod. pwr_seg_txt,\\tdf_dqm_prod. pwr_srce_txt,\\tdf_dqm_prod. pwr_sub_seg_txt,\\tdf_dqm_prod. prepn_methd_txt,\\tdf_dqm_prod. prstn_txt,\\tdf_dqm_prod. prstv_prsnc_claim_txt,\\tdf_dqm_prod. price_factr_txt,\\tdf_dqm_prod. price_seg_txt,\\tdf_dqm_prod. price_tier_txt,\\tdf_dqm_prod. primy_md_txt,\\tdf_dqm_prod. priv_label_txt,\\tdf_dqm_prod. prod_txt,\\tdf_dqm_prod. prod_1_txt,\\tdf_dqm_prod. prod_2_txt,\\tdf_dqm_prod. prod_3_txt,\\tdf_dqm_prod. prod_4_txt,\\tdf_dqm_prod. prod_5_txt,\\tdf_dqm_prod. prod_6_txt,\\tdf_dqm_prod. prod_7_txt,\\tdf_dqm_prod. prod_8_txt,\\tdf_dqm_prod. prod_9_txt,\\tdf_dqm_prod. prod_claim_txt,\\tdf_dqm_prod. prod_image_age_grp_txt,\\tdf_dqm_prod. prod_image_gendr_age_grp_txt,\\tdf_dqm_prod. prod_size_txt,\\tdf_dqm_prod. prod_size_1_txt,\\tdf_dqm_prod. prod_size_2_txt,\\tdf_dqm_prod. prod_size_3_txt,\\tdf_dqm_prod. prod_size_4_txt,\\tdf_dqm_prod. prod_size_5_txt,\\tdf_dqm_prod. prod_size_6_txt,\\tdf_dqm_prod. prod_size_7_txt,\\tdf_dqm_prod. prod_size_8_txt,\\tdf_dqm_prod. prod_size_9_txt,\\tdf_dqm_prod. prmtn_txt,\\tdf_dqm_prod. prmtn_type_txt,\\tdf_dqm_prod. protn_prsnc_claim_txt,\\tdf_dqm_prod. rng_txt,\\tdf_dqm_prod. rchrg_time_txt,\\tdf_dqm_prod. ref_txt,\\tdf_dqm_prod. refl_type_txt,\\tdf_dqm_prod. rbu_txt,\\tdf_dqm_prod. reslt_readt_txt,\\tdf_dqm_prod. reuse_txt,\\tdf_dqm_prod. rinse_txt,\\tdf_dqm_prod. roll_lngth_txt,\\tdf_dqm_prod. roll_life_txt,\\tdf_dqm_prod. scent_txt,\\tdf_dqm_prod. scent_1_txt,\\tdf_dqm_prod. scnd_benft_txt,\\tdf_dqm_prod. seg_txt,\\tdf_dqm_prod. srvng_per_cntnr_txt,\\tdf_dqm_prod. shade_txt,\\tdf_dqm_prod. shavr_featr_txt,\\tdf_dqm_prod. shvng_sys_txt,\\tdf_dqm_prod. sheet_cnt_txt,\\tdf_dqm_prod. sheet_dmnsn_lngth_txt,\\tdf_dqm_prod. sheet_dmnsn_width_txt,\\tdf_dqm_prod. short_prod_desc_txt,\\tdf_dqm_prod. size_txt,\\tdf_dqm_prod. size_absrp_txt,\\tdf_dqm_prod. size_rng_txt,\\tdf_dqm_prod. size_varnt_txt,\\tdf_dqm_prod. skin_coat_claim_txt,\\tdf_dqm_prod. skin_type_txt,\\tdf_dqm_prod. speed_txt,\\tdf_dqm_prod. spray_featr_txt,\\tdf_dqm_prod. su_factr_txt,\\tdf_dqm_prod. strgc_ingr_prsnc_claim_txt,\\tdf_dqm_prod. strth_txt,\\tdf_dqm_prod. strth_claim_txt,\\tdf_dqm_prod. style_txt,\\tdf_dqm_prod. sub_brand_txt,\\tdf_dqm_prod. sub_categ_txt,\\tdf_dqm_prod. sub_prtct_factr_txt,\\tdf_dqm_prod. sub_seg_txt,\\tdf_dqm_prod. sub_type_txt,\\tdf_dqm_prod. suctn_clean_claim_txt,\\tdf_dqm_prod. suds_txt,\\tdf_dqm_prod. splmt_fact_srvng_hshld_txt,\\tdf_dqm_prod. splmt_fact_srvng_mtrc_txt,\\tdf_dqm_prod. splmt_fact_srvng_per_cntnr_txt,\\tdf_dqm_prod. splmt_type_txt,\\tdf_dqm_prod. surfc_ht_featr_txt,\\tdf_dqm_prod. swtnr_txt,\\tdf_dqm_prod. swtnr_prsnc_claim_txt,\\tdf_dqm_prod. swtnr_type_txt,\\tdf_dqm_prod. syntd_commn_cnsmr_name_txt,\\tdf_dqm_prod. trgt_anmal_txt,\\tdf_dqm_prod. trgt_anmal_naked_prod_size_txt,\\tdf_dqm_prod. trgt_aplnc_txt,\\tdf_dqm_prod. trgt_grp_txt,\\tdf_dqm_prod. trgt_grp_age_txt,\\tdf_dqm_prod. trgt_grp_cond_txt,\\tdf_dqm_prod. trgt_grp_cond_claim_txt,\\tdf_dqm_prod. trgt_grp_gendr_txt,\\tdf_dqm_prod. trgt_mdctn_grp_txt,\\tdf_dqm_prod. trgt_skin_cond_txt,\\tdf_dqm_prod. trgt_use_txt,\\tdf_dqm_prod. trgt_user_txt,\\tdf_dqm_prod. tartr_prsnc_claim_txt,\\tdf_dqm_prod. test_reslt_durtn_txt,\\tdf_dqm_prod. thkns_txt,\\tdf_dqm_prod. tier_txt,\\tdf_dqm_prod. timer_ctrl_txt,\\tdf_dqm_prod. thpst_comp_size_txt,\\tdf_dqm_prod. top_sheet_txt,\\tdf_dqm_prod. tot_brand_txt,\\tdf_dqm_prod. tot_bus_txt,\\tdf_dqm_prod. tune_titl_txt,\\tdf_dqm_prod. tune_titl_artst_txt,\\tdf_dqm_prod. type_txt,\\tdf_dqm_prod. type_1_txt,\\tdf_dqm_prod. type_2_txt,\\tdf_dqm_prod. type_3_txt,\\tdf_dqm_prod. unit_txt,\\tdf_dqm_prod. uom_txt,\\tdf_dqm_prod. usda_orgnc_seal_txt,\\tdf_dqm_prod. upc_txt,\\tdf_dqm_prod. upc_detl_txt,\\tdf_dqm_prod. usage_amt_txt,\\tdf_dqm_prod. use_txt,\\tdf_dqm_prod. use_as_refl_ind_txt,\\tdf_dqm_prod. vacum_carpt_clnr_txt,\\tdf_dqm_prod. vagnl_yeast_trmnt_durtn_txt,\\tdf_dqm_prod. varnt_txt,\\tdf_dqm_prod. vty_txt,\\tdf_dqm_prod. vers_txt,\\tdf_dqm_prod. vitmn_txt,\\tdf_dqm_prod. vitmn_prsnc_claim_txt,\\tdf_dqm_prod. vitmn_type_txt,\\tdf_dqm_prod. voltg_txt,\\tdf_dqm_prod. wshld_cnt_txt,\\tdf_dqm_prod. wght_txt,\\tdf_dqm_prod. wght_grwth_claim_txt,\\tdf_dqm_prod. wetns_prot_claim_txt,\\tdf_dqm_prod. white_uv_txt,\\tdf_dqm_prod. wick_cnt_txt,\\tdf_dqm_prod. wing_txt,\\tdf_dqm_prod. wood_color_txt,\\tdf_dqm_prod. yield_txt,\\tdf_dqm_prod. pg_top_sheet,\\tdf_dqm_prod. pg_wing,\\tdf_dqm_prod. pg_prmtd_prod_grp,\\tdf_dqm_prod. pg_age_txt,\\tdf_dqm_prod. pg_stain_fight_txt,\\tdf_dqm_prod. pg_val_add_txt,\\tdf_dqm_prod. pg_ozs_per_load_txt,\\tdf_dqm_prod. pg_mach_type_txt,\\tdf_dqm_prod. age_txt,\\tdf_dqm_prod. stain_fight_txt,\\tdf_dqm_prod. val_add_txt,\\tdf_dqm_prod. ozs_per_load_txt,\\tdf_dqm_prod. mach_type_txt,\\tdf_dqm_prod. pg_prmtd_prod_id,\\tdf_dqm_prod. pg_price_rottn,\\tdf_dqm_prod. pg_plr_txt,\\tdf_dqm_prod. plr_txt,\\tdf_dqm_prod. basic_size_txt,\\tdf_dqm_prod. pg_basic_size_txt,\\tdf_dqm_prod. aisle_txt,\\tdf_dqm_prod. categ_gift_set_txt,\\tdf_dqm_prod. clnsg_exprc_txt,\\tdf_dqm_prod. gca_top_sheet_def_txt,\\tdf_dqm_prod. globl_pack_type_txt,\\tdf_dqm_prod. grp_benft_txt,\\tdf_dqm_prod. pg_aisle_txt,\\tdf_dqm_prod. pg_categ_gift_set_txt,\\tdf_dqm_prod. pg_clnsg_exprc_txt,\\tdf_dqm_prod. pg_gca_top_sheet_def_txt,\\tdf_dqm_prod. pg_globl_pack_type_txt,\\tdf_dqm_prod. pg_grp_benft_txt,\\tdf_dqm_prod. pg_scent_grp_txt,\\tdf_dqm_prod. pg_shelf_seg_txt,\\tdf_dqm_prod. pg_style_txt,\\tdf_dqm_prod. scent_grp_txt,\\tdf_dqm_prod. shelf_seg_txt,\\tdf_dqm_prod. pg_us_offcl_txt,\\tdf_dqm_prod. pg_task_txt,\\tdf_dqm_prod. tot_size_txt,\\tdf_dqm_prod. pg_drop_size_txt,df_fact_promo_img.sales_msu_qty, df_fact_promo_img.sales_mlc_amt, df_fact_promo_img.sales_musd_amt, df_fact_promo_img.mkt_skid, df_fact_promo_img.time_perd_id, df_fact_promo_img.fact_type_code,df_fact_promo_img.mm_time_perd_end_date, df_TIME_PERD_NEW.new_time_perd_ind, df_TIME_PERD_NEW.time_factr, df_TIME_PERD_PD.time_factr.alias('time_factr_pd'), df_TIME_PERD_PD.srce_sys_id.alias('srce_sys_id_pd')).withColumn('new_time_perd_ind', expr(\\\" nvl(NULL, 'N')\\\") ).withColumn('TIME_FACTR', expr(\\\" nvl(NULL, time_factr_pd)\\\") ).withColumn('pd_time_perd_ind', when(col('srce_sys_id_pd').isNotNull(), lit('Y')).otherwise(lit('N'))).filter(\\\"pd_time_perd_ind='N' \\\").drop('time_factr_pd','srce_sys_id_pd')\\n\\ndict_all_dfs['df_new_del_time_pd'] = {\\\"df_object\\\" :df_new_del_time_pd}\\ndf_output_dict['df_new_del_time_pd'] = df_new_del_time_pd\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_dqm_prod\"\n    },\n    {\n      \"name\": \"df_fact_promo_vw\"\n    },\n    {\n      \"name\": \"df_new_time_pds\"\n    },\n    {\n      \"name\": \"df_DQM_CNTRT_MKT\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_new_del_time_pd\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[GEN]",
      "predecessorName": "[GEN] - Get fact data for newly delivered time periods",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"#Step 4\\n\\nspark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\nfrom pyspark.sql.functions import expr, lit, when, col\\n\\ndf_curr_fct = dict_all_dfs['df_curr_fct'][\\\"df_object\\\"]\\ndf_new_del_time_pd = dict_all_dfs['df_new_del_time_pd'][\\\"df_object\\\"]\\n\\n\\n#------------------------------------------------\\ndf_dqm_fct = df_curr_fct.unionByName(df_new_del_time_pd,True) #DPF_00150502_DQM_FCT\\n\\n#-----------------------------------------------\\n\\n# Calculating Common Top Node\\n\\ndf_dqm_fct.createOrReplaceTempView('DQM_FCT')\\n\\nsql1 = \\\"\\\"\\\"SELECT  MKT_SKID,\\n        TIME_PERD_ID,\\n        SUM(SALES_MSU_QTY) SALES_MSU_QTY,\\n        SUM(SALES_MLC_AMT) SALES_MLC_AMT,\\n        SUM(SALES_MSU_QTY_PD) SALES_MSU_QTY_PD,\\n        SUM(SALES_MLC_AMT_PD) SALES_MLC_AMT_PD\\n        FROM DQM_FCT\\n        GROUP BY MKT_SKID,TIME_PERD_ID\\\"\\\"\\\"\\ndf_top_node = spark.sql(sql1)\\n\\n#--------------------------------------------\\n\\ndict_all_dfs['df_top_node'] = {\\\"df_object\\\" :df_top_node}\\ndict_all_dfs['df_dqm_fct'] = {\\\"df_object\\\" :df_dqm_fct}\\n\\ndf_output_dict['df_top_node'] = df_top_node\\ndf_output_dict['df_dqm_fct'] = df_dqm_fct\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_curr_fct\"\n    },\n    {\n      \"name\": \"df_new_del_time_pd\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_dqm_fct\",\n      \"cache\": \"materialize\"\n    },\n    {\n      \"name\": \"df_top_node\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[GEN] - Calculate YA - Year Ago - PP - Previous Period",
      "predecessorName": "[GEN]",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"#Step 5\\n\\nspark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf_dqm_fct = dict_all_dfs['df_dqm_fct'][\\\"df_object\\\"]\\ndf_top_node = dict_all_dfs['df_top_node'][\\\"df_object\\\"]\\n\\ndef convert_cols_to_lower(df):\\n  cols = df.columns\\n  for i in cols:\\n    df = df.withColumnRenamed(i, i.lower())\\n  return df\\n\\ndf_dqm_fct = convert_cols_to_lower(df_dqm_fct)\\ndf_top_node = convert_cols_to_lower(df_top_node)\\n\\n#------------------------------------------------\\n\\nfrom pyspark.sql.functions import expr, lit, when, col\\n\\n# Calculate YA - Year Ago, PP - Previous Period\\n\\ndf_fct_ya = df_dqm_fct.withColumnRenamed('mkt_skid', 'mkt_skid_ya').withColumnRenamed('time_perd_id', 'time_perd_id_ya1').withColumnRenamed('prod_skid', 'prod_skid_ya').withColumnRenamed('sales_msu_qty', 'sales_msu_qty_ya').withColumnRenamed('sales_mlc_amt', 'sales_mlc_amt_ya').withColumnRenamed('sales_musd_amt', 'sales_musd_amt_ya')\\ndf_fct_ya.cache()\\ndf_fct_pp = df_dqm_fct.filter(\\\"1=1\\\").withColumnRenamed('mkt_skid', 'mkt_skid_pp').withColumnRenamed('time_perd_id', 'time_perd_id_pp1').withColumnRenamed('prod_skid', 'prod_skid_pp').withColumnRenamed('sales_msu_qty', 'sales_msu_qty_pp').withColumnRenamed('sales_mlc_amt', 'sales_mlc_amt_pp').withColumnRenamed('sales_musd_amt', 'sales_musd_amt_pp').select('mkt_skid_pp', 'time_perd_id_pp1', 'prod_skid_pp', 'sales_msu_qty_pp' ,'sales_mlc_amt_pp', 'sales_musd_amt_pp')\\ndf_fct_pp.cache()\\ndf_time_pd = spark.read.format('parquet').option(\\\"ignoreCorruptFiles\\\", True).option('ignoreMissingFiles', True).load(f'/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined//MM_TIME_PERD_FDIM_VW')\\n\\n#---------------------------------------\\n\\ndf_calc_ya_pp = df_dqm_fct.join(df_top_node, (df_dqm_fct.mkt_skid == df_top_node.mkt_skid) & (df_dqm_fct.time_perd_id == df_top_node.time_perd_id) ,\\\"left_outer\\\").join(df_time_pd, df_dqm_fct.time_perd_id == df_time_pd.time_perd_id , \\\"left_outer\\\").withColumn('share_pu_pct', when( (df_top_node.sales_msu_qty != 0), df_dqm_fct.sales_msu_qty/df_top_node.sales_msu_qty *100)).join( df_fct_ya, (df_time_pd.time_perd_id_ya == df_fct_ya.time_perd_id_ya1) & (df_dqm_fct.prod_skid == df_fct_ya.prod_skid_ya) & (df_dqm_fct.mkt_skid == df_fct_ya.mkt_skid_ya)  ,\\\"left_outer\\\").join(df_fct_pp ,  (df_time_pd.time_perd_id_prev == df_fct_pp.time_perd_id_pp1) & (df_dqm_fct.prod_skid == df_fct_pp.prod_skid_pp) & (df_dqm_fct.mkt_skid == df_fct_pp.mkt_skid_pp) , \\\"left_outer\\\").withColumn('share_lc_pct', when( (df_top_node.sales_mlc_amt !=0), df_dqm_fct.sales_mlc_amt/df_top_node.sales_mlc_amt*100)).withColumn('share_su_pct_pd', when( (df_top_node.sales_msu_qty_pd != 0) , df_dqm_fct.sales_msu_qty_pd/df_top_node.sales_msu_qty_pd*100)).withColumn('share_lc_pct_pd', when( (df_top_node.sales_mlc_amt_pd != 0) , df_dqm_fct.sales_mlc_amt_pd/df_top_node.sales_mlc_amt_pd*100)).select('share_pu_pct','share_lc_pct','share_su_pct_pd','share_lc_pct_pd',df_dqm_fct.prod_skid,\\tdf_dqm_fct. run_id,\\tdf_dqm_fct. prod_name,\\tdf_dqm_fct. prod_desc,df_dqm_fct.prod_lvl\\t,df_dqm_fct. prod_lvl_id,\\tdf_dqm_fct. prod_lvl_name,\\tdf_dqm_fct. all_prod_name,\\tdf_dqm_fct. gbu_id,\\tdf_dqm_fct. gbu_name,\\tdf_dqm_fct. sub_gbu_id,\\tdf_dqm_fct. sub_gbu_name,\\tdf_dqm_fct. categ_id,\\tdf_dqm_fct. categ_name,\\tdf_dqm_fct. custm_agg_ind,\\tdf_dqm_fct. pg_absbc_txt,\\tdf_dqm_fct. pg_adtv_txt,\\tdf_dqm_fct. pg_airfl_sttng,\\tdf_dqm_fct. pg_antbc,\\tdf_dqm_fct. pg_appl,\\tdf_dqm_fct. pg_asmbl_txt,\\tdf_dqm_fct. pg_attch,\\tdf_dqm_fct. pg_adnce_txt,\\tdf_dqm_fct. pg_base_pack_cnt_txt,\\tdf_dqm_fct. pg_base_roll_eqvnc_txt,\\tdf_dqm_fct. pg_base_roll_life_txt,\\tdf_dqm_fct. pg_base_size_txt,\\tdf_dqm_fct. pg_base_size_rng_txt,\\tdf_dqm_fct. pg_bttry_use_time,\\tdf_dqm_fct. pg_benft_txt,\\tdf_dqm_fct. pg_blgcl,\\tdf_dqm_fct. pg_blade_size,\\tdf_dqm_fct. pg_blade_type,\\tdf_dqm_fct. pg_blndr_shaft,\\tdf_dqm_fct. pg_body_txt,\\tdf_dqm_fct. pg_boutq,\\tdf_dqm_fct. pg_brand_txt,\\tdf_dqm_fct. pg_brand_acmld_txt,\\tdf_dqm_fct. pg_brand_desc,\\tdf_dqm_fct. pg_breed_txt,\\tdf_dqm_fct. pg_brstl_frmns_txt,\\tdf_dqm_fct. pg_brstl_type,\\tdf_dqm_fct. pg_bundl,\\tdf_dqm_fct. pg_calcn_txt,\\tdf_dqm_fct. pg_cpcty_ctrl,\\tdf_dqm_fct. pg_care_adtv,\\tdf_dqm_fct. pg_categ_txt,\\tdf_dqm_fct. pg_categ_algn_txt,\\tdf_dqm_fct. pg_cell_prsnc_txt,\\tdf_dqm_fct. pg_cell_size_txt,\\tdf_dqm_fct. pg_crmic_plate,\\tdf_dqm_fct. pg_chrg_time_txt,\\tdf_dqm_fct. pg_chmst_txt,\\tdf_dqm_fct. pg_clean_chrg,\\tdf_dqm_fct. pg_clctn_txt,\\tdf_dqm_fct. pg_color_txt,\\tdf_dqm_fct. pg_color_grp,\\tdf_dqm_fct. pg_color_prfum,\\tdf_dqm_fct. pg_co_type,\\tdf_dqm_fct. pg_cmpr_to_claim_txt,\\tdf_dqm_fct. pg_conc_txt,\\tdf_dqm_fct. pg_cool_shot,\\tdf_dqm_fct. pg_cord,\\tdf_dqm_fct. pg_cough_type,\\tdf_dqm_fct. pg_cnt_txt,\\tdf_dqm_fct. pg_cvrg_txt,\\tdf_dqm_fct. pg_custm_sub_brand_txt,\\tdf_dqm_fct. pg_dyprt_txt,\\tdf_dqm_fct. pg_deal_txt,\\tdf_dqm_fct. pg_dtctn_claim_txt,\\tdf_dqm_fct. pg_diapr_size_txt,\\tdf_dqm_fct. pg_difsr_attch,\\tdf_dqm_fct. pg_dsply_txt,\\tdf_dqm_fct. pg_dspbl_blade,\\tdf_dqm_fct. pg_dose_txt,\\tdf_dqm_fct. pg_durtn_txt,\\tdf_dqm_fct. pg_duty,\\tdf_dqm_fct. pg_emlsn,\\tdf_dqm_fct. pg_end_benft,\\tdf_dqm_fct. pg_envtl_claim_txt,\\tdf_dqm_fct. pg_extnb_handl,\\tdf_dqm_fct. pg_extra_roll_life_txt,\\tdf_dqm_fct. pg_facil_epltr_attch,\\tdf_dqm_fct. pg_famly,\\tdf_dqm_fct. pg_featr_txt,\\tdf_dqm_fct. pg_flavr_txt,\\tdf_dqm_fct. pg_form_txt,\\tdf_dqm_fct. pg_formt,\\tdf_dqm_fct. pg_frag,\\tdf_dqm_fct. pg_free_vol,\\tdf_dqm_fct. pg_freq_of_use,\\tdf_dqm_fct. pg_gendr_txt,\\tdf_dqm_fct. pg_gift_set,\\tdf_dqm_fct. pg_gbu_txt,\\tdf_dqm_fct. pg_globl_gendr_txt,\\tdf_dqm_fct. pg_good_hair_day_txt,\\tdf_dqm_fct. pg_gray_cvrg_txt,\\tdf_dqm_fct. pg_grp_brand_txt,\\tdf_dqm_fct. pg_grp_diapr_size_txt,\\tdf_dqm_fct. pg_grp_scent_txt,\\tdf_dqm_fct. pg_grp_seg_txt,\\tdf_dqm_fct. pg_grp_size_txt,\\tdf_dqm_fct. pg_grp_strth_txt,\\tdf_dqm_fct. pg_grp_sub_brand_txt,\\tdf_dqm_fct. pg_hair_type,\\tdf_dqm_fct. pg_handl_type_txt,\\tdf_dqm_fct. pg_head_foil_type,\\tdf_dqm_fct. pg_head_size_txt,\\tdf_dqm_fct. pg_head_type,\\tdf_dqm_fct. pg_heat_airfl_sttng,\\tdf_dqm_fct. pg_heat_sttng,\\tdf_dqm_fct. pg_herbl,\\tdf_dqm_fct. pg_hold_lvl,\\tdf_dqm_fct. pg_ingr_txt,\\tdf_dqm_fct. pg_ion_tech,\\tdf_dqm_fct. pg_job_cnt,\\tdf_dqm_fct. pg_large_cnt_pack_txt,\\tdf_dqm_fct. pg_lnch_date,\\tdf_dqm_fct. pg_lngth_txt,\\tdf_dqm_fct. pg_lfstg_txt,\\tdf_dqm_fct. pg_lfstl_txt,\\tdf_dqm_fct. pg_light_dsply_txt,\\tdf_dqm_fct. pg_local_price_tier_txt,\\tdf_dqm_fct. pg_mfgr_txt,\\tdf_dqm_fct. pg_matl_type,\\tdf_dqm_fct. pg_max_wattg,\\tdf_dqm_fct. pg_mega_categ_txt,\\tdf_dqm_fct. pg_mega_prop_txt,\\tdf_dqm_fct. pg_model_num_txt,\\tdf_dqm_fct. pg_motr,\\tdf_dqm_fct. pg_multi_func,\\tdf_dqm_fct. pg_multi_use,\\tdf_dqm_fct. pg_mltpk_flag_txt,\\tdf_dqm_fct. pg_natrl_txt,\\tdf_dqm_fct. pg_odor_remov,\\tdf_dqm_fct. pg_one_num_txt,\\tdf_dqm_fct. pg_pack_cnt_grp_txt,\\tdf_dqm_fct. pg_pack_grp_txt,\\tdf_dqm_fct. pg_pack_type,\\tdf_dqm_fct. pg_pkg_cnt,\\tdf_dqm_fct. pg_pkg_cnt_size_txt,\\tdf_dqm_fct. pg_pkg_size,\\tdf_dqm_fct. pg_pkg_size_2,\\tdf_dqm_fct. pg_pkg_tot,\\tdf_dqm_fct. pg_pkg_type_txt,\\tdf_dqm_fct. pg_phos,\\tdf_dqm_fct. pg_phys_need_txt,\\tdf_dqm_fct. pg_pwr_srce_txt,\\tdf_dqm_fct. pg_pwr_srce_clean_chrg,\\tdf_dqm_fct. pg_price_disc,\\tdf_dqm_fct. pg_price_seg_txt,\\tdf_dqm_fct. pg_price_tier,\\tdf_dqm_fct. pg_prod_claim_txt,\\tdf_dqm_fct. pg_prod_size_txt,\\tdf_dqm_fct. pg_prmtn_rottn,\\tdf_dqm_fct. pg_prmtn_type,\\tdf_dqm_fct. pg_purch_mtvtr_txt,\\tdf_dqm_fct. pg_refl_txt,\\tdf_dqm_fct. pg_refl_cnt_txt,\\tdf_dqm_fct. pg_refl_type_txt,\\tdf_dqm_fct. pg_retl_flag_txt,\\tdf_dqm_fct. pg_roll_eqvnc_txt,\\tdf_dqm_fct. pg_roll_eqvnc_grp_txt,\\tdf_dqm_fct. pg_roll_life_txt,\\tdf_dqm_fct. pg_scent_txt,\\tdf_dqm_fct. pg_scent_strth,\\tdf_dqm_fct. pg_scnd_benft,\\tdf_dqm_fct. pg_sectr_txt,\\tdf_dqm_fct. pg_seg_txt,\\tdf_dqm_fct. pg_sellg_strem_txt,\\tdf_dqm_fct. pg_shade,\\tdf_dqm_fct. pg_shade_lvl_txt,\\tdf_dqm_fct. pg_shave_featr_txt,\\tdf_dqm_fct. pg_shavr_head,\\tdf_dqm_fct. pg_sheet_size_txt,\\tdf_dqm_fct. pg_shelf_loc,\\tdf_dqm_fct. pg_sbd_txt,\\tdf_dqm_fct. pg_shppr_seg,\\tdf_dqm_fct. pg_size_txt,\\tdf_dqm_fct. pg_size_eqvnc_txt,\\tdf_dqm_fct. pg_size_rng,\\tdf_dqm_fct. pg_skin_coolr,\\tdf_dqm_fct. pg_skin_type_txt,\\tdf_dqm_fct. pg_specl_pack_txt,\\tdf_dqm_fct. pg_speed,\\tdf_dqm_fct. pg_steam,\\tdf_dqm_fct. pg_sku_base_desc_txt,\\tdf_dqm_fct. pg_sku_base_size_txt,\\tdf_dqm_fct. pg_sku_detl_txt,\\tdf_dqm_fct. pg_sku_num_txt,\\tdf_dqm_fct. pg_strght_attch,\\tdf_dqm_fct. pg_strth_txt,\\tdf_dqm_fct. pg_sub_brand_txt,\\tdf_dqm_fct. pg_sub_clctn_txt,\\tdf_dqm_fct. pg_sub_form_txt,\\tdf_dqm_fct. pg_sub_grp,\\tdf_dqm_fct. pg_sub_mfgr_txt,\\tdf_dqm_fct. pg_sub_seg,\\tdf_dqm_fct. pg_sub_type,\\tdf_dqm_fct. pg_sub_vty_txt,\\tdf_dqm_fct. pg_sbstr_txt,\\tdf_dqm_fct. pg_sbtnc_type_txt,\\tdf_dqm_fct. pg_suds_txt,\\tdf_dqm_fct. pg_sugar_cntnt_txt,\\tdf_dqm_fct. pg_super_categ_txt,\\tdf_dqm_fct. pg_sys_txt,\\tdf_dqm_fct. pg_trgt_aplnc,\\tdf_dqm_fct. pg_trgt_user,\\tdf_dqm_fct. pg_tech_txt,\\tdf_dqm_fct. pg_temp,\\tdf_dqm_fct. pg_test_cnt_txt,\\tdf_dqm_fct. pg_txtr_txt,\\tdf_dqm_fct. pg_thkns_txt,\\tdf_dqm_fct. pg_tier,\\tdf_dqm_fct. pg_time_txt,\\tdf_dqm_fct. pg_tone_txt,\\tdf_dqm_fct. pg_tot_cnt_txt,\\tdf_dqm_fct. pg_tot_cvrg_txt,\\tdf_dqm_fct. pg_tot_pack_cnt_txt,\\tdf_dqm_fct. pg_tot_size_txt,\\tdf_dqm_fct. pg_trmng_comb_attch,\\tdf_dqm_fct. pg_type_txt,\\tdf_dqm_fct. pg_use_txt,\\tdf_dqm_fct. pg_varnt,\\tdf_dqm_fct. pg_vty_txt,\\tdf_dqm_fct. pg_vers_txt,\\tdf_dqm_fct. pg_vlmzr_attch,\\tdf_dqm_fct. pg_warmr_cnt_txt,\\tdf_dqm_fct. pg_wshld_txt,\\tdf_dqm_fct. pg_wattg,\\tdf_dqm_fct. pg_wet_dry,\\tdf_dqm_fct. pg_wing_color_grp,\\tdf_dqm_fct. absbc_txt,\\tdf_dqm_fct. absbc_wetns_comp_featr_txt,\\tdf_dqm_fct. acsry_txt,\\tdf_dqm_fct. aim_methd_txt,\\tdf_dqm_fct. etoh_prsnc_claim_txt,\\tdf_dqm_fct. anmal_txt,\\tdf_dqm_fct. anmal_size_txt,\\tdf_dqm_fct. antpr_txt,\\tdf_dqm_fct. aplnc_attch_txt,\\tdf_dqm_fct. aplnc_color_txt,\\tdf_dqm_fct. aplnc_model_dsign_name_txt,\\tdf_dqm_fct. aplnc_plcmt_txt,\\tdf_dqm_fct. appl_txt,\\tdf_dqm_fct. appl_area_txt,\\tdf_dqm_fct. artfc_color_flavr_claim_txt,\\tdf_dqm_fct. adnce_txt,\\tdf_dqm_fct. bag_filtr_featr_txt,\\tdf_dqm_fct. bndng_txt,\\tdf_dqm_fct. bar_size_txt,\\tdf_dqm_fct. base_desc_txt,\\tdf_dqm_fct. base_featr_txt,\\tdf_dqm_fct. base_size_txt,\\tdf_dqm_fct. bttry_cnt_reqmt_txt,\\tdf_dqm_fct. bttry_outdr_chrg_txt,\\tdf_dqm_fct. bttry_type_optn_txt,\\tdf_dqm_fct. bttry_type_reqmt_txt,\\tdf_dqm_fct. benft_txt,\\tdf_dqm_fct. blade_cnt_txt,\\tdf_dqm_fct. blade_dspbl_txt,\\tdf_dqm_fct. blade_featr_txt,\\tdf_dqm_fct. blade_type_txt,\\tdf_dqm_fct. boutq_txt,\\tdf_dqm_fct. brand_comp_flavr_txt,\\tdf_dqm_fct. brand_desc_txt,\\tdf_dqm_fct. brand_famly_txt,\\tdf_dqm_fct. brand_scent_txt,\\tdf_dqm_fct. brand_scent_1_txt,\\tdf_dqm_fct. brand_scent_2_txt,\\tdf_dqm_fct. brand_scent_3_txt,\\tdf_dqm_fct. brand_scent_4_txt,\\tdf_dqm_fct. brand_scent_5_txt,\\tdf_dqm_fct. brand_scent_6_txt,\\tdf_dqm_fct. brand_scent_7_txt,\\tdf_dqm_fct. brand_scent_8_txt,\\tdf_dqm_fct. brand_scent_9_txt,\\tdf_dqm_fct. brtbl_claim_txt,\\tdf_dqm_fct. brstl_type_txt,\\tdf_dqm_fct. brush_featr_txt,\\tdf_dqm_fct. brush_type_txt,\\tdf_dqm_fct. bus_entpr_high_txt,\\tdf_dqm_fct. bus_entpr_low_txt,\\tdf_dqm_fct. calcm_prsnc_claim_txt,\\tdf_dqm_fct. calor_claim_txt,\\tdf_dqm_fct. candl_name_txt,\\tdf_dqm_fct. candl_style_txt,\\tdf_dqm_fct. cpcty_txt,\\tdf_dqm_fct. crbhd_prsnc_claim_txt,\\tdf_dqm_fct. crbnt_ingr_txt,\\tdf_dqm_fct. categ_txt,\\tdf_dqm_fct. cell_size_txt,\\tdf_dqm_fct. char_txt,\\tdf_dqm_fct. chmcl_name_txt,\\tdf_dqm_fct. chmcl_sys_txt,\\tdf_dqm_fct. chlrn_prsnc_claim_txt,\\tdf_dqm_fct. claim_txt,\\tdf_dqm_fct. clean_featr_txt,\\tdf_dqm_fct. clean_width_txt,\\tdf_dqm_fct. cloth_cnt_txt,\\tdf_dqm_fct. coatn_txt,\\tdf_dqm_fct. color_txt,\\tdf_dqm_fct. color_cnt_txt,\\tdf_dqm_fct. color_grp_txt,\\tdf_dqm_fct. color_image_prsnc_txt,\\tdf_dqm_fct. color_stock_num_txt,\\tdf_dqm_fct. cmbpk_txt,\\tdf_dqm_fct. cmbpk_mkt_name_txt,\\tdf_dqm_fct. cmbpk_mltpk_pkg_genl_shape_txt,\\tdf_dqm_fct. cmbpk_prod_txt,\\tdf_dqm_fct. cmdty_grp_txt,\\tdf_dqm_fct. commn_cnsmr_name_txt,\\tdf_dqm_fct. cmpr_to_claim_txt,\\tdf_dqm_fct. cmptv_categ_id_txt,\\tdf_dqm_fct. cpttr_txt,\\tdf_dqm_fct. comp_txt,\\tdf_dqm_fct. conc_txt,\\tdf_dqm_fct. cnstn_txt,\\tdf_dqm_fct. cntnr_txt,\\tdf_dqm_fct. cntnt_txt,\\tdf_dqm_fct. ctrl_featr_txt,\\tdf_dqm_fct. ctrl_type_txt,\\tdf_dqm_fct. ctrld_label_txt,\\tdf_dqm_fct. cord_lngth_txt,\\tdf_dqm_fct. cord_storg_featr_txt,\\tdf_dqm_fct. cnt_txt,\\tdf_dqm_fct. cover_txt,\\tdf_dqm_fct. crmnl_type_txt,\\tdf_dqm_fct. deal_txt,\\tdf_dqm_fct. deca_cmdty_code_txt,\\tdf_dqm_fct. deca_rsl_centl_txt,\\tdf_dqm_fct. deca_rsl_hdqtr_txt,\\tdf_dqm_fct. deca_rsl_midw_txt,\\tdf_dqm_fct. deca_rsl_ne_txt,\\tdf_dqm_fct. deca_rsl_nw_txt,\\tdf_dqm_fct. deca_rsl_sthrn_txt,\\tdf_dqm_fct. deca_rsl_sw_txt,\\tdf_dqm_fct. ddrnt_prsnc_claim_txt,\\tdf_dqm_fct. diapr_size_txt,\\tdf_dqm_fct. dmnsn_txt,\\tdf_dqm_fct. dmnsn_ht_txt,\\tdf_dqm_fct. dmnsn_width_txt,\\tdf_dqm_fct. dspns_txt,\\tdf_dqm_fct. dose_txt,\\tdf_dqm_fct. drug_fact_activ_ingr_txt,\\tdf_dqm_fct. drug_fact_activ_ingr_1_txt,\\tdf_dqm_fct. drug_fact_activ_ingr_2_txt,\\tdf_dqm_fct. drug_fact_activ_ingr_3_txt,\\tdf_dqm_fct. drug_fact_activ_ingr_4_txt,\\tdf_dqm_fct. drug_fact_activ_ingr_5_txt,\\tdf_dqm_fct. drug_fact_adult_dose_txt,\\tdf_dqm_fct. drug_fact_adult_dose_exced_txt,\\tdf_dqm_fct. drug_fact_adult_dose_freq_txt,\\tdf_dqm_fct. drug_fact_child_dose_txt,\\tdf_dqm_fct. drug_fact_child_dose_exced_txt,\\tdf_dqm_fct. drug_fact_child_dose_freq_txt,\\tdf_dqm_fct. drug_fact_purps_txt,\\tdf_dqm_fct. durtn_txt,\\tdf_dqm_fct. durtn_claim_txt,\\tdf_dqm_fct. duty_txt,\\tdf_dqm_fct. ease_of_use_txt,\\tdf_dqm_fct. end_benft_txt,\\tdf_dqm_fct. envtl_claim_txt,\\tdf_dqm_fct. extnd_size_txt,\\tdf_dqm_fct. extrr_sfty_txt,\\tdf_dqm_fct. famly_txt,\\tdf_dqm_fct. famly_varnt_txt,\\tdf_dqm_fct. fat_prsnc_claim_txt,\\tdf_dqm_fct. flshl_bulb_name_txt,\\tdf_dqm_fct. flavr_txt,\\tdf_dqm_fct. flurd_prsnc_claim_txt,\\tdf_dqm_fct. flsbl_prsnc_claim_txt,\\tdf_dqm_fct. food_splmt_txt,\\tdf_dqm_fct. form_txt,\\tdf_dqm_fct. frml_txt,\\tdf_dqm_fct. fmltn_txt,\\tdf_dqm_fct. frag_txt,\\tdf_dqm_fct. freq_of_use_txt,\\tdf_dqm_fct. fruit_cntnt_txt,\\tdf_dqm_fct. func_txt,\\tdf_dqm_fct. gendr_txt,\\tdf_dqm_fct. genrc_mdctn_txt,\\tdf_dqm_fct. gtin_txt,\\tdf_dqm_fct. grp_diapr_size_txt,\\tdf_dqm_fct. grp_scent_txt,\\tdf_dqm_fct. grp_seg_txt,\\tdf_dqm_fct. grp_size_txt,\\tdf_dqm_fct. hair_color_after_trmnt_txt,\\tdf_dqm_fct. handl_featr_txt,\\tdf_dqm_fct. head_size_txt,\\tdf_dqm_fct. head_type_txt,\\tdf_dqm_fct. herb_type_txt,\\tdf_dqm_fct. holdr_comp_txt,\\tdf_dqm_fct. hose_featr_txt,\\tdf_dqm_fct. hose_lngth_txt,\\tdf_dqm_fct. hshld_spclt_aplnc_featr_txt,\\tdf_dqm_fct. hdrtn_txt,\\tdf_dqm_fct. image_carrd_txt,\\tdf_dqm_fct. info_1_txt,\\tdf_dqm_fct. info_2_txt,\\tdf_dqm_fct. info_3_txt,\\tdf_dqm_fct. info_dspsl_methd_txt,\\tdf_dqm_fct. ingr_txt,\\tdf_dqm_fct. item_name_on_label_txt,\\tdf_dqm_fct. kind_prod_txt,\\tdf_dqm_fct. kind_trmnt_txt,\\tdf_dqm_fct. lnch_date_txt,\\tdf_dqm_fct. lngth_txt,\\tdf_dqm_fct. lcnsd_tm_txt,\\tdf_dqm_fct. lid_featr_txt,\\tdf_dqm_fct. lfstg_txt,\\tdf_dqm_fct. light_dsply_txt,\\tdf_dqm_fct. loc_txt,\\tdf_dqm_fct. long_prod_desc_txt,\\tdf_dqm_fct. major_seg_txt,\\tdf_dqm_fct. manul_elctr_txt,\\tdf_dqm_fct. mfgr_name_txt,\\tdf_dqm_fct. mfg_prcss_txt,\\tdf_dqm_fct. mfg_prcss_packd_in_txt,\\tdf_dqm_fct. matl_sbtnc_txt,\\tdf_dqm_fct. matl_type_txt,\\tdf_dqm_fct. max_bttry_cnt_txt,\\tdf_dqm_fct. med_form_txt,\\tdf_dqm_fct. mdctn_txt,\\tdf_dqm_fct. mega_brand_txt,\\tdf_dqm_fct. mrbu_txt,\\tdf_dqm_fct. minrl_type_txt,\\tdf_dqm_fct. model_num_txt,\\tdf_dqm_fct. multi_func,\\tdf_dqm_fct. mltpk_txt,\\tdf_dqm_fct. naked_prod_genl_shape_txt,\\tdf_dqm_fct. naked_prod_size_claim_txt,\\tdf_dqm_fct. naked_prod_srce_txt,\\tdf_dqm_fct. num_of_bttry_txt,\\tdf_dqm_fct. num_one_txt,\\tdf_dqm_fct. ntrnl_hlth_claim_txt,\\tdf_dqm_fct. occsn_txt,\\tdf_dqm_fct. odor_absbc_claim_txt,\\tdf_dqm_fct. oil_ctrl_txt,\\tdf_dqm_fct. oil_prsnc_claim_txt,\\tdf_dqm_fct. oil_type_txt,\\tdf_dqm_fct. oper_noise_claim_txt,\\tdf_dqm_fct. optn_txt,\\tdf_dqm_fct. orgnc_claim_txt,\\tdf_dqm_fct. orign_txt,\\tdf_dqm_fct. pack_txt,\\tdf_dqm_fct. pack_grp_txt,\\tdf_dqm_fct. pack_size_txt,\\tdf_dqm_fct. pack_type_txt,\\tdf_dqm_fct. pkg_cnt_size_txt,\\tdf_dqm_fct. pkg_dlvry_methd_txt,\\tdf_dqm_fct. pkg_fastn_methd_txt,\\tdf_dqm_fct. pkg_featr_tm_txt,\\tdf_dqm_fct. pkg_genl_shape_txt,\\tdf_dqm_fct. pkg_mfg_prcss_txt,\\tdf_dqm_fct. pkg_matl_sbtnc_txt,\\tdf_dqm_fct. pkg_prstn_optn_txt,\\tdf_dqm_fct. pkg_prmtn_txt,\\tdf_dqm_fct. pkg_qty_txt,\\tdf_dqm_fct. pkg_trgt_use_txt,\\tdf_dqm_fct. pkg_top_openg_txt,\\tdf_dqm_fct. pkg_type_txt,\\tdf_dqm_fct. paper_ply_txt,\\tdf_dqm_fct. ply_txt,\\tdf_dqm_fct. ptpri_item_txt,\\tdf_dqm_fct. pwr_txt,\\tdf_dqm_fct. pwr_claim_txt,\\tdf_dqm_fct. pwr_sfty_featr_txt,\\tdf_dqm_fct. pwr_seg_txt,\\tdf_dqm_fct. pwr_srce_txt,\\tdf_dqm_fct. pwr_sub_seg_txt,\\tdf_dqm_fct. prepn_methd_txt,\\tdf_dqm_fct. prstn_txt,\\tdf_dqm_fct. prstv_prsnc_claim_txt,\\tdf_dqm_fct. price_factr_txt,\\tdf_dqm_fct. price_seg_txt,\\tdf_dqm_fct. price_tier_txt,\\tdf_dqm_fct. primy_md_txt,\\tdf_dqm_fct. priv_label_txt,\\tdf_dqm_fct. prod_txt,\\tdf_dqm_fct. prod_1_txt,\\tdf_dqm_fct. prod_2_txt,\\tdf_dqm_fct. prod_3_txt,\\tdf_dqm_fct. prod_4_txt,\\tdf_dqm_fct. prod_5_txt,\\tdf_dqm_fct. prod_6_txt,\\tdf_dqm_fct. prod_7_txt,\\tdf_dqm_fct. prod_8_txt,\\tdf_dqm_fct. prod_9_txt,\\tdf_dqm_fct. prod_claim_txt,\\tdf_dqm_fct. prod_image_age_grp_txt,\\tdf_dqm_fct. prod_image_gendr_age_grp_txt,\\tdf_dqm_fct. prod_size_txt,\\tdf_dqm_fct. prod_size_1_txt,\\tdf_dqm_fct. prod_size_2_txt,\\tdf_dqm_fct. prod_size_3_txt,\\tdf_dqm_fct. prod_size_4_txt,\\tdf_dqm_fct. prod_size_5_txt,\\tdf_dqm_fct. prod_size_6_txt,\\tdf_dqm_fct. prod_size_7_txt,\\tdf_dqm_fct. prod_size_8_txt,\\tdf_dqm_fct. prod_size_9_txt,\\tdf_dqm_fct. prmtn_txt,\\tdf_dqm_fct. prmtn_type_txt,\\tdf_dqm_fct. protn_prsnc_claim_txt,\\tdf_dqm_fct. rng_txt,\\tdf_dqm_fct. rchrg_time_txt,\\tdf_dqm_fct. ref_txt,\\tdf_dqm_fct. refl_type_txt,\\tdf_dqm_fct. rbu_txt,\\tdf_dqm_fct. reslt_readt_txt,\\tdf_dqm_fct. reuse_txt,\\tdf_dqm_fct. rinse_txt,\\tdf_dqm_fct. roll_lngth_txt,\\tdf_dqm_fct. roll_life_txt,\\tdf_dqm_fct. scent_txt,\\tdf_dqm_fct. scent_1_txt,\\tdf_dqm_fct. scnd_benft_txt,\\tdf_dqm_fct. seg_txt,\\tdf_dqm_fct. srvng_per_cntnr_txt,\\tdf_dqm_fct. shade_txt,\\tdf_dqm_fct. shavr_featr_txt,\\tdf_dqm_fct. shvng_sys_txt,\\tdf_dqm_fct. sheet_cnt_txt,\\tdf_dqm_fct. sheet_dmnsn_lngth_txt,\\tdf_dqm_fct. sheet_dmnsn_width_txt,\\tdf_dqm_fct. short_prod_desc_txt,\\tdf_dqm_fct. size_txt,\\tdf_dqm_fct. size_absrp_txt,\\tdf_dqm_fct. size_rng_txt,\\tdf_dqm_fct. size_varnt_txt,\\tdf_dqm_fct. skin_coat_claim_txt,\\tdf_dqm_fct. skin_type_txt,\\tdf_dqm_fct. speed_txt,\\tdf_dqm_fct. spray_featr_txt,\\tdf_dqm_fct. su_factr_txt,\\tdf_dqm_fct. strgc_ingr_prsnc_claim_txt,\\tdf_dqm_fct. strth_txt,\\tdf_dqm_fct. strth_claim_txt,\\tdf_dqm_fct. style_txt,\\tdf_dqm_fct. sub_brand_txt,\\tdf_dqm_fct. sub_categ_txt,\\tdf_dqm_fct. sub_prtct_factr_txt,\\tdf_dqm_fct. sub_seg_txt,\\tdf_dqm_fct. sub_type_txt,\\tdf_dqm_fct. suctn_clean_claim_txt,\\tdf_dqm_fct. suds_txt,\\tdf_dqm_fct. splmt_fact_srvng_hshld_txt,\\tdf_dqm_fct. splmt_fact_srvng_mtrc_txt,\\tdf_dqm_fct. splmt_fact_srvng_per_cntnr_txt,\\tdf_dqm_fct. splmt_type_txt,\\tdf_dqm_fct. surfc_ht_featr_txt,\\tdf_dqm_fct. swtnr_txt,\\tdf_dqm_fct. swtnr_prsnc_claim_txt,\\tdf_dqm_fct. swtnr_type_txt,\\tdf_dqm_fct. syntd_commn_cnsmr_name_txt,\\tdf_dqm_fct. trgt_anmal_txt,\\tdf_dqm_fct. trgt_anmal_naked_prod_size_txt,\\tdf_dqm_fct. trgt_aplnc_txt,\\tdf_dqm_fct. trgt_grp_txt,\\tdf_dqm_fct. trgt_grp_age_txt,\\tdf_dqm_fct. trgt_grp_cond_txt,\\tdf_dqm_fct. trgt_grp_cond_claim_txt,\\tdf_dqm_fct. trgt_grp_gendr_txt,\\tdf_dqm_fct. trgt_mdctn_grp_txt,\\tdf_dqm_fct. trgt_skin_cond_txt,\\tdf_dqm_fct. trgt_use_txt,\\tdf_dqm_fct. trgt_user_txt,\\tdf_dqm_fct. tartr_prsnc_claim_txt,\\tdf_dqm_fct. test_reslt_durtn_txt,\\tdf_dqm_fct. thkns_txt,\\tdf_dqm_fct. tier_txt,\\tdf_dqm_fct. timer_ctrl_txt,\\tdf_dqm_fct. thpst_comp_size_txt,\\tdf_dqm_fct. top_sheet_txt,\\tdf_dqm_fct. tot_brand_txt,\\tdf_dqm_fct. tot_bus_txt,\\tdf_dqm_fct. tune_titl_txt,\\tdf_dqm_fct. tune_titl_artst_txt,\\tdf_dqm_fct. type_txt,\\tdf_dqm_fct. type_1_txt,\\tdf_dqm_fct. type_2_txt,\\tdf_dqm_fct. type_3_txt,\\tdf_dqm_fct. unit_txt,\\tdf_dqm_fct. uom_txt,\\tdf_dqm_fct. usda_orgnc_seal_txt,\\tdf_dqm_fct. upc_txt,\\tdf_dqm_fct. upc_detl_txt,\\tdf_dqm_fct. usage_amt_txt,\\tdf_dqm_fct. use_txt,\\tdf_dqm_fct. use_as_refl_ind_txt,\\tdf_dqm_fct. vacum_carpt_clnr_txt,\\tdf_dqm_fct. vagnl_yeast_trmnt_durtn_txt,\\tdf_dqm_fct. varnt_txt,\\tdf_dqm_fct. vty_txt,\\tdf_dqm_fct. vers_txt,\\tdf_dqm_fct. vitmn_txt,\\tdf_dqm_fct. vitmn_prsnc_claim_txt,\\tdf_dqm_fct. vitmn_type_txt,\\tdf_dqm_fct. voltg_txt,\\tdf_dqm_fct. wshld_cnt_txt,\\tdf_dqm_fct. wght_txt,\\tdf_dqm_fct. wght_grwth_claim_txt,\\tdf_dqm_fct. wetns_prot_claim_txt,\\tdf_dqm_fct. white_uv_txt,\\tdf_dqm_fct. wick_cnt_txt,\\tdf_dqm_fct. wing_txt,\\tdf_dqm_fct. wood_color_txt,\\tdf_dqm_fct. yield_txt,\\tdf_dqm_fct. pg_top_sheet,\\tdf_dqm_fct. pg_wing,\\tdf_dqm_fct. pg_prmtd_prod_grp,\\tdf_dqm_fct. pg_age_txt,\\tdf_dqm_fct. pg_stain_fight_txt,\\tdf_dqm_fct. pg_val_add_txt,\\tdf_dqm_fct. pg_ozs_per_load_txt,\\tdf_dqm_fct. pg_mach_type_txt,\\tdf_dqm_fct. age_txt,\\tdf_dqm_fct. stain_fight_txt,\\tdf_dqm_fct. val_add_txt,\\tdf_dqm_fct. ozs_per_load_txt,\\tdf_dqm_fct. mach_type_txt,\\tdf_dqm_fct. pg_prmtd_prod_id,\\tdf_dqm_fct. pg_price_rottn,\\tdf_dqm_fct. pg_plr_txt,\\tdf_dqm_fct. plr_txt,\\tdf_dqm_fct. basic_size_txt,\\tdf_dqm_fct. pg_basic_size_txt,\\tdf_dqm_fct. aisle_txt,\\tdf_dqm_fct. categ_gift_set_txt,\\tdf_dqm_fct. clnsg_exprc_txt,\\tdf_dqm_fct. gca_top_sheet_def_txt,\\tdf_dqm_fct. globl_pack_type_txt,\\tdf_dqm_fct. grp_benft_txt,\\tdf_dqm_fct. pg_aisle_txt,\\tdf_dqm_fct. pg_categ_gift_set_txt,\\tdf_dqm_fct. pg_clnsg_exprc_txt,\\tdf_dqm_fct. pg_gca_top_sheet_def_txt,\\tdf_dqm_fct. pg_globl_pack_type_txt,\\tdf_dqm_fct. pg_grp_benft_txt,\\tdf_dqm_fct. pg_scent_grp_txt,\\tdf_dqm_fct. pg_shelf_seg_txt,\\tdf_dqm_fct. pg_style_txt,\\tdf_dqm_fct. scent_grp_txt,\\tdf_dqm_fct. shelf_seg_txt,\\tdf_dqm_fct. pg_us_offcl_txt,\\tdf_dqm_fct. pg_task_txt,\\tdf_dqm_fct. tot_size_txt,\\tdf_dqm_fct. pg_drop_size_txt,\\tdf_dqm_fct. sales_msu_qty,\\tdf_dqm_fct. sales_mlc_amt,\\tdf_dqm_fct. sales_musd_amt,\\tdf_dqm_fct. mkt_skid,\\tdf_dqm_fct. time_perd_id,\\tdf_dqm_fct. fact_type_code,\\tdf_dqm_fct. mm_time_perd_end_date,\\tdf_dqm_fct. srce_sys_id,\\tdf_dqm_fct. prod_prttn_code,\\tdf_dqm_fct. cntrt_id,\\tdf_dqm_fct. new_time_perd_ind,\\tdf_dqm_fct. time_factr,\\tdf_dqm_fct. pd_time_perd_ind,\\tdf_dqm_fct. sales_msu_qty_pd,\\tdf_dqm_fct. sales_mlc_amt_pd,\\tdf_dqm_fct. sales_musd_amt_pd, df_fct_ya.sales_msu_qty_ya, df_fct_ya.sales_mlc_amt_ya, df_fct_ya.sales_musd_amt_ya, df_fct_pp.sales_msu_qty_pp, df_fct_pp.sales_mlc_amt_pp, df_fct_pp.sales_musd_amt_pp )\\n\\ndf_calc_ya_pp = convert_cols_to_lower(df_calc_ya_pp)\\n\\n#---------------------------------\\ndict_all_dfs['df_calc_ya_pp'] = {\\\"df_object\\\" :df_calc_ya_pp}\\ndf_output_dict['df_calc_ya_pp'] = df_calc_ya_pp\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_dqm_fct\"\n    },\n    {\n      \"name\": \"df_top_node\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_calc_ya_pp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[fl] MM_TIME_PERD_FDIM_VW",
      "predecessorName": "[GEN] - Calculate YA - Year Ago - PP - Previous Period",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"fileType\": \"parquet\",\n  \"inferSchema\": \"false\",\n  \"path\": \"refined/NNIT/tradepanel/prod-tp-lightrefined/MM_TIME_PERD_FDIM_VW/\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"shared\",\n  \"createIfNotExist\": \"false\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_time_pd\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": false
    },
    {
      "operationName": "release MM_TIME_PERD_FDIM_VW",
      "predecessorName": "[fl] MM_TIME_PERD_FDIM_VW",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"actionType\": \"release\",\n  \"itemType\": \"path\",\n  \"itemPath\": \"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_TIME_PERD_FDIM_VW/\"\n}",
      "operationVersionName": "SemaphoreOperation",
      "overridableIndicator": false
    },
    {
      "operationName": "[GEN] - Calculate YA - Year Ago - PP - Previous Period v1",
      "predecessorName": "release MM_TIME_PERD_FDIM_VW",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"#Step 5\\n\\nspark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf_dqm_fct = dict_all_dfs['df_dqm_fct'][\\\"df_object\\\"]\\ndf_top_node = dict_all_dfs['df_top_node'][\\\"df_object\\\"]\\n\\ndef convert_cols_to_lower(df):\\n  cols = df.columns\\n  cols_lower = [col.lower() for col in cols]\\n  df = df.select(*cols_lower)\\n  return df\\n\\ndf_dqm_fct = convert_cols_to_lower(df_dqm_fct)\\ndf_top_node = convert_cols_to_lower(df_top_node)\\n\\n#------------------------------------------------\\n\\nfrom pyspark.sql.functions import expr, lit, when, col\\n\\n# Calculate YA - Year Ago, PP - Previous Period\\n\\ndf_fct_ya = df_dqm_fct.withColumnRenamed('mkt_skid', 'mkt_skid_ya').withColumnRenamed('time_perd_id', 'time_perd_id_ya1').withColumnRenamed('prod_skid', 'prod_skid_ya').withColumnRenamed('sales_msu_qty', 'sales_msu_qty_ya').withColumnRenamed('sales_mlc_amt', 'sales_mlc_amt_ya').withColumnRenamed('sales_musd_amt', 'sales_musd_amt_ya')\\ndf_fct_ya.cache()\\ndf_fct_pp = df_dqm_fct.filter(\\\"1=1\\\").withColumnRenamed('mkt_skid', 'mkt_skid_pp').withColumnRenamed('time_perd_id', 'time_perd_id_pp1').withColumnRenamed('prod_skid', 'prod_skid_pp').withColumnRenamed('sales_msu_qty', 'sales_msu_qty_pp').withColumnRenamed('sales_mlc_amt', 'sales_mlc_amt_pp').withColumnRenamed('sales_musd_amt', 'sales_musd_amt_pp').select('mkt_skid_pp', 'time_perd_id_pp1', 'prod_skid_pp', 'sales_msu_qty_pp' ,'sales_mlc_amt_pp', 'sales_musd_amt_pp')\\ndf_fct_pp.cache()\\ndf_time_pd = spark.read.format('parquet').option(\\\"ignoreCorruptFiles\\\", True).option('ignoreMissingFiles', True).load(f'/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined//MM_TIME_PERD_FDIM_VW')\\n\\n#---------------------------------------\\n\\ndf_calc_ya_pp = df_dqm_fct.alias('a').join(df_top_node.alias('b'), [\\\"mkt_skid\\\",\\\"time_perd_id\\\"] ,\\\"left_outer\\\").join(df_time_pd, [\\\"time_perd_id\\\"] , \\\"left_outer\\\").withColumn('share_pu_pct', when( (df_top_node.sales_msu_qty != 0), df_dqm_fct.sales_msu_qty/df_top_node.sales_msu_qty *100)).join( df_fct_ya, (df_time_pd.time_perd_id_ya == df_fct_ya.time_perd_id_ya1) & (df_dqm_fct.prod_skid == df_fct_ya.prod_skid_ya) & (df_dqm_fct.mkt_skid == df_fct_ya.mkt_skid_ya)  ,\\\"left_outer\\\").join(df_fct_pp ,  (df_time_pd.time_perd_id_prev == df_fct_pp.time_perd_id_pp1) & (df_dqm_fct.prod_skid == df_fct_pp.prod_skid_pp) & (df_dqm_fct.mkt_skid == df_fct_pp.mkt_skid_pp) , \\\"left_outer\\\").withColumn('share_lc_pct', when( (df_top_node.sales_mlc_amt !=0), df_dqm_fct.sales_mlc_amt/df_top_node.sales_mlc_amt*100)).withColumn('share_su_pct_pd', when( (df_top_node.alias('b').sales_msu_qty_pd != 0) , df_dqm_fct.alias('a').sales_msu_qty_pd/df_top_node.sales_msu_qty_pd*100)).withColumn('share_lc_pct_pd', when( (df_top_node.alias('b').sales_mlc_amt_pd != 0) , df_dqm_fct.alias('a').sales_mlc_amt_pd/df_top_node.sales_mlc_amt_pd*100)).select('share_pu_pct','share_lc_pct','share_su_pct_pd','share_lc_pct_pd',df_dqm_fct.alias('a').prod_skid,\\tdf_dqm_fct.alias('a'). run_id,\\tdf_dqm_fct.alias('a'). prod_name,\\tdf_dqm_fct.alias('a'). prod_desc,df_dqm_fct.alias('a').prod_lvl\\t,df_dqm_fct.alias('a'). prod_lvl_id,\\tdf_dqm_fct.alias('a'). prod_lvl_name,\\tdf_dqm_fct.alias('a'). all_prod_name,\\tdf_dqm_fct.alias('a'). gbu_id,\\tdf_dqm_fct.alias('a'). gbu_name,\\tdf_dqm_fct.alias('a'). sub_gbu_id,\\tdf_dqm_fct.alias('a'). sub_gbu_name,\\tdf_dqm_fct.alias('a'). categ_id,\\tdf_dqm_fct.alias('a'). categ_name,\\tdf_dqm_fct.alias('a'). custm_agg_ind,\\tdf_dqm_fct.alias('a'). pg_absbc_txt,\\tdf_dqm_fct.alias('a'). pg_adtv_txt,\\tdf_dqm_fct.alias('a'). pg_airfl_sttng,\\tdf_dqm_fct.alias('a'). pg_antbc,\\tdf_dqm_fct.alias('a'). pg_appl,\\tdf_dqm_fct.alias('a'). pg_asmbl_txt,\\tdf_dqm_fct.alias('a'). pg_attch,\\tdf_dqm_fct.alias('a'). pg_adnce_txt,\\tdf_dqm_fct.alias('a'). pg_base_pack_cnt_txt,\\tdf_dqm_fct.alias('a'). pg_base_roll_eqvnc_txt,\\tdf_dqm_fct.alias('a'). pg_base_roll_life_txt,\\tdf_dqm_fct.alias('a'). pg_base_size_txt,\\tdf_dqm_fct.alias('a'). pg_base_size_rng_txt,\\tdf_dqm_fct.alias('a'). pg_bttry_use_time,\\tdf_dqm_fct.alias('a'). pg_benft_txt,\\tdf_dqm_fct.alias('a'). pg_blgcl,\\tdf_dqm_fct.alias('a'). pg_blade_size,\\tdf_dqm_fct.alias('a'). pg_blade_type,\\tdf_dqm_fct.alias('a'). pg_blndr_shaft,\\tdf_dqm_fct.alias('a'). pg_body_txt,\\tdf_dqm_fct.alias('a'). pg_boutq,\\tdf_dqm_fct.alias('a'). pg_brand_txt,\\tdf_dqm_fct.alias('a'). pg_brand_acmld_txt,\\tdf_dqm_fct.alias('a'). pg_brand_desc,\\tdf_dqm_fct.alias('a'). pg_breed_txt,\\tdf_dqm_fct.alias('a'). pg_brstl_frmns_txt,\\tdf_dqm_fct.alias('a'). pg_brstl_type,\\tdf_dqm_fct.alias('a'). pg_bundl,\\tdf_dqm_fct.alias('a'). pg_calcn_txt,\\tdf_dqm_fct.alias('a'). pg_cpcty_ctrl,\\tdf_dqm_fct.alias('a'). pg_care_adtv,\\tdf_dqm_fct.alias('a'). pg_categ_txt,\\tdf_dqm_fct.alias('a'). pg_categ_algn_txt,\\tdf_dqm_fct.alias('a'). pg_cell_prsnc_txt,\\tdf_dqm_fct.alias('a'). pg_cell_size_txt,\\tdf_dqm_fct.alias('a'). pg_crmic_plate,\\tdf_dqm_fct.alias('a'). pg_chrg_time_txt,\\tdf_dqm_fct.alias('a'). pg_chmst_txt,\\tdf_dqm_fct.alias('a'). pg_clean_chrg,\\tdf_dqm_fct.alias('a'). pg_clctn_txt,\\tdf_dqm_fct.alias('a'). pg_color_txt,\\tdf_dqm_fct.alias('a'). pg_color_grp,\\tdf_dqm_fct.alias('a'). pg_color_prfum,\\tdf_dqm_fct.alias('a'). pg_co_type,\\tdf_dqm_fct.alias('a'). pg_cmpr_to_claim_txt,\\tdf_dqm_fct.alias('a'). pg_conc_txt,\\tdf_dqm_fct.alias('a'). pg_cool_shot,\\tdf_dqm_fct.alias('a'). pg_cord,\\tdf_dqm_fct.alias('a'). pg_cough_type,\\tdf_dqm_fct.alias('a'). pg_cnt_txt,\\tdf_dqm_fct.alias('a'). pg_cvrg_txt,\\tdf_dqm_fct.alias('a'). pg_custm_sub_brand_txt,\\tdf_dqm_fct.alias('a'). pg_dyprt_txt,\\tdf_dqm_fct.alias('a'). pg_deal_txt,\\tdf_dqm_fct.alias('a'). pg_dtctn_claim_txt,\\tdf_dqm_fct.alias('a'). pg_diapr_size_txt,\\tdf_dqm_fct.alias('a'). pg_difsr_attch,\\tdf_dqm_fct.alias('a'). pg_dsply_txt,\\tdf_dqm_fct.alias('a'). pg_dspbl_blade,\\tdf_dqm_fct.alias('a'). pg_dose_txt,\\tdf_dqm_fct.alias('a'). pg_durtn_txt,\\tdf_dqm_fct.alias('a'). pg_duty,\\tdf_dqm_fct.alias('a'). pg_emlsn,\\tdf_dqm_fct.alias('a'). pg_end_benft,\\tdf_dqm_fct.alias('a'). pg_envtl_claim_txt,\\tdf_dqm_fct.alias('a'). pg_extnb_handl,\\tdf_dqm_fct.alias('a'). pg_extra_roll_life_txt,\\tdf_dqm_fct.alias('a'). pg_facil_epltr_attch,\\tdf_dqm_fct.alias('a'). pg_famly,\\tdf_dqm_fct.alias('a'). pg_featr_txt,\\tdf_dqm_fct.alias('a'). pg_flavr_txt,\\tdf_dqm_fct.alias('a'). pg_form_txt,\\tdf_dqm_fct.alias('a'). pg_formt,\\tdf_dqm_fct.alias('a'). pg_frag,\\tdf_dqm_fct.alias('a'). pg_free_vol,\\tdf_dqm_fct.alias('a'). pg_freq_of_use,\\tdf_dqm_fct.alias('a'). pg_gendr_txt,\\tdf_dqm_fct.alias('a'). pg_gift_set,\\tdf_dqm_fct.alias('a'). pg_gbu_txt,\\tdf_dqm_fct.alias('a'). pg_globl_gendr_txt,\\tdf_dqm_fct.alias('a'). pg_good_hair_day_txt,\\tdf_dqm_fct.alias('a'). pg_gray_cvrg_txt,\\tdf_dqm_fct.alias('a'). pg_grp_brand_txt,\\tdf_dqm_fct.alias('a'). pg_grp_diapr_size_txt,\\tdf_dqm_fct.alias('a'). pg_grp_scent_txt,\\tdf_dqm_fct.alias('a'). pg_grp_seg_txt,\\tdf_dqm_fct.alias('a'). pg_grp_size_txt,\\tdf_dqm_fct.alias('a'). pg_grp_strth_txt,\\tdf_dqm_fct.alias('a'). pg_grp_sub_brand_txt,\\tdf_dqm_fct.alias('a'). pg_hair_type,\\tdf_dqm_fct.alias('a'). pg_handl_type_txt,\\tdf_dqm_fct.alias('a'). pg_head_foil_type,\\tdf_dqm_fct.alias('a'). pg_head_size_txt,\\tdf_dqm_fct.alias('a'). pg_head_type,\\tdf_dqm_fct.alias('a'). pg_heat_airfl_sttng,\\tdf_dqm_fct.alias('a'). pg_heat_sttng,\\tdf_dqm_fct.alias('a'). pg_herbl,\\tdf_dqm_fct.alias('a'). pg_hold_lvl,\\tdf_dqm_fct.alias('a'). pg_ingr_txt,\\tdf_dqm_fct.alias('a'). pg_ion_tech,\\tdf_dqm_fct.alias('a'). pg_job_cnt,\\tdf_dqm_fct.alias('a'). pg_large_cnt_pack_txt,\\tdf_dqm_fct.alias('a'). pg_lnch_date,\\tdf_dqm_fct.alias('a'). pg_lngth_txt,\\tdf_dqm_fct.alias('a'). pg_lfstg_txt,\\tdf_dqm_fct.alias('a'). pg_lfstl_txt,\\tdf_dqm_fct.alias('a'). pg_light_dsply_txt,\\tdf_dqm_fct.alias('a'). pg_local_price_tier_txt,\\tdf_dqm_fct.alias('a'). pg_mfgr_txt,\\tdf_dqm_fct.alias('a'). pg_matl_type,\\tdf_dqm_fct.alias('a'). pg_max_wattg,\\tdf_dqm_fct.alias('a'). pg_mega_categ_txt,\\tdf_dqm_fct.alias('a'). pg_mega_prop_txt,\\tdf_dqm_fct.alias('a'). pg_model_num_txt,\\tdf_dqm_fct.alias('a'). pg_motr,\\tdf_dqm_fct.alias('a'). pg_multi_func,\\tdf_dqm_fct.alias('a'). pg_multi_use,\\tdf_dqm_fct.alias('a'). pg_mltpk_flag_txt,\\tdf_dqm_fct.alias('a'). pg_natrl_txt,\\tdf_dqm_fct.alias('a'). pg_odor_remov,\\tdf_dqm_fct.alias('a'). pg_one_num_txt,\\tdf_dqm_fct.alias('a'). pg_pack_cnt_grp_txt,\\tdf_dqm_fct.alias('a'). pg_pack_grp_txt,\\tdf_dqm_fct.alias('a'). pg_pack_type,\\tdf_dqm_fct.alias('a'). pg_pkg_cnt,\\tdf_dqm_fct.alias('a'). pg_pkg_cnt_size_txt,\\tdf_dqm_fct.alias('a'). pg_pkg_size,\\tdf_dqm_fct.alias('a'). pg_pkg_size_2,\\tdf_dqm_fct.alias('a'). pg_pkg_tot,\\tdf_dqm_fct.alias('a'). pg_pkg_type_txt,\\tdf_dqm_fct.alias('a'). pg_phos,\\tdf_dqm_fct.alias('a'). pg_phys_need_txt,\\tdf_dqm_fct.alias('a'). pg_pwr_srce_txt,\\tdf_dqm_fct.alias('a'). pg_pwr_srce_clean_chrg,\\tdf_dqm_fct.alias('a'). pg_price_disc,\\tdf_dqm_fct.alias('a'). pg_price_seg_txt,\\tdf_dqm_fct.alias('a'). pg_price_tier,\\tdf_dqm_fct.alias('a'). pg_prod_claim_txt,\\tdf_dqm_fct.alias('a'). pg_prod_size_txt,\\tdf_dqm_fct.alias('a'). pg_prmtn_rottn,\\tdf_dqm_fct.alias('a'). pg_prmtn_type,\\tdf_dqm_fct.alias('a'). pg_purch_mtvtr_txt,\\tdf_dqm_fct.alias('a'). pg_refl_txt,\\tdf_dqm_fct.alias('a'). pg_refl_cnt_txt,\\tdf_dqm_fct.alias('a'). pg_refl_type_txt,\\tdf_dqm_fct.alias('a'). pg_retl_flag_txt,\\tdf_dqm_fct.alias('a'). pg_roll_eqvnc_txt,\\tdf_dqm_fct.alias('a'). pg_roll_eqvnc_grp_txt,\\tdf_dqm_fct.alias('a'). pg_roll_life_txt,\\tdf_dqm_fct.alias('a'). pg_scent_txt,\\tdf_dqm_fct.alias('a'). pg_scent_strth,\\tdf_dqm_fct.alias('a'). pg_scnd_benft,\\tdf_dqm_fct.alias('a'). pg_sectr_txt,\\tdf_dqm_fct.alias('a'). pg_seg_txt,\\tdf_dqm_fct.alias('a'). pg_sellg_strem_txt,\\tdf_dqm_fct.alias('a'). pg_shade,\\tdf_dqm_fct.alias('a'). pg_shade_lvl_txt,\\tdf_dqm_fct.alias('a'). pg_shave_featr_txt,\\tdf_dqm_fct.alias('a'). pg_shavr_head,\\tdf_dqm_fct.alias('a'). pg_sheet_size_txt,\\tdf_dqm_fct.alias('a'). pg_shelf_loc,\\tdf_dqm_fct.alias('a'). pg_sbd_txt,\\tdf_dqm_fct.alias('a'). pg_shppr_seg,\\tdf_dqm_fct.alias('a'). pg_size_txt,\\tdf_dqm_fct.alias('a'). pg_size_eqvnc_txt,\\tdf_dqm_fct.alias('a'). pg_size_rng,\\tdf_dqm_fct.alias('a'). pg_skin_coolr,\\tdf_dqm_fct.alias('a'). pg_skin_type_txt,\\tdf_dqm_fct.alias('a'). pg_specl_pack_txt,\\tdf_dqm_fct.alias('a'). pg_speed,\\tdf_dqm_fct.alias('a'). pg_steam,\\tdf_dqm_fct.alias('a'). pg_sku_base_desc_txt,\\tdf_dqm_fct.alias('a'). pg_sku_base_size_txt,\\tdf_dqm_fct.alias('a'). pg_sku_detl_txt,\\tdf_dqm_fct.alias('a'). pg_sku_num_txt,\\tdf_dqm_fct.alias('a'). pg_strght_attch,\\tdf_dqm_fct.alias('a'). pg_strth_txt,\\tdf_dqm_fct.alias('a'). pg_sub_brand_txt,\\tdf_dqm_fct.alias('a'). pg_sub_clctn_txt,\\tdf_dqm_fct.alias('a'). pg_sub_form_txt,\\tdf_dqm_fct.alias('a'). pg_sub_grp,\\tdf_dqm_fct.alias('a'). pg_sub_mfgr_txt,\\tdf_dqm_fct.alias('a'). pg_sub_seg,\\tdf_dqm_fct.alias('a'). pg_sub_type,\\tdf_dqm_fct.alias('a'). pg_sub_vty_txt,\\tdf_dqm_fct.alias('a'). pg_sbstr_txt,\\tdf_dqm_fct.alias('a'). pg_sbtnc_type_txt,\\tdf_dqm_fct.alias('a'). pg_suds_txt,\\tdf_dqm_fct.alias('a'). pg_sugar_cntnt_txt,\\tdf_dqm_fct.alias('a'). pg_super_categ_txt,\\tdf_dqm_fct.alias('a'). pg_sys_txt,\\tdf_dqm_fct.alias('a'). pg_trgt_aplnc,\\tdf_dqm_fct.alias('a'). pg_trgt_user,\\tdf_dqm_fct.alias('a'). pg_tech_txt,\\tdf_dqm_fct.alias('a'). pg_temp,\\tdf_dqm_fct.alias('a'). pg_test_cnt_txt,\\tdf_dqm_fct.alias('a'). pg_txtr_txt,\\tdf_dqm_fct.alias('a'). pg_thkns_txt,\\tdf_dqm_fct.alias('a'). pg_tier,\\tdf_dqm_fct.alias('a'). pg_time_txt,\\tdf_dqm_fct.alias('a'). pg_tone_txt,\\tdf_dqm_fct.alias('a'). pg_tot_cnt_txt,\\tdf_dqm_fct.alias('a'). pg_tot_cvrg_txt,\\tdf_dqm_fct.alias('a'). pg_tot_pack_cnt_txt,\\tdf_dqm_fct.alias('a'). pg_tot_size_txt,\\tdf_dqm_fct.alias('a'). pg_trmng_comb_attch,\\tdf_dqm_fct.alias('a'). pg_type_txt,\\tdf_dqm_fct.alias('a'). pg_use_txt,\\tdf_dqm_fct.alias('a'). pg_varnt,\\tdf_dqm_fct.alias('a'). pg_vty_txt,\\tdf_dqm_fct.alias('a'). pg_vers_txt,\\tdf_dqm_fct.alias('a'). pg_vlmzr_attch,\\tdf_dqm_fct.alias('a'). pg_warmr_cnt_txt,\\tdf_dqm_fct.alias('a'). pg_wshld_txt,\\tdf_dqm_fct.alias('a'). pg_wattg,\\tdf_dqm_fct.alias('a'). pg_wet_dry,\\tdf_dqm_fct.alias('a'). pg_wing_color_grp,\\tdf_dqm_fct.alias('a'). absbc_txt,\\tdf_dqm_fct.alias('a'). absbc_wetns_comp_featr_txt,\\tdf_dqm_fct.alias('a'). acsry_txt,\\tdf_dqm_fct.alias('a'). aim_methd_txt,\\tdf_dqm_fct.alias('a'). etoh_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). anmal_txt,\\tdf_dqm_fct.alias('a'). anmal_size_txt,\\tdf_dqm_fct.alias('a'). antpr_txt,\\tdf_dqm_fct.alias('a'). aplnc_attch_txt,\\tdf_dqm_fct.alias('a'). aplnc_color_txt,\\tdf_dqm_fct.alias('a'). aplnc_model_dsign_name_txt,\\tdf_dqm_fct.alias('a'). aplnc_plcmt_txt,\\tdf_dqm_fct.alias('a'). appl_txt,\\tdf_dqm_fct.alias('a'). appl_area_txt,\\tdf_dqm_fct.alias('a'). artfc_color_flavr_claim_txt,\\tdf_dqm_fct.alias('a'). adnce_txt,\\tdf_dqm_fct.alias('a'). bag_filtr_featr_txt,\\tdf_dqm_fct.alias('a'). bndng_txt,\\tdf_dqm_fct.alias('a'). bar_size_txt,\\tdf_dqm_fct.alias('a'). base_desc_txt,\\tdf_dqm_fct.alias('a'). base_featr_txt,\\tdf_dqm_fct.alias('a'). base_size_txt,\\tdf_dqm_fct.alias('a'). bttry_cnt_reqmt_txt,\\tdf_dqm_fct.alias('a'). bttry_outdr_chrg_txt,\\tdf_dqm_fct.alias('a'). bttry_type_optn_txt,\\tdf_dqm_fct.alias('a'). bttry_type_reqmt_txt,\\tdf_dqm_fct.alias('a'). benft_txt,\\tdf_dqm_fct.alias('a'). blade_cnt_txt,\\tdf_dqm_fct.alias('a'). blade_dspbl_txt,\\tdf_dqm_fct.alias('a'). blade_featr_txt,\\tdf_dqm_fct.alias('a'). blade_type_txt,\\tdf_dqm_fct.alias('a'). boutq_txt,\\tdf_dqm_fct.alias('a'). brand_comp_flavr_txt,\\tdf_dqm_fct.alias('a'). brand_desc_txt,\\tdf_dqm_fct.alias('a'). brand_famly_txt,\\tdf_dqm_fct.alias('a'). brand_scent_txt,\\tdf_dqm_fct.alias('a'). brand_scent_1_txt,\\tdf_dqm_fct.alias('a'). brand_scent_2_txt,\\tdf_dqm_fct.alias('a'). brand_scent_3_txt,\\tdf_dqm_fct.alias('a'). brand_scent_4_txt,\\tdf_dqm_fct.alias('a'). brand_scent_5_txt,\\tdf_dqm_fct.alias('a'). brand_scent_6_txt,\\tdf_dqm_fct.alias('a'). brand_scent_7_txt,\\tdf_dqm_fct.alias('a'). brand_scent_8_txt,\\tdf_dqm_fct.alias('a'). brand_scent_9_txt,\\tdf_dqm_fct.alias('a'). brtbl_claim_txt,\\tdf_dqm_fct.alias('a'). brstl_type_txt,\\tdf_dqm_fct.alias('a'). brush_featr_txt,\\tdf_dqm_fct.alias('a'). brush_type_txt,\\tdf_dqm_fct.alias('a'). bus_entpr_high_txt,\\tdf_dqm_fct.alias('a'). bus_entpr_low_txt,\\tdf_dqm_fct.alias('a'). calcm_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). calor_claim_txt,\\tdf_dqm_fct.alias('a'). candl_name_txt,\\tdf_dqm_fct.alias('a'). candl_style_txt,\\tdf_dqm_fct.alias('a'). cpcty_txt,\\tdf_dqm_fct.alias('a'). crbhd_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). crbnt_ingr_txt,\\tdf_dqm_fct.alias('a'). categ_txt,\\tdf_dqm_fct.alias('a'). cell_size_txt,\\tdf_dqm_fct.alias('a'). char_txt,\\tdf_dqm_fct.alias('a'). chmcl_name_txt,\\tdf_dqm_fct.alias('a'). chmcl_sys_txt,\\tdf_dqm_fct.alias('a'). chlrn_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). claim_txt,\\tdf_dqm_fct.alias('a'). clean_featr_txt,\\tdf_dqm_fct.alias('a'). clean_width_txt,\\tdf_dqm_fct.alias('a'). cloth_cnt_txt,\\tdf_dqm_fct.alias('a'). coatn_txt,\\tdf_dqm_fct.alias('a'). color_txt,\\tdf_dqm_fct.alias('a'). color_cnt_txt,\\tdf_dqm_fct.alias('a'). color_grp_txt,\\tdf_dqm_fct.alias('a'). color_image_prsnc_txt,\\tdf_dqm_fct.alias('a'). color_stock_num_txt,\\tdf_dqm_fct.alias('a'). cmbpk_txt,\\tdf_dqm_fct.alias('a'). cmbpk_mkt_name_txt,\\tdf_dqm_fct.alias('a'). cmbpk_mltpk_pkg_genl_shape_txt,\\tdf_dqm_fct.alias('a'). cmbpk_prod_txt,\\tdf_dqm_fct.alias('a'). cmdty_grp_txt,\\tdf_dqm_fct.alias('a'). commn_cnsmr_name_txt,\\tdf_dqm_fct.alias('a'). cmpr_to_claim_txt,\\tdf_dqm_fct.alias('a'). cmptv_categ_id_txt,\\tdf_dqm_fct.alias('a'). cpttr_txt,\\tdf_dqm_fct.alias('a'). comp_txt,\\tdf_dqm_fct.alias('a'). conc_txt,\\tdf_dqm_fct.alias('a'). cnstn_txt,\\tdf_dqm_fct.alias('a'). cntnr_txt,\\tdf_dqm_fct.alias('a'). cntnt_txt,\\tdf_dqm_fct.alias('a'). ctrl_featr_txt,\\tdf_dqm_fct.alias('a'). ctrl_type_txt,\\tdf_dqm_fct.alias('a'). ctrld_label_txt,\\tdf_dqm_fct.alias('a'). cord_lngth_txt,\\tdf_dqm_fct.alias('a'). cord_storg_featr_txt,\\tdf_dqm_fct.alias('a'). cnt_txt,\\tdf_dqm_fct.alias('a'). cover_txt,\\tdf_dqm_fct.alias('a'). crmnl_type_txt,\\tdf_dqm_fct.alias('a'). deal_txt,\\tdf_dqm_fct.alias('a'). deca_cmdty_code_txt,\\tdf_dqm_fct.alias('a'). deca_rsl_centl_txt,\\tdf_dqm_fct.alias('a'). deca_rsl_hdqtr_txt,\\tdf_dqm_fct.alias('a'). deca_rsl_midw_txt,\\tdf_dqm_fct.alias('a'). deca_rsl_ne_txt,\\tdf_dqm_fct.alias('a'). deca_rsl_nw_txt,\\tdf_dqm_fct.alias('a'). deca_rsl_sthrn_txt,\\tdf_dqm_fct.alias('a'). deca_rsl_sw_txt,\\tdf_dqm_fct.alias('a'). ddrnt_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). diapr_size_txt,\\tdf_dqm_fct.alias('a'). dmnsn_txt,\\tdf_dqm_fct.alias('a'). dmnsn_ht_txt,\\tdf_dqm_fct.alias('a'). dmnsn_width_txt,\\tdf_dqm_fct.alias('a'). dspns_txt,\\tdf_dqm_fct.alias('a'). dose_txt,\\tdf_dqm_fct.alias('a'). drug_fact_activ_ingr_txt,\\tdf_dqm_fct.alias('a'). drug_fact_activ_ingr_1_txt,\\tdf_dqm_fct.alias('a'). drug_fact_activ_ingr_2_txt,\\tdf_dqm_fct.alias('a'). drug_fact_activ_ingr_3_txt,\\tdf_dqm_fct.alias('a'). drug_fact_activ_ingr_4_txt,\\tdf_dqm_fct.alias('a'). drug_fact_activ_ingr_5_txt,\\tdf_dqm_fct.alias('a'). drug_fact_adult_dose_txt,\\tdf_dqm_fct.alias('a'). drug_fact_adult_dose_exced_txt,\\tdf_dqm_fct.alias('a'). drug_fact_adult_dose_freq_txt,\\tdf_dqm_fct.alias('a'). drug_fact_child_dose_txt,\\tdf_dqm_fct.alias('a'). drug_fact_child_dose_exced_txt,\\tdf_dqm_fct.alias('a'). drug_fact_child_dose_freq_txt,\\tdf_dqm_fct.alias('a'). drug_fact_purps_txt,\\tdf_dqm_fct.alias('a'). durtn_txt,\\tdf_dqm_fct.alias('a'). durtn_claim_txt,\\tdf_dqm_fct.alias('a'). duty_txt,\\tdf_dqm_fct.alias('a'). ease_of_use_txt,\\tdf_dqm_fct.alias('a'). end_benft_txt,\\tdf_dqm_fct.alias('a'). envtl_claim_txt,\\tdf_dqm_fct.alias('a'). extnd_size_txt,\\tdf_dqm_fct.alias('a'). extrr_sfty_txt,\\tdf_dqm_fct.alias('a'). famly_txt,\\tdf_dqm_fct.alias('a'). famly_varnt_txt,\\tdf_dqm_fct.alias('a'). fat_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). flshl_bulb_name_txt,\\tdf_dqm_fct.alias('a'). flavr_txt,\\tdf_dqm_fct.alias('a'). flurd_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). flsbl_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). food_splmt_txt,\\tdf_dqm_fct.alias('a'). form_txt,\\tdf_dqm_fct.alias('a'). frml_txt,\\tdf_dqm_fct.alias('a'). fmltn_txt,\\tdf_dqm_fct.alias('a'). frag_txt,\\tdf_dqm_fct.alias('a'). freq_of_use_txt,\\tdf_dqm_fct.alias('a'). fruit_cntnt_txt,\\tdf_dqm_fct.alias('a'). func_txt,\\tdf_dqm_fct.alias('a'). gendr_txt,\\tdf_dqm_fct.alias('a'). genrc_mdctn_txt,\\tdf_dqm_fct.alias('a'). gtin_txt,\\tdf_dqm_fct.alias('a'). grp_diapr_size_txt,\\tdf_dqm_fct.alias('a'). grp_scent_txt,\\tdf_dqm_fct.alias('a'). grp_seg_txt,\\tdf_dqm_fct.alias('a'). grp_size_txt,\\tdf_dqm_fct.alias('a'). hair_color_after_trmnt_txt,\\tdf_dqm_fct.alias('a'). handl_featr_txt,\\tdf_dqm_fct.alias('a'). head_size_txt,\\tdf_dqm_fct.alias('a'). head_type_txt,\\tdf_dqm_fct.alias('a'). herb_type_txt,\\tdf_dqm_fct.alias('a'). holdr_comp_txt,\\tdf_dqm_fct.alias('a'). hose_featr_txt,\\tdf_dqm_fct.alias('a'). hose_lngth_txt,\\tdf_dqm_fct.alias('a'). hshld_spclt_aplnc_featr_txt,\\tdf_dqm_fct.alias('a'). hdrtn_txt,\\tdf_dqm_fct.alias('a'). image_carrd_txt,\\tdf_dqm_fct.alias('a'). info_1_txt,\\tdf_dqm_fct.alias('a'). info_2_txt,\\tdf_dqm_fct.alias('a'). info_3_txt,\\tdf_dqm_fct.alias('a'). info_dspsl_methd_txt,\\tdf_dqm_fct.alias('a'). ingr_txt,\\tdf_dqm_fct.alias('a'). item_name_on_label_txt,\\tdf_dqm_fct.alias('a'). kind_prod_txt,\\tdf_dqm_fct.alias('a'). kind_trmnt_txt,\\tdf_dqm_fct.alias('a'). lnch_date_txt,\\tdf_dqm_fct.alias('a'). lngth_txt,\\tdf_dqm_fct.alias('a'). lcnsd_tm_txt,\\tdf_dqm_fct.alias('a'). lid_featr_txt,\\tdf_dqm_fct.alias('a'). lfstg_txt,\\tdf_dqm_fct.alias('a'). light_dsply_txt,\\tdf_dqm_fct.alias('a'). loc_txt,\\tdf_dqm_fct.alias('a'). long_prod_desc_txt,\\tdf_dqm_fct.alias('a'). major_seg_txt,\\tdf_dqm_fct.alias('a'). manul_elctr_txt,\\tdf_dqm_fct.alias('a'). mfgr_name_txt,\\tdf_dqm_fct.alias('a'). mfg_prcss_txt,\\tdf_dqm_fct.alias('a'). mfg_prcss_packd_in_txt,\\tdf_dqm_fct.alias('a'). matl_sbtnc_txt,\\tdf_dqm_fct.alias('a'). matl_type_txt,\\tdf_dqm_fct.alias('a'). max_bttry_cnt_txt,\\tdf_dqm_fct.alias('a'). med_form_txt,\\tdf_dqm_fct.alias('a'). mdctn_txt,\\tdf_dqm_fct.alias('a'). mega_brand_txt,\\tdf_dqm_fct.alias('a'). mrbu_txt,\\tdf_dqm_fct.alias('a'). minrl_type_txt,\\tdf_dqm_fct.alias('a'). model_num_txt,\\tdf_dqm_fct.alias('a'). multi_func,\\tdf_dqm_fct.alias('a'). mltpk_txt,\\tdf_dqm_fct.alias('a'). naked_prod_genl_shape_txt,\\tdf_dqm_fct.alias('a'). naked_prod_size_claim_txt,\\tdf_dqm_fct.alias('a'). naked_prod_srce_txt,\\tdf_dqm_fct.alias('a'). num_of_bttry_txt,\\tdf_dqm_fct.alias('a'). num_one_txt,\\tdf_dqm_fct.alias('a'). ntrnl_hlth_claim_txt,\\tdf_dqm_fct.alias('a'). occsn_txt,\\tdf_dqm_fct.alias('a'). odor_absbc_claim_txt,\\tdf_dqm_fct.alias('a'). oil_ctrl_txt,\\tdf_dqm_fct.alias('a'). oil_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). oil_type_txt,\\tdf_dqm_fct.alias('a'). oper_noise_claim_txt,\\tdf_dqm_fct.alias('a'). optn_txt,\\tdf_dqm_fct.alias('a'). orgnc_claim_txt,\\tdf_dqm_fct.alias('a'). orign_txt,\\tdf_dqm_fct.alias('a'). pack_txt,\\tdf_dqm_fct.alias('a'). pack_grp_txt,\\tdf_dqm_fct.alias('a'). pack_size_txt,\\tdf_dqm_fct.alias('a'). pack_type_txt,\\tdf_dqm_fct.alias('a'). pkg_cnt_size_txt,\\tdf_dqm_fct.alias('a'). pkg_dlvry_methd_txt,\\tdf_dqm_fct.alias('a'). pkg_fastn_methd_txt,\\tdf_dqm_fct.alias('a'). pkg_featr_tm_txt,\\tdf_dqm_fct.alias('a'). pkg_genl_shape_txt,\\tdf_dqm_fct.alias('a'). pkg_mfg_prcss_txt,\\tdf_dqm_fct.alias('a'). pkg_matl_sbtnc_txt,\\tdf_dqm_fct.alias('a'). pkg_prstn_optn_txt,\\tdf_dqm_fct.alias('a'). pkg_prmtn_txt,\\tdf_dqm_fct.alias('a'). pkg_qty_txt,\\tdf_dqm_fct.alias('a'). pkg_trgt_use_txt,\\tdf_dqm_fct.alias('a'). pkg_top_openg_txt,\\tdf_dqm_fct.alias('a'). pkg_type_txt,\\tdf_dqm_fct.alias('a'). paper_ply_txt,\\tdf_dqm_fct.alias('a'). ply_txt,\\tdf_dqm_fct.alias('a'). ptpri_item_txt,\\tdf_dqm_fct.alias('a'). pwr_txt,\\tdf_dqm_fct.alias('a'). pwr_claim_txt,\\tdf_dqm_fct.alias('a'). pwr_sfty_featr_txt,\\tdf_dqm_fct.alias('a'). pwr_seg_txt,\\tdf_dqm_fct.alias('a'). pwr_srce_txt,\\tdf_dqm_fct.alias('a'). pwr_sub_seg_txt,\\tdf_dqm_fct.alias('a'). prepn_methd_txt,\\tdf_dqm_fct.alias('a'). prstn_txt,\\tdf_dqm_fct.alias('a'). prstv_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). price_factr_txt,\\tdf_dqm_fct.alias('a'). price_seg_txt,\\tdf_dqm_fct.alias('a'). price_tier_txt,\\tdf_dqm_fct.alias('a'). primy_md_txt,\\tdf_dqm_fct.alias('a'). priv_label_txt,\\tdf_dqm_fct.alias('a'). prod_txt,\\tdf_dqm_fct.alias('a'). prod_1_txt,\\tdf_dqm_fct.alias('a'). prod_2_txt,\\tdf_dqm_fct.alias('a'). prod_3_txt,\\tdf_dqm_fct.alias('a'). prod_4_txt,\\tdf_dqm_fct.alias('a'). prod_5_txt,\\tdf_dqm_fct.alias('a'). prod_6_txt,\\tdf_dqm_fct.alias('a'). prod_7_txt,\\tdf_dqm_fct.alias('a'). prod_8_txt,\\tdf_dqm_fct.alias('a'). prod_9_txt,\\tdf_dqm_fct.alias('a'). prod_claim_txt,\\tdf_dqm_fct.alias('a'). prod_image_age_grp_txt,\\tdf_dqm_fct.alias('a'). prod_image_gendr_age_grp_txt,\\tdf_dqm_fct.alias('a'). prod_size_txt,\\tdf_dqm_fct.alias('a'). prod_size_1_txt,\\tdf_dqm_fct.alias('a'). prod_size_2_txt,\\tdf_dqm_fct.alias('a'). prod_size_3_txt,\\tdf_dqm_fct.alias('a'). prod_size_4_txt,\\tdf_dqm_fct.alias('a'). prod_size_5_txt,\\tdf_dqm_fct.alias('a'). prod_size_6_txt,\\tdf_dqm_fct.alias('a'). prod_size_7_txt,\\tdf_dqm_fct.alias('a'). prod_size_8_txt,\\tdf_dqm_fct.alias('a'). prod_size_9_txt,\\tdf_dqm_fct.alias('a'). prmtn_txt,\\tdf_dqm_fct.alias('a'). prmtn_type_txt,\\tdf_dqm_fct.alias('a'). protn_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). rng_txt,\\tdf_dqm_fct.alias('a'). rchrg_time_txt,\\tdf_dqm_fct.alias('a'). ref_txt,\\tdf_dqm_fct.alias('a'). refl_type_txt,\\tdf_dqm_fct.alias('a'). rbu_txt,\\tdf_dqm_fct.alias('a'). reslt_readt_txt,\\tdf_dqm_fct.alias('a'). reuse_txt,\\tdf_dqm_fct.alias('a'). rinse_txt,\\tdf_dqm_fct.alias('a'). roll_lngth_txt,\\tdf_dqm_fct.alias('a'). roll_life_txt,\\tdf_dqm_fct.alias('a'). scent_txt,\\tdf_dqm_fct.alias('a'). scent_1_txt,\\tdf_dqm_fct.alias('a'). scnd_benft_txt,\\tdf_dqm_fct.alias('a'). seg_txt,\\tdf_dqm_fct.alias('a'). srvng_per_cntnr_txt,\\tdf_dqm_fct.alias('a'). shade_txt,\\tdf_dqm_fct.alias('a'). shavr_featr_txt,\\tdf_dqm_fct.alias('a'). shvng_sys_txt,\\tdf_dqm_fct.alias('a'). sheet_cnt_txt,\\tdf_dqm_fct.alias('a'). sheet_dmnsn_lngth_txt,\\tdf_dqm_fct.alias('a'). sheet_dmnsn_width_txt,\\tdf_dqm_fct.alias('a'). short_prod_desc_txt,\\tdf_dqm_fct.alias('a'). size_txt,\\tdf_dqm_fct.alias('a'). size_absrp_txt,\\tdf_dqm_fct.alias('a'). size_rng_txt,\\tdf_dqm_fct.alias('a'). size_varnt_txt,\\tdf_dqm_fct.alias('a'). skin_coat_claim_txt,\\tdf_dqm_fct.alias('a'). skin_type_txt,\\tdf_dqm_fct.alias('a'). speed_txt,\\tdf_dqm_fct.alias('a'). spray_featr_txt,\\tdf_dqm_fct.alias('a'). su_factr_txt,\\tdf_dqm_fct.alias('a'). strgc_ingr_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). strth_txt,\\tdf_dqm_fct.alias('a'). strth_claim_txt,\\tdf_dqm_fct.alias('a'). style_txt,\\tdf_dqm_fct.alias('a'). sub_brand_txt,\\tdf_dqm_fct.alias('a'). sub_categ_txt,\\tdf_dqm_fct.alias('a'). sub_prtct_factr_txt,\\tdf_dqm_fct.alias('a'). sub_seg_txt,\\tdf_dqm_fct.alias('a'). sub_type_txt,\\tdf_dqm_fct.alias('a'). suctn_clean_claim_txt,\\tdf_dqm_fct.alias('a'). suds_txt,\\tdf_dqm_fct.alias('a'). splmt_fact_srvng_hshld_txt,\\tdf_dqm_fct.alias('a'). splmt_fact_srvng_mtrc_txt,\\tdf_dqm_fct.alias('a'). splmt_fact_srvng_per_cntnr_txt,\\tdf_dqm_fct.alias('a'). splmt_type_txt,\\tdf_dqm_fct.alias('a'). surfc_ht_featr_txt,\\tdf_dqm_fct.alias('a'). swtnr_txt,\\tdf_dqm_fct.alias('a'). swtnr_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). swtnr_type_txt,\\tdf_dqm_fct.alias('a'). syntd_commn_cnsmr_name_txt,\\tdf_dqm_fct.alias('a'). trgt_anmal_txt,\\tdf_dqm_fct.alias('a'). trgt_anmal_naked_prod_size_txt,\\tdf_dqm_fct.alias('a'). trgt_aplnc_txt,\\tdf_dqm_fct.alias('a'). trgt_grp_txt,\\tdf_dqm_fct.alias('a'). trgt_grp_age_txt,\\tdf_dqm_fct.alias('a'). trgt_grp_cond_txt,\\tdf_dqm_fct.alias('a'). trgt_grp_cond_claim_txt,\\tdf_dqm_fct.alias('a'). trgt_grp_gendr_txt,\\tdf_dqm_fct.alias('a'). trgt_mdctn_grp_txt,\\tdf_dqm_fct.alias('a'). trgt_skin_cond_txt,\\tdf_dqm_fct.alias('a'). trgt_use_txt,\\tdf_dqm_fct.alias('a'). trgt_user_txt,\\tdf_dqm_fct.alias('a'). tartr_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). test_reslt_durtn_txt,\\tdf_dqm_fct.alias('a'). thkns_txt,\\tdf_dqm_fct.alias('a'). tier_txt,\\tdf_dqm_fct.alias('a'). timer_ctrl_txt,\\tdf_dqm_fct.alias('a'). thpst_comp_size_txt,\\tdf_dqm_fct.alias('a'). top_sheet_txt,\\tdf_dqm_fct.alias('a'). tot_brand_txt,\\tdf_dqm_fct.alias('a'). tot_bus_txt,\\tdf_dqm_fct.alias('a'). tune_titl_txt,\\tdf_dqm_fct.alias('a'). tune_titl_artst_txt,\\tdf_dqm_fct.alias('a'). type_txt,\\tdf_dqm_fct.alias('a'). type_1_txt,\\tdf_dqm_fct.alias('a'). type_2_txt,\\tdf_dqm_fct.alias('a'). type_3_txt,\\tdf_dqm_fct.alias('a'). unit_txt,\\tdf_dqm_fct.alias('a'). uom_txt,\\tdf_dqm_fct.alias('a'). usda_orgnc_seal_txt,\\tdf_dqm_fct.alias('a'). upc_txt,\\tdf_dqm_fct.alias('a'). upc_detl_txt,\\tdf_dqm_fct.alias('a'). usage_amt_txt,\\tdf_dqm_fct.alias('a'). use_txt,\\tdf_dqm_fct.alias('a'). use_as_refl_ind_txt,\\tdf_dqm_fct.alias('a'). vacum_carpt_clnr_txt,\\tdf_dqm_fct.alias('a'). vagnl_yeast_trmnt_durtn_txt,\\tdf_dqm_fct.alias('a'). varnt_txt,\\tdf_dqm_fct.alias('a'). vty_txt,\\tdf_dqm_fct.alias('a'). vers_txt,\\tdf_dqm_fct.alias('a'). vitmn_txt,\\tdf_dqm_fct.alias('a'). vitmn_prsnc_claim_txt,\\tdf_dqm_fct.alias('a'). vitmn_type_txt,\\tdf_dqm_fct.alias('a'). voltg_txt,\\tdf_dqm_fct.alias('a'). wshld_cnt_txt,\\tdf_dqm_fct.alias('a'). wght_txt,\\tdf_dqm_fct.alias('a'). wght_grwth_claim_txt,\\tdf_dqm_fct.alias('a'). wetns_prot_claim_txt,\\tdf_dqm_fct.alias('a'). white_uv_txt,\\tdf_dqm_fct.alias('a'). wick_cnt_txt,\\tdf_dqm_fct.alias('a'). wing_txt,\\tdf_dqm_fct.alias('a'). wood_color_txt,\\tdf_dqm_fct.alias('a'). yield_txt,\\tdf_dqm_fct.alias('a'). pg_top_sheet,\\tdf_dqm_fct.alias('a'). pg_wing,\\tdf_dqm_fct.alias('a'). pg_prmtd_prod_grp,\\tdf_dqm_fct.alias('a'). pg_age_txt,\\tdf_dqm_fct.alias('a'). pg_stain_fight_txt,\\tdf_dqm_fct.alias('a'). pg_val_add_txt,\\tdf_dqm_fct.alias('a'). pg_ozs_per_load_txt,\\tdf_dqm_fct.alias('a'). pg_mach_type_txt,\\tdf_dqm_fct.alias('a'). age_txt,\\tdf_dqm_fct.alias('a'). stain_fight_txt,\\tdf_dqm_fct.alias('a'). val_add_txt,\\tdf_dqm_fct.alias('a'). ozs_per_load_txt,\\tdf_dqm_fct.alias('a'). mach_type_txt,\\tdf_dqm_fct.alias('a'). pg_prmtd_prod_id,\\tdf_dqm_fct.alias('a'). pg_price_rottn,\\tdf_dqm_fct.alias('a'). pg_plr_txt,\\tdf_dqm_fct.alias('a'). plr_txt,\\tdf_dqm_fct.alias('a'). basic_size_txt,\\tdf_dqm_fct.alias('a'). pg_basic_size_txt,\\tdf_dqm_fct.alias('a'). aisle_txt,\\tdf_dqm_fct.alias('a'). categ_gift_set_txt,\\tdf_dqm_fct.alias('a'). clnsg_exprc_txt,\\tdf_dqm_fct.alias('a'). gca_top_sheet_def_txt,\\tdf_dqm_fct.alias('a'). globl_pack_type_txt,\\tdf_dqm_fct.alias('a'). grp_benft_txt,\\tdf_dqm_fct.alias('a'). pg_aisle_txt,\\tdf_dqm_fct.alias('a'). pg_categ_gift_set_txt,\\tdf_dqm_fct.alias('a'). pg_clnsg_exprc_txt,\\tdf_dqm_fct.alias('a'). pg_gca_top_sheet_def_txt,\\tdf_dqm_fct.alias('a'). pg_globl_pack_type_txt,\\tdf_dqm_fct.alias('a'). pg_grp_benft_txt,\\tdf_dqm_fct.alias('a'). pg_scent_grp_txt,\\tdf_dqm_fct.alias('a'). pg_shelf_seg_txt,\\tdf_dqm_fct.alias('a'). pg_style_txt,\\tdf_dqm_fct.alias('a'). scent_grp_txt,\\tdf_dqm_fct.alias('a'). shelf_seg_txt,\\tdf_dqm_fct.alias('a'). pg_us_offcl_txt,\\tdf_dqm_fct.alias('a'). pg_task_txt,\\tdf_dqm_fct.alias('a'). tot_size_txt,\\tdf_dqm_fct.alias('a'). pg_drop_size_txt,\\tdf_dqm_fct.alias('a'). sales_msu_qty,\\tdf_dqm_fct.alias('a'). sales_mlc_amt,\\tdf_dqm_fct.alias('a'). sales_musd_amt,\\tdf_dqm_fct.alias('a'). mkt_skid,\\tdf_dqm_fct.alias('a'). time_perd_id,\\tdf_dqm_fct.alias('a'). fact_type_code,\\tdf_dqm_fct.alias('a'). mm_time_perd_end_date,\\tdf_dqm_fct.alias('a'). srce_sys_id,\\tdf_dqm_fct.alias('a'). prod_prttn_code,\\tdf_dqm_fct.alias('a'). cntrt_id,\\tdf_dqm_fct.alias('a'). new_time_perd_ind,\\tdf_dqm_fct.alias('a'). time_factr,\\tdf_dqm_fct.alias('a'). pd_time_perd_ind,\\tdf_dqm_fct.alias('a'). sales_msu_qty_pd,\\tdf_dqm_fct.alias('a'). sales_mlc_amt_pd,\\tdf_dqm_fct.alias('a'). sales_musd_amt_pd, df_fct_ya.sales_msu_qty_ya, df_fct_ya.sales_mlc_amt_ya, df_fct_ya.sales_musd_amt_ya, df_fct_pp.sales_msu_qty_pp, df_fct_pp.sales_mlc_amt_pp, df_fct_pp.sales_musd_amt_pp )\\n\\ndf_calc_ya_pp = convert_cols_to_lower(df_calc_ya_pp)\\n\\n#---------------------------------\\ndict_all_dfs['df_calc_ya_pp'] = {\\\"df_object\\\" :df_calc_ya_pp}\\ndf_output_dict['df_calc_ya_pp'] = df_calc_ya_pp\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_dqm_fct\"\n    },\n    {\n      \"name\": \"df_top_node\"\n    },\n    {\n      \"name\": \"df_time_pd\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_calc_ya_pp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[GEN] - Calculate Indexes",
      "predecessorName": "[GEN] - Calculate YA - Year Ago - PP - Previous Period v1",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"# Step 6\\n\\nspark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf_calc_ya_pp = dict_all_dfs['df_calc_ya_pp'][\\\"df_object\\\"]\\n\\ncntrt_id = <<CNTRT_ID>>\\nrun_id = <<PROCESS_RUN_KEY>>\\nref_file_path = '/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined//'\\n# ref_file_path = ref_file_path\\nsrce_sys_id = <<SRCE_SYS_ID>>\\n\\nfrom pyspark.sql.functions import expr, lit, when, col\\n\\ndef convert_cols_to_lower(df):\\n  cols = df.columns\\n  cols_lower = [col.lower() for col in cols]\\n  df = df.select(*cols_lower)\\n  return df\\n\\n# Calculate Indexes\\n\\ndf_calc_index = df_calc_ya_pp.withColumn('IPP_SU_PCT', when( (col('SALES_MSU_QTY_PP') != 0) , (col('SALES_MSU_QTY') * col('TIME_FACTR') -col('SALES_MSU_QTY_PP'))/col('SALES_MSU_QTY_PP')*100)).withColumn('IYA_SU_PCT', when(col('SALES_MSU_QTY_YA') !=0 , (col('SALES_MSU_QTY')*col('TIME_FACTR')-col('SALES_MSU_QTY_YA'))/col('SALES_MSU_QTY_YA')*100)).withColumn('IPD_SU_PCT', when(col('SALES_MSU_QTY_PD') !=0 , ( col('SALES_MSU_QTY')-col('SALES_MSU_QTY_PD'))/col('SALES_MSU_QTY_PD')*100)).withColumn('IPP_LC_PCT', when(col('SALES_MLC_AMT_PP') !=0 , (col('SALES_MLC_AMT')*col('TIME_FACTR')-col('SALES_MLC_AMT_PP'))/col('SALES_MLC_AMT_PP')*100)).withColumn('IYA_LC_PCT', when(col('SALES_MLC_AMT_YA') !=0 , (col('SALES_MLC_AMT')*col('TIME_FACTR')-col('SALES_MLC_AMT_YA'))/col('SALES_MLC_AMT_YA')*100)).withColumn('IPD_LC_PCT', when(col('SALES_MLC_AMT_PD') !=0 , (col('SALES_MLC_AMT')-col('SALES_MLC_AMT_PD'))/col('SALES_MLC_AMT_PD')*100))\\n\\n#Publish MM_TP_VALDN_AGG_FCT\\n\\ndef path_exists(path):\\n  try:\\n    if len(dbutils.fs.ls(path)) > 0:\\n      return True\\n  except:\\n    return False\\n# file_exist = path_exists(path)\\n# print(file_exist)\\npath_mm_tp_valdn_prod_dim = f'{ref_file_path}MM_TP_VALDN_PROD_DIM'\\nif path_exists(path_mm_tp_valdn_prod_dim):\\n  spark.sql(f\\\" delete from delta.`{ref_file_path}MM_TP_VALDN_PROD_DIM` where RUN_ID = {run_id}\\\")\\n\\ndf_calc_index = convert_cols_to_lower(df_calc_index)\\n\\ndf_output_dict['df_calc_index'] = df_calc_index\\ndict_all_dfs['df_calc_index'] = {\\\"df_object\\\" :df_calc_index}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_calc_ya_pp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_calc_index\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[PUB] - Publish MM_TP_VALDN_AGG_FCT",
      "predecessorName": "[GEN] - Calculate Indexes",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"semaphoreOption\": \"none\",\n  \"format\": \"delta\",\n  \"disableSuccessFile\": \"false\",\n  \"shouldDeleteSuccess\": \"false\",\n  \"useApiV2.5\": \"false\",\n  \"path\": \"refined/NNIT/tradepanel/prod-tp-lightrefined//MM_TP_VALDN_AGG_FCT\",\n  \"mode\": \"append\",\n  \"addStaticMergeCondition\": \"false\",\n  \"compression\": \"None\",\n  \"repartitionByColumn\": [],\n  \"columnToDrop\": [],\n  \"partitionByColumn\": [],\n  \"mergeActions\": [\n    {}\n  ],\n  \"transformations\": [\n    {}\n  ],\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_calc_index\"\n    }\n  ]\n}",
      "operationVersionName": "FilePublisher",
      "overridableIndicator": false
    }
  ],
  "graphName": "NNIT_cdl_dq_business_validation v1"
}