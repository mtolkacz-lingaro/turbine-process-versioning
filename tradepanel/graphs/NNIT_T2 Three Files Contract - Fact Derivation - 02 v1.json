{
  "applicationName": "TURBINE_INTERNAL",
  "jsonSpecification": "{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"title\": \" Three Files Contract Main Chain Overloading\",\r\n    \"description\": \"Overloading parameters in Main Chain\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n\t\t\"RCD_ORIGN_CODE\": {\r\n            \"title\": \"RCD_ORIGN_CODE\",\r\n            \"description\": \"RCD_ORIGN_CODE\",\r\n            \"default\": \"B\",\r\n            \"type\": \"string\"\r\n        }\r\n   },\r\n    \"required\": [],\r\n    \"configurable\": [\"RCD_ORIGN_CODE\"]\r\n}",
  "nodes": [
    {
      "operationName": "[SCH] Schema for Time Period Mapping",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"manualSchema\": \"true\",\n  \"transformations\": [\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"fact_type_code\"\n    },\n    {\n      \"columnType\": \"integer\",\n      \"columnName\": \"srce_sys_id\"\n    },\n    {\n      \"columnType\": \"integer\",\n      \"columnName\": \"cntrt_id\"\n    },\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"prod_prttn_code\"\n    },\n    {\n      \"columnType\": \"integer\",\n      \"columnName\": \"run_id\"\n    },\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"extrn_time_perd_id\"\n    },\n    {\n      \"columnType\": \"integer\",\n      \"columnName\": \"time_perd_id\"\n    },\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"iso_crncy_code\"\n    },\n    {\n      \"columnType\": \"date\",\n      \"columnName\": \"mm_time_perd_end_date\"\n    },\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"time_perd_class_code\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_sch_prttn_time_lkp_vw\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "CreateSchema",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] Complementer for edwm and schema",
      "predecessorName": "[SCH] Schema for Time Period Mapping",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"referenceDataframe\": \"df_sch_prttn_time_lkp_vw\",\n  \"deleteColumns\": \"true\",\n  \"referenceColumnOrder\": \"true\",\n  \"milestone\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_raw\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_cc_fact_prttn_mapng\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnComplementer",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] fil_edwm_mm_time_perd_fdim",
      "predecessorName": "[CC] Complementer for edwm and schema",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fdim2\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"NVL(wkms_end_date,time_perd_end_date)\",\n      \"columnName\": \"mm_time_perd_end_date\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_cet_fil_edwm_mm_time_perd_fdim\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] Complementer for fdim and schema",
      "predecessorName": "[CET] fil_edwm_mm_time_perd_fdim",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"referenceDataframe\": \"df_sch_prttn_time_lkp_vw\",\n  \"deleteColumns\": \"true\",\n  \"referenceColumnOrder\": \"true\",\n  \"milestone\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_cet_fil_edwm_mm_time_perd_fdim\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_cc_edwm_mm_time_perd_fdim\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnComplementer",
      "overridableIndicator": false
    },
    {
      "operationName": "[JOIN] Time Perd Mapng",
      "predecessorName": "[CC] Complementer for fdim and schema",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"joinType\": \"LEFT OUTER\",\n  \"referenceDataframe\": \"df_cc_edwm_mm_time_perd_fdim\",\n  \"joinExpression\": \"in.time_perd_id=ref.time_perd_id\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_cc_fact_prttn_mapng\",\n      \"addAllColumns\": \"true\",\n      \"columns\": [\n        {\n          \"columnName\": \"time_perd_id\",\n          \"columnAlias\": \"time_perd_id\"\n        },\n        {\n          \"columnName\": \"mm_time_perd_end_date\",\n          \"columnAlias\": \"mm_time_perd_end_date2\"\n        },\n        {\n          \"columnName\": \"time_perd_class_code\",\n          \"columnAlias\": \"time_perd_class_code2\"\n        }\n      ]\n    },\n    {\n      \"name\": \"df_cc_edwm_mm_time_perd_fdim\",\n      \"addAllColumns\": \"false\",\n      \"columns\": [\n        {\n          \"columnName\": \"mm_time_perd_end_date\",\n          \"columnAlias\": \"mm_time_perd_end_date\"\n        },\n        {\n          \"columnName\": \"time_perd_class_code\",\n          \"columnAlias\": \"time_perd_class_code\"\n        }\n      ]\n    }\n  ],\n  \"alterQuery\": [\n    {\n      \"hintType\": \"none\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prttn_time_lkp_vw\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Joiner",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] TIME PERD MAPNG Prttn Time Lkp Vw",
      "predecessorName": "[JOIN] Time Perd Mapng",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_prttn_time_lkp_vw\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"fact_type_code\",\n      \"columnName\": \"fact_type_code\"\n    },\n    {\n      \"transformation\": \"srce_sys_id\",\n      \"columnName\": \"srce_sys_id\"\n    },\n    {\n      \"transformation\": \"cntrt_id\",\n      \"columnName\": \"cntrt_id\"\n    },\n    {\n      \"transformation\": \"prod_prttn_code\",\n      \"columnName\": \"prod_prttn_code\"\n    },\n    {\n      \"transformation\": \"run_id\",\n      \"columnName\": \"run_id\"\n    },\n    {\n      \"transformation\": \"extrn_time_perd_id\",\n      \"columnName\": \"extrn_time_perd_id\"\n    },\n    {\n      \"transformation\": \"time_perd_id\",\n      \"columnName\": \"time_perd_id\"\n    },\n    {\n      \"transformation\": \"iso_crncy_code\",\n      \"columnName\": \"iso_crncy_code\"\n    },\n    {\n      \"transformation\": \"mm_time_perd_end_date\",\n      \"columnName\": \"mm_time_perd_end_date\"\n    },\n    {\n      \"transformation\": \"time_perd_class_code\",\n      \"columnName\": \"time_perd_class_code\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prttn_time_lkp_vw\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "[SCH] Schema for prttn_exchg_lkp",
      "predecessorName": "[CET] TIME PERD MAPNG Prttn Time Lkp Vw",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"manualSchema\": \"true\",\n  \"transformations\": [\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"fact_type_code\"\n    },\n    {\n      \"columnType\": \"integer\",\n      \"columnName\": \"srce_sys_id\"\n    },\n    {\n      \"columnType\": \"integer\",\n      \"columnName\": \"cntrt_id\"\n    },\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"prod_prttn_code\"\n    },\n    {\n      \"columnType\": \"integer\",\n      \"columnName\": \"run_id\"\n    },\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"extrn_time_perd_id\"\n    },\n    {\n      \"columnType\": \"integer\",\n      \"columnName\": \"time_perd_id\"\n    },\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"iso_crncy_code\"\n    },\n    {\n      \"columnType\": \"date\",\n      \"columnName\": \"mm_time_perd_end_date\"\n    },\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"time_perd_class_code\"\n    },\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"exchg_rate\"\n    },\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"const_exchg_rate\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_sch_prttn_exchg_lkp\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "CreateSchema",
      "overridableIndicator": false
    },
    {
      "operationName": "[JOIN] Filter the Time Perd IDs",
      "predecessorName": "[SCH] Schema for prttn_exchg_lkp",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"joinType\": \"INNER\",\n  \"referenceDataframe\": \"df_prttn_time_lkp_vw\",\n  \"joinExpression\": \"in.time_perd_id=ref.time_perd_id\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_exchg_rate_fct_vw\",\n      \"addAllColumns\": \"true\",\n      \"columns\": [\n        {\n          \"columnName\": \"time_perd_id\",\n          \"columnAlias\": \"time_perd_id\"\n        }\n      ]\n    },\n    {\n      \"name\": \"df_prttn_time_lkp_vw\",\n      \"addAllColumns\": \"false\",\n      \"columns\": [\n        {\n          \"columnName\": \"time_perd_id\",\n          \"columnAlias\": \"time_perd_id2\"\n        }\n      ]\n    }\n  ],\n  \"alterQuery\": [\n    {\n      \"hintType\": \"none\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fil_exchg_rate_fct_vw\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Joiner",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] Complemeter for schema & time perd mapng",
      "predecessorName": "[JOIN] Filter the Time Perd IDs",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"referenceDataframe\": \"df_sch_prttn_exchg_lkp\",\n  \"deleteColumns\": \"true\",\n  \"referenceColumnOrder\": \"true\",\n  \"milestone\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_prttn_time_lkp_vw\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_cc_prttn_time_lkp_vw\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnComplementer",
      "overridableIndicator": false
    },
    {
      "operationName": "[Join] exc rate mapping",
      "predecessorName": "[CC] Complemeter for schema & time perd mapng",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"joinType\": \"LEFT OUTER\",\n  \"referenceDataframe\": \"df_fil_exchg_rate_fct_vw\",\n  \"joinExpression\": \"in.time_perd_id = ref.time_perd_id AND in.iso_crncy_code = ref.srce_iso_crncy_code\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_cc_prttn_time_lkp_vw\",\n      \"addAllColumns\": \"true\",\n      \"columns\": [\n        {\n          \"columnName\": \"time_perd_id\",\n          \"columnAlias\": \"time_perd_id\"\n        },\n        {\n          \"columnName\": \"iso_crncy_code\",\n          \"columnAlias\": \"iso_crncy_code\"\n        },\n        {\n          \"columnName\": \"exchg_rate\",\n          \"columnAlias\": \"exchg_rate2\"\n        },\n        {\n          \"columnName\": \"const_exchg_rate\",\n          \"columnAlias\": \"const_exchg_rate2\"\n        }\n      ]\n    },\n    {\n      \"name\": \"df_fil_exchg_rate_fct_vw\",\n      \"addAllColumns\": \"false\",\n      \"columns\": [\n        {\n          \"columnName\": \"exchg_rate\",\n          \"columnAlias\": \"exchg_rate\"\n        },\n        {\n          \"columnName\": \"const_exchg_rate\",\n          \"columnAlias\": \"const_exchg_rate\"\n        },\n        {\n          \"columnName\": \"srce_iso_crncy_code\",\n          \"columnAlias\": \"srce_iso_crncy_code\"\n        }\n      ]\n    }\n  ],\n  \"alterQuery\": [\n    {\n      \"hintType\": \"none\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_join_prttn_exchg_lkp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Joiner",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] Fact Exchange Rate Mapping",
      "predecessorName": "[Join] exc rate mapping",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"referenceDataframe\": \"df_sch_prttn_exchg_lkp\",\n  \"deleteColumns\": \"true\",\n  \"referenceColumnOrder\": \"true\",\n  \"milestone\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_join_prttn_exchg_lkp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prttn_exchg_lkp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnComplementer",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] For MM_TIME_PERD_XREF",
      "predecessorName": "[CC] Fact Exchange Rate Mapping",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_prttn_exchg_lkp\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"cntrt_id\",\n      \"columnName\": \"CNTRT_ID\"\n    },\n    {\n      \"transformation\": \"extrn_time_perd_id\",\n      \"columnName\": \"EXTRN_TIME_PERD_ID\"\n    },\n    {\n      \"transformation\": \"time_perd_id\",\n      \"columnName\": \"TIME_PERD_ID\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prttn_exchg_lkp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "[File Load] MM_TIME_PERD_XREF",
      "predecessorName": "[CET] For MM_TIME_PERD_XREF",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"fileType\": \"parquet\",\n  \"path\": \"unrefined/cloudpanel-test-unref/Three Files Contract/Tables/MM_TIME_PERD_XREF/\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"none\",\n  \"createIfNotExist\": \"false\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_time_perd_xref\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": true
    },
    {
      "operationName": "[SCH] Schema for Time perd XREF",
      "predecessorName": "[File Load] MM_TIME_PERD_XREF",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"manualSchema\": \"true\",\n  \"transformations\": [\n    {\n      \"columnType\": \"integer\",\n      \"columnName\": \"cntrt_id\"\n    },\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"extrn_time_perd_id\"\n    },\n    {\n      \"columnType\": \"integer\",\n      \"columnName\": \"time_perd_id\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_sch_mm_time_perd_xref\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "CreateSchema",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] MM_TIME_PERD_XREF",
      "predecessorName": "[SCH] Schema for Time perd XREF",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"AddAllSourceColumns\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_time_perd_xref\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"CNTRT_ID\",\n      \"columnName\": \"cntrt_id\"\n    },\n    {\n      \"transformation\": \"EXTRN_TIME_PERD_ID\",\n      \"columnName\": \"extrn_time_perd_id\"\n    },\n    {\n      \"transformation\": \"TIME_PERD_ID\",\n      \"columnName\": \"time_perd_id\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_time_perd_xref\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "[Distinct] prttn_exchg_lkp",
      "predecessorName": "[CET] MM_TIME_PERD_XREF",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"AddAllSourceColumns\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_prttn_exchg_lkp\"\n    }\n  ],\n  \"columns\": [\n    {\n      \"name\": \"cntrt_id\"\n    },\n    {\n      \"name\": \"extrn_time_perd_id\"\n    },\n    {\n      \"name\": \"time_perd_id\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_dist_prttn_exchg_lkp\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Distinct",
      "overridableIndicator": false
    },
    {
      "operationName": "[JOIN] XREF & DISTINCT Prttn exchg lkp",
      "predecessorName": "[Distinct] prttn_exchg_lkp",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"joinType\": \"LEFT OUTER\",\n  \"referenceDataframe\": \"df_dist_prttn_exchg_lkp\",\n  \"joinExpression\": \"in.cntrt_id = ref.cntrt_id AND in.extrn_time_perd_id = ref.extrn_time_perd_id\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_time_perd_xref\",\n      \"addAllColumns\": \"true\",\n      \"columns\": [\n        {\n          \"columnName\": \"time_perd_id\",\n          \"columnAlias\": \"time_perd_id2\"\n        }\n      ]\n    },\n    {\n      \"name\": \"df_dist_prttn_exchg_lkp\",\n      \"addAllColumns\": \"false\",\n      \"columns\": [\n        {\n          \"columnName\": \"time_perd_id\",\n          \"columnAlias\": \"time_perd_id\"\n        }\n      ]\n    }\n  ],\n  \"alterQuery\": [\n    {\n      \"hintType\": \"none\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_time_perd_xref_a\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Joiner",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] schema  a xref table",
      "predecessorName": "[JOIN] XREF & DISTINCT Prttn exchg lkp",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"referenceDataframe\": \"df_sch_mm_time_perd_xref\",\n  \"deleteColumns\": \"true\",\n  \"referenceColumnOrder\": \"true\",\n  \"milestone\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_time_perd_xref_a\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_time_perd_xref_a\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnComplementer",
      "overridableIndicator": false
    },
    {
      "operationName": "[FIL] Time Perd XREF",
      "predecessorName": "[CC] schema  a xref table",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"expression\": \"time_perd_id IS NOT NULL\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_time_perd_xref_a\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_time_perd_xref_b\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Filter",
      "overridableIndicator": false
    },
    {
      "operationName": "[Merge] updating",
      "predecessorName": "[FIL] Time Perd XREF",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"referenceDataframe\": \"df_mm_time_perd_xref\",\n  \"distinct\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_time_perd_xref_b\"\n    }\n  ],\n  \"logicalKey\": [\n    \"cntrt_id\",\n    \"extrn_time_perd_id\"\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_upd_time_perd_xref\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Merger",
      "overridableIndicator": false
    },
    {
      "operationName": "[JOIN] Inserting",
      "predecessorName": "[Merge] updating",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"joinType\": \"LEFT ANTI\",\n  \"referenceDataframe\": \"df_upd_time_perd_xref\",\n  \"joinExpression\": \"in.cntrt_id = ref.cntrt_id AND in.extrn_time_perd_id = ref.extrn_time_perd_id\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_dist_prttn_exchg_lkp\",\n      \"addAllColumns\": \"true\",\n      \"columns\": [\n        {\n          \"columnName\": \"cntrt_id\",\n          \"columnAlias\": \"cntrt_id\"\n        }\n      ]\n    },\n    {\n      \"name\": \"df_upd_time_perd_xref\",\n      \"addAllColumns\": \"false\",\n      \"columns\": [\n        {\n          \"columnName\": \"cntrt_id\",\n          \"columnAlias\": \"cntrt_id2\"\n        }\n      ]\n    }\n  ],\n  \"alterQuery\": [\n    {\n      \"hintType\": \"none\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_ins_time_perd_xref\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Joiner",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] Pub XREF",
      "predecessorName": "[JOIN] Inserting",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"referenceDataframe\": \"df_sch_mm_time_perd_xref\",\n  \"deleteColumns\": \"true\",\n  \"referenceColumnOrder\": \"true\",\n  \"milestone\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_ins_time_perd_xref\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_time_perd_xref\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnComplementer",
      "overridableIndicator": false
    },
    {
      "operationName": "[Merge] TIME_PERD_XREF",
      "predecessorName": "[CC] Pub XREF",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"referenceDataframe\": \"df_upd_time_perd_xref\",\n  \"distinct\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_time_perd_xref\"\n    }\n  ],\n  \"logicalKey\": [\n    \"cntrt_id\",\n    \"extrn_time_perd_id\"\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_time_perd_xref\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Merger",
      "overridableIndicator": false
    },
    {
      "operationName": "[File Pub] MM_TIME_PERD_XREF",
      "predecessorName": "[Merge] TIME_PERD_XREF",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"semaphoreOption\": \"already acquired\",\n  \"format\": \"parquet\",\n  \"disableSuccessFile\": \"false\",\n  \"shouldDeleteSuccess\": \"false\",\n  \"useApiV2.5\": \"false\",\n  \"path\": \"<@@PATH3@@>/MM_TIME_PERD_XREF/\",\n  \"mode\": \"dynamicoverwrite\",\n  \"compression\": \"None\",\n  \"repartitionByColumn\": [],\n  \"columnToDrop\": [],\n  \"partitionByColumn\": [],\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_time_perd_xref\"\n    }\n  ]\n}",
      "operationVersionName": "FilePublisher",
      "overridableIndicator": false
    },
    {
      "operationName": "Pub - MM_TIME_PERD_XREF",
      "predecessorName": "[File Pub] MM_TIME_PERD_XREF",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\n\\ndf = dict_all_dfs['df_prttn_exchg_lkp'][\\\"df_object\\\"]\\n\\ndf = spark.createDataFrame(data,schema)\\ndf.createOrReplaceTempView('src')\\n\\nstr = \\\"\\\"\\\"MERGE INTO delta.`/mnt/unrefined/NNIT/tradepanel/cloudpanel-test-unref/Files__Contract/ThreeFilesContracts/Merge_Tables/MM_TIME_PERD_XREF` AS tgt\\nUSING src\\nON tgt.CNTRT_ID = src.CNTRT_ID AND tgt.EXTRN_TIME_PERD_ID = src.EXTRN_TIME_PERD_ID\\nWHEN MATCHED THEN\\n  UPDATE SET\\n    tgt.TIME_PERD_ID = src.TIME_PERD_ID\\nWHEN NOT MATCHED\\n  THEN INSERT (\\n    CNTRT_ID,\\n    EXTRN_TIME_PERD_ID,\\n    TIME_PERD_ID\\n  )\\n  VALUES (\\n    src.CNTRT_ID,\\n    src.EXTRN_TIME_PERD_ID,\\n    src.TIME_PERD_ID\\n  )\\\"\\\"\\\"\\n\\nspark.sql(str)\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_prttn_exchg_lkp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prttn_exchg_lkp\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[File Load] MM_RUN_PRTTN_PLC",
      "operationDescription": "load MM_RUN_PRTTN_PLC",
      "predecessorName": "Pub - MM_TIME_PERD_XREF",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"fileType\": \"parquet\",\n  \"inferSchema\": \"false\",\n  \"path\": \"<@@PATH3@@>MM_RUN_PRTTN_PLC/\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"exclusive\",\n  \"createIfNotExist\": \"true\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_run_prttn_plc\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": true
    },
    {
      "operationName": "[DIST] PRTTN EXCHG LKP",
      "predecessorName": "[File Load] MM_RUN_PRTTN_PLC",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_join_prttn_exchg_lkp\"\n    }\n  ],\n  \"columns\": [\n    {\n      \"name\": \"fact_type_code\"\n    },\n    {\n      \"name\": \"srce_sys_id\"\n    },\n    {\n      \"name\": \"cntrt_id\"\n    },\n    {\n      \"name\": \"prod_prttn_code\"\n    },\n    {\n      \"name\": \"run_id\"\n    },\n    {\n      \"name\": \"mm_time_perd_end_date\"\n    },\n    {\n      \"name\": \"time_perd_class_code\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_distinct_prttn_exchg_lkp\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Distinct",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] run_prttn_plc",
      "predecessorName": "[DIST] PRTTN EXCHG LKP",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_distinct_prttn_exchg_lkp\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"fact_type_code\",\n      \"columnName\": \"fact_type_code\"\n    },\n    {\n      \"transformation\": \"cast(srce_sys_id as decimal(38,18))\",\n      \"columnName\": \"srce_sys_id\"\n    },\n    {\n      \"transformation\": \"cast(cntrt_id as decimal(38,18))\",\n      \"columnName\": \"cntrt_id\"\n    },\n    {\n      \"transformation\": \"prod_prttn_code\",\n      \"columnName\": \"prod_prttn_code\"\n    },\n    {\n      \"transformation\": \"cast(run_id as decimal(38,18))\",\n      \"columnName\": \"run_id\"\n    },\n    {\n      \"transformation\": \"mm_time_perd_end_date\",\n      \"columnName\": \"mm_time_perd_end_date\"\n    },\n    {\n      \"transformation\": \"time_perd_class_code\",\n      \"columnName\": \"time_perd_class_code\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_run_prttn_plc\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] prod prttn plc",
      "predecessorName": "[CET] run_prttn_plc",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"referenceDataframe\": \"df_mm_run_prttn_plc\",\n  \"deleteColumns\": \"true\",\n  \"referenceColumnOrder\": \"true\",\n  \"milestone\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_distinct_prttn_exchg_lkp\"\n    },\n    {\n      \"name\": \"df_mm_run_prttn_plc\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_distinct_prttn_exchg_lkp\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnComplementer",
      "overridableIndicator": false
    },
    {
      "operationName": "[MERGE] prod prttn plc",
      "predecessorName": "[CC] prod prttn plc",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"referenceDataframe\": \"df_mm_run_prttn_plc\",\n  \"distinct\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_distinct_prttn_exchg_lkp\"\n    },\n    {\n      \"name\": \"df_mm_run_prttn_plc\"\n    }\n  ],\n  \"logicalKey\": [\n    \"cntrt_id\",\n    \"run_id\"\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_run_prttn_plc\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Merger",
      "overridableIndicator": false
    },
    {
      "operationName": "[File Pub]",
      "predecessorName": "[MERGE] prod prttn plc",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"semaphoreOption\": \"none\",\n  \"format\": \"parquet\",\n  \"disableSuccessFile\": \"false\",\n  \"shouldDeleteSuccess\": \"false\",\n  \"useApiV2.5\": \"false\",\n  \"path\": \"<@@PATH3@@>MM_RUN_PRTTN_PLC/\",\n  \"mode\": \"append\",\n  \"compression\": \"None\",\n  \"coalesceByNumber\": 30,\n  \"repartitionByColumn\": [],\n  \"columnToDrop\": [],\n  \"partitionByColumn\": [],\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_run_prttn_plc\"\n    }\n  ]\n}",
      "operationVersionName": "FilePublisher",
      "overridableIndicator": true
    },
    {
      "operationName": "release sem for MM_RUN_PRTTN_PLC",
      "predecessorName": "[File Pub]",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"actionType\": \"release\",\n  \"itemType\": \"path\",\n  \"itemPath\": \"/mnt/<@@PATH3@@>MM_RUN_PRTTN_PLC/\"\n}",
      "operationVersionName": "SemaphoreOperation",
      "overridableIndicator": false
    },
    {
      "operationName": "[SCH] Schema for Fact Time Attributes Mapping",
      "predecessorName": "release sem for MM_RUN_PRTTN_PLC",
      "jsonSpecification": "{\r\n  \"active\": \"true\",\r\n  \"milestone\": \"false\",\r\n  \"saveOutputDfsToTempTable\": \"false\",\r\n  \"manualSchema\": \"true\",\r\n  \"transformations\": [\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_prcut_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_prcut_only_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_featr_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_featr_wo_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_dsply_wo_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_qlty_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_bnspk_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_qlty_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_musd_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_musd_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_musd_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_musd_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_musd_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_musd_prcut_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"string\",\r\n      \"columnName\": \"extrn_prod_id\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_musd_prcut_only_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_musd_featr_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_musd_featr_wo_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_musd_dsply_wo_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_musd_qlty_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_musd_bnspk_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_musd_qlty_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mcus_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mcus_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mcus_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mcus_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mcus_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mcus_prcut_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mcus_prcut_only_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mcus_featr_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mcus_featr_wo_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mcus_dsply_wo_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mcus_qlty_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mcus_bnspk_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_meur_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_meur_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_meur_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_lc_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_usd_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_usd_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_usd_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_cus_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_cus_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_cus_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_eur_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_eur_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_eur_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_p_lc_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_p_lc_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_p_lc_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_p_usd_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_p_usd_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_p_usd_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_p_cus_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_p_cus_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_p_cus_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_p_eur_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_p_eur_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_p_eur_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_u_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_hndlg_u_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_su_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_hndlg_su_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_su_non_prmtn_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_su_any_prmtn_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"integer\",\r\n      \"columnName\": \"prod_skid\"\r\n    },\r\n    {\r\n      \"columnType\": \"integer\",\r\n      \"columnName\": \"mkt_skid\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_musd_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mcus_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mcus_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mcus_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_meur_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_meur_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_meur_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"num_sku_u_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_num_sku_u_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"shelf_lngth_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"shelf_sellg_lngth_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"prmtn_itsty_su_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"numrc_dist_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sku_per_dspt_u_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_featr_dsply_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_dsply_prcut_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_featr_wo_dsply_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_dsply_wo_featr_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_featr_prcut_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_coupn_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_gift_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_comm_store_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_comm_std_pack_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_other_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_hndlg_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_sellg_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_sellg_lc_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_sellg_4_wk_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_purch_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_stock_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_oos_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mu_any_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_msu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"tdp_u_any_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"tdp_u_featr_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_per_lngth_msu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_per_lngth_mlc_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_per_lngth_musd_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_per_lngth_mcus_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_per_lngth_meur_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"purch_msu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_lc_featr_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_lc_featr_wo_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_lc_prcut_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_usd_dsply_wo_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_usd_featr_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_usd_featr_wo_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_usd_prcut_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_lc_dsply_wo_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_lc_featr_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_lc_featr_wo_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_lc_prcut_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_usd_dsply_wo_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_usd_featr_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_cnprc_mcus_efeat_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_sellg_su_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mu_non_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mu_any_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"string\",\r\n      \"columnName\": \"fact_type_code\"\r\n    },\r\n    {\r\n      \"columnType\": \"string\",\r\n      \"columnName\": \"prod_prttn_code\"\r\n    },\r\n    {\r\n      \"columnType\": \"string\",\r\n      \"columnName\": \"geo_id\"\r\n    },\r\n    {\r\n      \"columnType\": \"string\",\r\n      \"columnName\": \"iso_crncy_code\"\r\n    },\r\n    {\r\n      \"columnType\": \"integer\",\r\n      \"columnName\": \"cntrt_id\"\r\n    },\r\n    {\r\n      \"columnType\": \"string\",\r\n      \"columnName\": \"rcd_orign_code\"\r\n    },\r\n    {\r\n      \"columnType\": \"integer\",\r\n      \"columnName\": \"srce_sys_id\"\r\n    },\r\n    {\r\n      \"columnType\": \"integer\",\r\n      \"columnName\": \"run_id\"\r\n    },\r\n    {\r\n      \"columnType\": \"integer\",\r\n      \"columnName\": \"mkt_lvl_id\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_usd_prcut_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"tdp_sellg_4_wk_u_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mu_prcut_only_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"rsrv_stock_msu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"rsrv_stock_mu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mlc_dsply_wo_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mlc_featr_wo_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_lc_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_hndlg_lc_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_lc_non_prmtn_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_lc_any_prmtn_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_of_sku_u_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_of_sku_su_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_of_shelf_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"acct_share_u_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"acct_share_u_any_prmtn_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"acct_share_su_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"acct_share_su_any_prmtn_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"acct_share_pu_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"acct_share_pu_any_prmtn_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"acct_share_lc_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"acct_share_lc_any_prmtn_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"exchg_rate_usd_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"exchg_rate_cus_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"exchg_rate_eur_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_efeat_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_cnprc_mlc_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_cnprc_mlc_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_cnprc_mlc_efeat_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_efprc_mlc_efeat_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_cnprc_musd_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_cnprc_musd_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_cnprc_musd_efeat_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_efprc_musd_efeat_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_bnspk_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"numrc_dist_any_prmtn_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"numrc_dist_hndlg_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"numrc_dist_sellg_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_cnprc_mcus_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mu_prcut_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_usd_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_usd_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_usd_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_cus_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_cus_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_cus_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_eur_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_eur_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_eur_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_lc_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"stock_mu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_msu_non_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_msu_any_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_msu_featr_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_msu_dsply_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_msu_prcut_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_msu_prcut_only_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_msu_featr_dsply_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mpu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mpu_non_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mpu_any_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mlc_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mlc_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mlc_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_musd_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_musd_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"numrc_dist_featr_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"num_unvrs_sellg_wk_cnt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_nrmlz_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_nrmlz_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mu_nrmlz_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_su_dsply_wo_featr_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_su_featr_dsply_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mu_featr_dsply_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mu_featr_wo_dsply_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"tdp_u_dsply_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"tdp_u_prcut_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"tdp_u_prcut_only_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"tdp_u_featr_dsply_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"tdp_u_featr_wo_dsply_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"tdp_u_dsply_wo_featr_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"stock_msu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"stock_per_dspt_msu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_lc_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_musd_dsply_wo_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_musd_featr_wo_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"frwrd_stock_mu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mu_dsply_wo_featr_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mu_qlty_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_non_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_any_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_featr_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_dsply_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_prcut_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_prcut_only_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_prcut_10_20_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_prcut_20_30_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_prcut_30_40_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_prcut_40_more_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_featr_dsply_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_featr_wo_dsply_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_dsply_wo_featr_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_bnspk_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_msu_qlty_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mpu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mpu_non_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mpu_any_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mpu_featr_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mpu_prcut_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mpack_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"tdp_u_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mu_dsply_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mu_featr_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"tdp_u_non_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"incrm_mlc_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"incrm_msu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"incrm_musd_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"incrm_mu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"numrc_dist_dsply_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_cnprc_mcus_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_efprc_mcus_efeat_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_cnprc_meur_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_cnprc_meur_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_cnprc_meur_efeat_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_efprc_meur_efeat_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"disc_depth_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"prmtn_itsty_mlc_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_invst_prcut_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_prcut_durtn_wk_cnt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_mlc_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"frwrd_stock_msu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"frwrd_stock_per_dspt_msu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mu_non_prmtn_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mu_dsply_wo_featr_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mu_featr_wo_dsply_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_est_mkt_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_sellg_4_wk_dsply_wo_featr_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_sellg_4_wk_featr_dsply_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_sellg_4_wk_featr_wo_dsply_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mlc_featr_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_musd_featr_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"basln_mu_featr_dsply_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"numrc_dist_sellg_3_mth_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_sellg_3_mth_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_usd_featr_wo_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"numrc_dist_sellg_4_wk_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"numrc_dist_purch_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"numrc_dist_stock_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"numrc_dist_oos_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_any_prmtn_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_featr_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_dsply_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_prcut_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_prcut_only_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"numrc_dist_oos_hndlg_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_prcut_10_20_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_prcut_20_30_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_prcut_30_40_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"wgt_dist_prcut_40_more_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"string\",\r\n      \"columnName\": \"extrn_mkt_id\"\r\n    },\r\n    {\r\n      \"columnType\": \"string\",\r\n      \"columnName\": \"extrn_time_perd_id\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_su_featr_wo_dsply_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"categ_share_su_prcut_pct\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_su_lc_dsply_wo_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_meur_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_meur_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_meur_prcut_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_meur_prcut_only_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_meur_featr_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_meur_featr_wo_dsply_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_meur_dsply_wo_featr_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_meur_qlty_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_meur_bnspk_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_per_dspt_mu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_per_dspt_msu_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_per_dspt_mlc_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_per_dspt_musd_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_per_dspt_mcus_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"sales_per_dspt_meur_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"tdp_u_qlty_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"dist_effcy_u_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"num_store_unvrs_u_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"num_store_unvrs_sellg_u_qty\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_lc_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_lc_non_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"price_per_u_lc_any_prmtn_amt\"\r\n    },\r\n    {\r\n      \"columnType\": \"string\",\r\n      \"columnName\": \"time_perd_id\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"exchg_rate\"\r\n    },\r\n    {\r\n      \"columnType\": \"float\",\r\n      \"columnName\": \"const_exchg_rate\"\r\n    },\r\n    {\r\n      \"columnType\": \"date\",\r\n      \"columnName\": \"mm_time_perd_end_date\"\r\n    }\r\n  ],\r\n  \"outputDataframes\": [\r\n    {\r\n      \"name\": \"df_sch_fct_att_mapng\",\r\n      \"cache\": \"none\"\r\n    }\r\n  ]\r\n}",
      "operationVersionName": "CreateSchema",
      "overridableIndicator": false
    },
    {
      "operationName": "Refresh Dataframes",
      "predecessorName": "[SCH] Schema for Fact Time Attributes Mapping",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf = dict_all_dfs['df_mm_run_prttn_plc'][\\\"df_object\\\"]\\n\\n\\ndf.createOrReplaceTempView('MM_RUN_PRTTN_PLC')\\nrefresh = \\\"REFRESH table MM_RUN_PRTTN_PLC\\\"\\nspark.sql(refresh)\\nquery = \\\"select * from MM_RUN_PRTTN_PLC\\\"\\ndf = spark.sql(query)\\n\\ndict_all_dfs['df_mm_run_prttn_plc'] = {\\\"df_object\\\" :df}\\ndf_output_dict['df_mm_run_prttn_plc'] = df\\n\\n\\ndf1 = dict_all_dfs['df_fact_skid_lkp_vw'][\\\"df_object\\\"]\\n\\ndf1.createOrReplaceTempView('FACT_SKID_LKP')\\nrefresh = \\\"REFRESH table FACT_SKID_LKP\\\"\\nspark.sql(refresh)\\nquery1 = \\\"select * from FACT_SKID_LKP\\\"\\ndf1 = spark.sql(query1)\\n\\ndict_all_dfs['df_fact_skid_lkp_vw'] = {\\\"df_object\\\" :df1}\\ndf_output_dict['df_fact_skid_lkp_vw'] = df1\\n\\n\\ndf2 = dict_all_dfs['df_prttn_exchg_lkp'][\\\"df_object\\\"]\\n\\ndf2.createOrReplaceTempView('PRTTN_EXCHG_LKP')\\nrefresh = \\\"REFRESH table PRTTN_EXCHG_LKP\\\"\\nspark.sql(refresh)\\nquery2 = \\\"select * from PRTTN_EXCHG_LKP\\\"\\ndf2 = spark.sql(query2)\\n\\ndict_all_dfs['df_prttn_exchg_lkp'] = {\\\"df_object\\\" :df2}\\ndf_output_dict['df_prttn_exchg_lkp'] = df2\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_run_prttn_plc\"\n    },\n    {\n      \"name\": \"df_fact_skid_lkp_vw\"\n    },\n    {\n      \"name\": \"df_prttn_exchg_lkp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_run_prttn_plc\",\n      \"cache\": \"none\"\n    },\n    {\n      \"name\": \"df_fact_skid_lkp_vw\",\n      \"cache\": \"none\"\n    },\n    {\n      \"name\": \"df_prttn_exchg_lkp\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] Complementer for schema & fact skid lkp_vw",
      "predecessorName": "Refresh Dataframes",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"referenceDataframe\": \"df_sch_fct_att_mapng\",\n  \"deleteColumns\": \"true\",\n  \"referenceColumnOrder\": \"true\",\n  \"milestone\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fact_skid_lkp_vw\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_cc_fact_skid_lkp_vw\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnComplementer",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] Complementer for schema & prttn exchg lkp",
      "predecessorName": "[CC] Complementer for schema & fact skid lkp_vw",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"referenceDataframe\": \"df_sch_fct_att_mapng\",\n  \"deleteColumns\": \"true\",\n  \"referenceColumnOrder\": \"true\",\n  \"milestone\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_prttn_exchg_lkp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_cc_prttn_exchg_lkp\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnComplementer",
      "overridableIndicator": false
    },
    {
      "operationName": "[JOIN] Fact Time Attributes Mapping",
      "predecessorName": "[CC] Complementer for schema & prttn exchg lkp",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"joinType\": \"LEFT OUTER\",\n  \"referenceDataframe\": \"df_cc_prttn_exchg_lkp\",\n  \"joinExpression\": \"in.extrn_time_perd_id = ref.extrn_time_perd_id AND in.srce_sys_id = ref.srce_sys_id AND in.prod_prttn_code = ref.prod_prttn_code\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_cc_fact_skid_lkp_vw\",\n      \"addAllColumns\": \"true\",\n      \"columns\": [\n        {\n          \"columnName\": \"extrn_time_perd_id\",\n          \"columnAlias\": \"extrn_time_perd_id\"\n        },\n        {\n          \"columnName\": \"time_perd_id\",\n          \"columnAlias\": \"time_perd_id2\"\n        },\n        {\n          \"columnName\": \"exchg_rate\",\n          \"columnAlias\": \"exchg_rate2\"\n        },\n        {\n          \"columnName\": \"const_exchg_rate\",\n          \"columnAlias\": \"const_exchg_rate2\"\n        },\n        {\n          \"columnName\": \"mm_time_perd_end_date\",\n          \"columnAlias\": \"mm_time_perd_end_date2\"\n        }\n      ]\n    },\n    {\n      \"name\": \"df_cc_prttn_exchg_lkp\",\n      \"addAllColumns\": \"false\",\n      \"columns\": [\n        {\n          \"columnName\": \"time_perd_id\",\n          \"columnAlias\": \"time_perd_id\"\n        },\n        {\n          \"columnName\": \"exchg_rate\",\n          \"columnAlias\": \"exchg_rate\"\n        },\n        {\n          \"columnName\": \"const_exchg_rate\",\n          \"columnAlias\": \"const_exchg_rate\"\n        },\n        {\n          \"columnName\": \"mm_time_perd_end_date\",\n          \"columnAlias\": \"mm_time_perd_end_date\"\n        }\n      ]\n    }\n  ],\n  \"alterQuery\": [\n    {\n      \"hintType\": \"none\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fact_time_lkp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Joiner",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] Fact Time Attributes Mapping",
      "predecessorName": "[JOIN] Fact Time Attributes Mapping",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"referenceDataframe\": \"df_sch_fct_att_mapng\",\n  \"deleteColumns\": \"true\",\n  \"referenceColumnOrder\": \"true\",\n  \"milestone\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fact_time_lkp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fact_time_lkp\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnComplementer",
      "overridableIndicator": false
    },
    {
      "operationName": "[Gen] retention pd",
      "predecessorName": "[CC] Fact Time Attributes Mapping",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\nfrom datetime import date \\n\\ndf_fact_time_lkp = dict_all_dfs['df_fact_time_lkp'][\\\"df_object\\\"]\\n\\nretention_pd = <<RETENTION_PERIOD>>\\nTIME_PERD_CLASS_CODE = '<<TIME_PERD_CLASS_CODE>>'\\nif retention_pd == 0 or retention_pd == 9999:\\n  retention_pd = (date.today().year)-1900\\nelse:\\n  retention_pd = retention_pd\\n\\nfrom pyspark.sql.functions import to_date, max, min, date_sub, lit, when, col\\nfrom pyspark.sql.functions import *\\n\\ndf5 = df_fact_time_lkp.withColumn('mm_time_perd_end_date', to_date('mm_time_perd_end_date', 'yyyy-MM-dd'))\\n\\nlst_cols = df5.columns\\n\\ndf5 = df5.select( max('mm_time_perd_end_date').alias('max_date'))\\n\\n\\nif TIME_PERD_CLASS_CODE == 'WK':\\n\\tdf5 = df5.withColumn('min_date', date_sub('max_date', ((retention_pd*7))+1))\\nelif TIME_PERD_CLASS_CODE == 'MTH':\\n\\tdf5 = df5.withColumn('min_date', add_months('max_date',-((retention_pd*1))))\\nelif TIME_PERD_CLASS_CODE == 'BIMTH':\\n\\tdf5 = df5.withColumn('min_date', add_months('max_date',-((retention_pd*2))+2))\\nelse:\\n    df5 = df5.withColumn('min_date', add_months('max_date',-((retention_pd*3))+3))\\n\\nlst_date = df5.collect()\\n\\nmin_date = lst_date[0]['min_date']\\n\\nmax_date = lst_date[0]['max_date']\\n\\n\\ndf4_1 = df_fact_time_lkp.withColumn('ret_date', lit(min_date))\\n\\n\\ndf4_1 = df4_1.withColumn('ignr_ind', col('mm_time_perd_end_date')<col('ret_date'))\\n\\n\\ndf_fact_time_lkp = df4_1.filter('ignr_ind = false').drop('ret_date', 'ignr_ind')\\n#df_fact_time_lkp = df4_1.drop('ret_date', 'ignr_ind')\\n\\n\\ndict_all_dfs['df_fact_time_lkp'] = {\\\"df_object\\\" :df_fact_time_lkp}\\ndf_output_dict['df_fact_time_lkp'] = df_fact_time_lkp\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fact_time_lkp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fact_time_lkp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[Gen] Read fact schema",
      "predecessorName": "[Gen] retention pd",
      "jsonSpecification": "{\r\n  \"active\": \"true\",\r\n  \"separateSparkSession\": \"false\",\r\n  \"milestone\": \"false\",\r\n  \"saveOutputDfsToTempTable\": \"false\",\r\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\n\\n\\n\\ndf_fct_schema = spark.read.format(\\\"parquet\\\").load(\\\"/mnt/refined/NNIT/tradepanel/prod-tp-lightrefined/MM_TP_FCT_SCHEMA\\\")\\n    \\ndf_output_dict['df_fct_schema'] = df_fct_schema\\ndict_all_dfs['df_fct_schema'] = {\\\"df_object\\\" :df_fct_schema}\",\r\n  \"inputDataframes\": [\r\n    {\r\n      \"name\": \"df_fact_time_lkp\"\r\n    }\r\n  ],\r\n  \"outputDataframes\": [\r\n    {\r\n      \"name\": \"df_fct_schema\",\r\n      \"cache\": \"materialize\"\r\n    }\r\n  ]\r\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[Gen] Complement and typecast the columns",
      "predecessorName": "[Gen] Read fact schema",
      "jsonSpecification": "{\r\n  \"active\": \"true\",\r\n  \"separateSparkSession\": \"false\",\r\n  \"milestone\": \"false\",\r\n  \"saveOutputDfsToTempTable\": \"false\",\r\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf_fact_time_lkp= dict_all_dfs['df_fact_time_lkp'][\\\"df_object\\\"]\\ndf_fct_schema = dict_all_dfs['df_fct_schema'][\\\"df_object\\\"]\\n\\nfrom pyspark.sql.functions import col\\n\\nlkp_cols = df_fact_time_lkp.columns\\nsdim_cols = df_fct_schema.columns\\n\\nfrom pyspark.sql.functions import lit\\nadd_cols = list(set(sdim_cols)-set(lkp_cols))\\nfor i in add_cols:\\n  df_fact_time_lkp = df_fact_time_lkp.withColumn(i,lit(None).cast('string'))\\n\\ndf_fact_time_lkp = df_fact_time_lkp.select(*sdim_cols)\\ncols = df_fact_time_lkp.columns\\n\\nfor j in cols:\\n  df_fact_time_lkp = df_fact_time_lkp.withColumn(j, col(j).cast(dict(df_fct_schema.dtypes)[j]))\\n\\ndict_all_dfs['df_fact_time_lkp'] = {\\\"df_object\\\" :df_fact_time_lkp}\\ndf_output_dict['df_fact_time_lkp'] = df_fact_time_lkp\",\r\n  \"inputDataframes\": [\r\n    {\r\n      \"name\": \"df_fact_time_lkp\"\r\n    },\r\n    {\r\n      \"name\": \"df_fct_schema\"\r\n    }\r\n  ],\r\n  \"outputDataframes\": [\r\n    {\r\n      \"name\": \"df_fact_time_lkp\",\r\n      \"cache\": \"materialize\"\r\n    }\r\n  ]\r\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[GEN] - Updated Latest Data date",
      "predecessorName": "[Gen] Complement and typecast the columns",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\nimport pyspark\\nfrom pyspark.sql.types import *\\nfrom pyspark.sql import Window, functions as fn\\nfrom pyspark.sql.functions import *\\n\\n\\n\\nPROCESS_RUN_KEY = <<PROCESS_RUN_KEY>>\\nCNTRT_ID = <<CNTRT_ID>>\\n\\ndf_fact_time_lkp = dict_all_dfs['df_fact_time_lkp'][\\\"df_object\\\"]\\n\\n\\ndf_fact_time_lkp = df_fact_time_lkp.select(max(\\\"mm_time_perd_end_date\\\"))\\n\\ndf_fact_time_lkp = df_fact_time_lkp.withColumnRenamed(\\\"max(mm_time_perd_end_date)\\\", \\\"latest_time_perd_end_date\\\")\\n\\ndf_fct_date = df_fact_time_lkp.withColumn('run_id',lit(PROCESS_RUN_KEY)).withColumn('cntrt_id',lit(CNTRT_ID)).withColumn('dlvry_id',lit(PROCESS_RUN_KEY))\\n\\n\\njdbcDF2 = df_fct_date\\njdbcDF2.write.format(\\\"parquet\\\").mode(\\\"append\\\").save(\\\"/mnt/refined/NNIT/tradepanel/prod-tp-refined/MM_DLVRY_LATEST_DATE_PLC\\\")\\n\\ndf_output_dict['df_fct_date'] = df_fct_date\\ndict_all_dfs['df_fct_date'] = {\\\"df_object\\\" :df_fct_date}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fact_time_lkp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_date\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] Add partition columns fact -fct latest",
      "predecessorName": "[GEN] - Updated Latest Data date",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fact_time_lkp\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"cast(srce_sys_id as integer)\",\n      \"columnName\": \"part_srce_sys_id\"\n    },\n    {\n      \"transformation\": \"cast(cntrt_id as long)\",\n      \"columnName\": \"part_cntrt_id\"\n    },\n    {\n      \"transformation\": \"prod_prttn_code\",\n      \"columnName\": \"part_prod_prttn_code\"\n    },\n    {\n      \"transformation\": \"mm_time_perd_end_date\",\n      \"columnName\": \"part_mm_time_perd_end_date\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fact_time_lkp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "AGR prttn keys",
      "predecessorName": "[CET] Add partition columns fact -fct latest",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fact_time_lkp\"\n    }\n  ],\n  \"aggregate\": [\n    {\n      \"expression\": \"concat(format_string('part_srce_sys_id=%d/part_cntrt_id=%d/part_prod_prttn_code=%s/part_mm_time_perd_end_date=',  part_srce_sys_id, part_cntrt_id,part_prod_prttn_code), date_format(part_mm_time_perd_end_date, 'yyyy-MM-dd'))\",\n      \"alias\": \"PartitionSet\"\n    }\n  ],\n  \"groupBy\": [\n    \"part_srce_sys_id\",\n    \"part_cntrt_id\",\n    \"part_prod_prttn_code\",\n    \"part_mm_time_perd_end_date\"\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prttn_fltr\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Aggregator",
      "overridableIndicator": false
    },
    {
      "operationName": "[File Load] MM_TP_MTH_FCT",
      "predecessorName": "AGR prttn keys",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"fileType\": \"parquet\",\n  \"inferSchema\": \"false\",\n  \"path\": \"<@@PATH3@@>MM_TP_<<TIME_PERD_CLASS_CODE>>_FCT/\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"exclusive\",\n  \"createIfNotExist\": \"true\",\n  \"partitions\": \"<|df_prttn_fltr.PartitionSet|>\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_mth_fct\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": true
    },
    {
      "operationName": "[Gen] column complementing",
      "predecessorName": "[File Load] MM_TP_MTH_FCT",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf_mm_tp_mth_fct= dict_all_dfs['df_mm_tp_mth_fct'][\\\"df_object\\\"]\\ndf_fct_schema = dict_all_dfs['df_fct_schema'][\\\"df_object\\\"]\\n\\nfrom pyspark.sql.functions import col\\n\\nlkp_cols = df_mm_tp_mth_fct.columns\\nsdim_cols = df_fct_schema.columns\\n\\nfrom pyspark.sql.functions import lit\\nadd_cols = list(set(sdim_cols)-set(lkp_cols))\\nfor i in add_cols:\\n  df_mm_tp_mth_fct = df_mm_tp_mth_fct.withColumn(i,lit(None).cast('string'))\\n\\ndf_mm_tp_mth_fct = df_mm_tp_mth_fct.select(*sdim_cols)\\ncols = df_mm_tp_mth_fct.columns\\n\\nfor j in cols:\\n  df_mm_tp_mth_fct = df_mm_tp_mth_fct.withColumn(j, col(j).cast(dict(df_fct_schema.dtypes)[j]))\\n\\ndf_mm_tp_mth_fct  = df_mm_tp_mth_fct \\n\\ndict_all_dfs['df_mm_tp_mth_fct'] = {\\\"df_object\\\" :df_mm_tp_mth_fct}\\ndf_output_dict['df_mm_tp_mth_fct'] = df_mm_tp_mth_fct\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fct_schema\"\n    },\n    {\n      \"name\": \"df_mm_tp_mth_fct\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_mth_fct\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] PRTIONS",
      "predecessorName": "[Gen] column complementing",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_mth_fct\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"round(srce_sys_id, 0)\",\n      \"columnName\": \"part_srce_sys_id\"\n    },\n    {\n      \"transformation\": \"round(cntrt_id, 0)\",\n      \"columnName\": \"part_cntrt_id\"\n    },\n    {\n      \"transformation\": \"prod_prttn_code\",\n      \"columnName\": \"part_prod_prttn_code\"\n    },\n    {\n      \"transformation\": \"mm_time_perd_end_date\",\n      \"columnName\": \"part_mm_time_perd_end_date\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_mth_fct\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "release sem for MM FCT ",
      "predecessorName": "[CET] PRTIONS",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"actionType\": \"release\",\n  \"itemType\": \"path\",\n  \"itemPath\": \"/mnt/<@@PATH3@@>MM_TP_<<TIME_PERD_CLASS_CODE>>_FCT/part_srce_sys_id=<<SRCE_SYS_ID>>/part_cntrt_id=<<CNTRT_ID>>/\"\n}",
      "operationVersionName": "SemaphoreOperation",
      "overridableIndicator": false
    },
    {
      "operationName": "[Fil] changing raw dataframe",
      "predecessorName": "release sem for MM FCT ",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"expression\": \"1=1\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_fact_time_lkp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fact_promo_vw\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Filter",
      "overridableIndicator": false
    }
  ],
  "graphName": "T2 Three Files Contract - Fact Derivation - 02 v1"
}