{
  "applicationName": "TRADEPANEL",
  "jsonSpecification": "{\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"title\": \"FactItem Main Chain Overloading\",\r\n    \"description\": \"Overloading parameters in Fact Item Main Chain\",\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n\t\t\r\n   },\r\n    \"required\": [],\r\n    \"configurable\": []\r\n}",
  "nodes": [
    {
      "operationName": "dummy",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"manualSchema\": \"true\",\n  \"transformations\": [\n    {\n      \"columnType\": \"string\",\n      \"columnName\": \"test\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_dummy\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "CreateSchema",
      "overridableIndicator": false
    },
    {
      "operationName": "[JOIN] TP_WK_FCT",
      "operationDescription": "join",
      "predecessorName": "dummy",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"joinType\": \"LEFT OUTER\",\n  \"referenceDataframe\": \"df_mm_prod_prttn_xref\",\n  \"joinExpression\": \"in.pg_categ_txt = ref.extrn_prod_prttn_id\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_input\",\n      \"addAllColumns\": \"true\",\n      \"columns\": [\n        {\n          \"columnName\": \"pg_categ_txt\",\n          \"columnAlias\": \"pg_categ_txt\"\n        }\n      ]\n    },\n    {\n      \"name\": \"df_mm_prod_prttn_xref\",\n      \"addAllColumns\": \"false\",\n      \"columns\": [\n        {\n          \"columnName\": \"prod_prttn_code\",\n          \"columnAlias\": \"prod_prttn_code\"\n        }\n      ]\n    }\n  ],\n  \"alterQuery\": [\n    {\n      \"hintType\": \"broadcastjoin\",\n      \"broadcastDataframe\": \"ref\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_tp_wk_fct_stg\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Joiner",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] ADD PART PROD PRTTN CODE",
      "predecessorName": "[JOIN] TP_WK_FCT",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_tp_wk_fct_stg\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"prod_prttn_code\",\n      \"columnName\": \"part_prod_prttn_code\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_tp_wk_fct_stg\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "refresh view",
      "predecessorName": "[CET] ADD PART PROD PRTTN CODE",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf = dict_all_dfs['df_connect_mm_prod_dim_vw'][\\\"df_object\\\"]\\n\\ndf.createOrReplaceTempView('CONNECT_MM_PROD_DIM_VW')\\nrefresh = \\\"REFRESH table CONNECT_MM_PROD_DIM_VW\\\"\\nspark.sql(refresh)\\nquery = \\\"select * from CONNECT_MM_PROD_DIM_VW\\\"\\ndf_out = spark.sql(query)\\n\\ndf_output_dict['df_connect_mm_prod_dim_vw'] = df_out\\ndict_all_dfs['df_connect_mm_prod_dim_vw'] = {\\\"df_object\\\" :df_out}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_connect_mm_prod_dim_vw\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_connect_mm_prod_dim_vw\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "Load PROD_VW Schema",
      "predecessorName": "refresh view",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\n\\nref_db_url = dbutils.secrets.get('tp_dpf2cdl', 'refDBjdbcURL')\\nrefDBname = dbutils.secrets.get('tp_dpf2cdl', 'refDBname')\\nrefDBuser = dbutils.secrets.get('tp_dpf2cdl', 'refDBuser')\\nrefDBpwd = dbutils.secrets.get('tp_dpf2cdl', 'refDBpwd')\\n\\ndf_prod_schema = spark.read.format(\\\"jdbc\\\").option(\\\"driver\\\", \\\"org.postgresql.Driver\\\").option(\\\"url\\\", f\\\"{ref_db_url}/{refDBname}\\\").option(\\\"dbtable\\\", \\\"adwgp_mm.mm_prod_dim_vw_schema\\\").option(\\\"user\\\", f\\\"{refDBuser}\\\").option(\\\"password\\\", f\\\"{refDBpwd}\\\").option(\\\"ssl\\\", True).option(\\\"sslmode\\\", \\\"require\\\").option(\\\"sslfactory\\\",\\\"org.postgresql.ssl.NonValidatingFactory\\\").load()\\n    \\ndf_output_dict['df_prod_schema'] = df_prod_schema\\ndict_all_dfs['df_prod_schema'] = {\\\"df_object\\\" :df_prod_schema}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_dummy\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prod_schema\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[Load] MM_PROD_DIM_VW",
      "predecessorName": "Load PROD_VW Schema",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"fileType\": \"parquet\",\n  \"inferSchema\": \"false\",\n  \"path\": \"<@@PATH3@@>MM_PROD_DIM_VW/part_srce_sys_id=<<SRCE_SYS_ID>>\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"shared\",\n  \"createIfNotExist\": \"true\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prod_dim_connect\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": false
    },
    {
      "operationName": "Handle empty PROD_DIM",
      "predecessorName": "[Load] MM_PROD_DIM_VW",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\n\\ndf_prod_dim_connect = df_input_dict['df_prod_dim_connect']\\ndf_prod_schema = df_input_dict['df_prod_schema']\\n\\nif len(df_prod_dim_connect.head(1)) != 0:\\n  df_temp_input = df_prod_dim_connect\\nelse:\\n  df_temp_input = df_prod_schema.limit(0)\\n\\n\\ndf_output_dict['df_prod_dim_connect'] = df_temp_input\\ndict_all_dfs['df_prod_dim_connect'] = {\\\"df_object\\\" :df_temp_input}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_prod_dim_connect\"\n    },\n    {\n      \"name\": \"df_prod_schema\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prod_dim_connect\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] Adding prttn",
      "predecessorName": "Handle empty PROD_DIM",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_prod_dim_connect\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"round(srce_sys_id,0)\",\n      \"columnName\": \"part_srce_sys_id\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prod_dim_connect\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "release sem MM_PROD_DIM_VW",
      "predecessorName": "[CET] Adding prttn",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"actionType\": \"release\",\n  \"itemType\": \"path\",\n  \"itemPath\": \"/mnt/<@@PATH3@@>MM_PROD_DIM_VW/\"\n}",
      "operationVersionName": "SemaphoreOperation",
      "overridableIndicator": false
    },
    {
      "operationName": "Load prod_sdim schema",
      "predecessorName": "release sem MM_PROD_DIM_VW",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\n\\nref_db_url = dbutils.secrets.get('tp_dpf2cdl', 'refDBjdbcURL')\\nrefDBname = dbutils.secrets.get('tp_dpf2cdl', 'refDBname')\\nrefDBuser = dbutils.secrets.get('tp_dpf2cdl', 'refDBuser')\\nrefDBpwd = dbutils.secrets.get('tp_dpf2cdl', 'refDBpwd')\\n\\ndf_prod_sdim_schema = spark.read.format(\\\"jdbc\\\").option(\\\"driver\\\", \\\"org.postgresql.Driver\\\").option(\\\"url\\\", f\\\"{ref_db_url}/{refDBname}\\\").option(\\\"dbtable\\\", \\\"adwgp_mm.mm_prod_sdim_vw_schema\\\").option(\\\"user\\\", f\\\"{refDBuser}\\\").option(\\\"password\\\", f\\\"{refDBpwd}\\\").option(\\\"ssl\\\", True).option(\\\"sslmode\\\", \\\"require\\\").option(\\\"sslfactory\\\",\\\"org.postgresql.ssl.NonValidatingFactory\\\").load()\\n    \\ndf_output_dict['df_prod_sdim_schema'] = df_prod_sdim_schema\\ndict_all_dfs['df_prod_sdim_schema'] = {\\\"df_object\\\" :df_prod_sdim_schema}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_tp_wk_fct_stg\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prod_sdim_schema\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[Load] MM_PROD_SDIM_VW",
      "predecessorName": "Load prod_sdim schema",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"fileType\": \"parquet\",\n  \"inferSchema\": \"false\",\n  \"path\": \"<@@PATH3@@>MM_PROD_SDIM_VW/part_srce_sys_id=<<SRCE_SYS_ID>>\",\n  \"addInputFileName\": \"false\",\n  \"semaphoreOption\": \"shared\",\n  \"createIfNotExist\": \"true\",\n  \"mergeSchema\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prod_sdim_connect\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "FileLoaderTabular",
      "overridableIndicator": false
    },
    {
      "operationName": "Handle Empty PROD_SDIM",
      "predecessorName": "[Load] MM_PROD_SDIM_VW",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\n\\ndf_prod_sdim_connect = df_input_dict['df_prod_sdim_connect']\\ndf_prod_sdim_schema = df_input_dict['df_prod_sdim_schema']\\n\\nif len(df_prod_sdim_connect.head(1)) != 0:\\n  df_temp_input = df_prod_sdim_connect\\nelse:\\n  df_temp_input = df_prod_sdim_schema.limit(0)\\n\\n\\ndf_output_dict['df_prod_sdim_connect'] = df_temp_input\\ndict_all_dfs['df_prod_sdim_connect'] = {\\\"df_object\\\" :df_temp_input}\\n\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_prod_sdim_connect\"\n    },\n    {\n      \"name\": \"df_prod_sdim_schema\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prod_sdim_connect\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] Adding prttn sdim",
      "predecessorName": "Handle Empty PROD_SDIM",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_prod_sdim_connect\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"round(srce_sys_id,0)\",\n      \"columnName\": \"part_srce_sys_id\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_prod_sdim_connect\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "release sem MM_PROD_SDIM_VW",
      "predecessorName": "[CET] Adding prttn sdim",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"actionType\": \"release\",\n  \"itemType\": \"path\",\n  \"itemPath\": \"/mnt/<@@PATH3@@>MM_PROD_SDIM_VW/\"\n}",
      "operationVersionName": "SemaphoreOperation",
      "overridableIndicator": false
    },
    {
      "operationName": "load CONNECT_MM_PROD_DIM_VW",
      "predecessorName": "release sem MM_PROD_SDIM_VW",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\n\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf_prod_dim_connect = dict_all_dfs['df_prod_dim_connect'][\\\"df_object\\\"]\\ndf_prod_dim_connect.createOrReplaceTempView('mm_prod_dim_connect')\\n\\ndf_prod_sdim_connect = dict_all_dfs['df_prod_sdim_connect'][\\\"df_object\\\"]\\ndf_prod_sdim_connect.createOrReplaceTempView('mm_prod_sdim_connect')\\n\\ndf_connect_mm_prod_dim_vw = spark.sql(\\\"\\\"\\\"SELECT\\n    p.prod_skid,\\n    p.run_id,\\n    p.srce_sys_id,\\n    p.cntrt_id,\\n    p.prod_prttn_code,\\n    p.prod_name,\\n    p.prod_desc,\\n    p.prod_lvl_id,\\n    p.prod_lvl_name,\\n    p.all_prod_name,\\n    p.gbu_id,\\n    p.gbu_name,\\n    p.sub_gbu_id,\\n    p.sub_gbu_name,\\n    p.categ_id,\\n    p.categ_name,\\n    p.custm_agg_ind,\\n    p.pg_categ_txt,\\n\\tp.pg_super_categ_txt,\\n\\tp.upc_txt,\\n      CASE WHEN\\n          p.srce_sys_id = <<SRCE_SYS_ID>>\\n        AND p.upc_txt IS NOT NULL\\n        AND p.pg_super_categ_txt IS NOT NULL\\n      THEN\\n        p.upc_txt\\n         ||  ';'\\n\\n         ||  p.pg_categ_txt\\n         ||  ';'\\n\\n         ||  p.pg_super_categ_txt\\n      WHEN\\n          p.srce_sys_id = <<SRCE_SYS_ID>>\\n        AND p.upc_txt IS NOT NULL\\n        AND p.pg_super_categ_txt IS NULL\\n      THEN\\n        p.upc_txt\\n         ||  ';'\\n\\n         ||  p.pg_categ_txt\\n         /* Adding NOT APPLICABLE for all cases when SuperCategory is null which happens for HH ACN_ITEM file, while ACN_PROD file still has NOT APPLICABLE for those UPCs */\\n         ||';NOT APPLICABLE'\\n      WHEN\\n          p.srce_sys_id = <<SRCE_SYS_ID>>\\n        AND p.upc_txt IS NULL\\n        AND p.pg_super_categ_txt IS NOT NULL\\n      THEN\\n        p.pg_categ_txt\\n         ||  ';'\\n\\n         ||  p.pg_super_categ_txt\\n      WHEN\\n          p.srce_sys_id = <<SRCE_SYS_ID>>\\n        AND p.upc_txt IS NULL\\n        AND p.pg_super_categ_txt IS NULL\\n      THEN\\n        p.pg_categ_txt\\n      ELSE\\n        sp.extrn_prod_id\\n      END\\n    AS extrn_prod_id \\n  FROM\\n    mm_prod_dim_connect p\\n  LEFT JOIN\\n    mm_prod_sdim_connect sp\\n  ON\\n    p.srce_sys_id = sp.srce_sys_id\\n  AND p.prod_skid = sp.prod_skid\\n  AND p.cntrt_id = sp.cntrt_id\\n  WHERE\\n    p.cntrt_id = 0\\\"\\\"\\\")\\n\\ndf_output_dict['df_connect_mm_prod_dim_vw'] = df_connect_mm_prod_dim_vw\\ndict_all_dfs['df_connect_mm_prod_dim_vw'] = {\\\"df_object\\\" :df_connect_mm_prod_dim_vw}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_dummy\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_connect_mm_prod_dim_vw\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[MJOIN] ASSIGN DIMENSIONS TO FACT",
      "predecessorName": "load CONNECT_MM_PROD_DIM_VW",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_tp_wk_fct_stg\",\n      \"addAllColumns\": \"true\",\n      \"alias\": \"input\",\n      \"columns\": [\n        {\n          \"columnName\": \"mm_time_perd_end_date\"\n        }\n      ]\n    },\n    {\n      \"name\": \"df_connect_mm_prod_dim_vw\",\n      \"addAllColumns\": \"false\",\n      \"alias\": \"PROD\",\n      \"columns\": [\n        {\n          \"columnName\": \"prod_skid\",\n          \"columnAlias\": \"prod_skid\"\n        }\n      ]\n    },\n    {\n      \"name\": \"df_mm_mkt_dim\",\n      \"addAllColumns\": \"false\",\n      \"alias\": \"MKT\",\n      \"columns\": [\n        {\n          \"columnName\": \"mkt_skid\",\n          \"columnAlias\": \"mkt_skid\"\n        }\n      ]\n    },\n    {\n      \"name\": \"df_mm_time_perd_fdim\",\n      \"addAllColumns\": \"false\",\n      \"alias\": \"TIME\",\n      \"columns\": [\n        {\n          \"columnName\": \"time_perd_id\",\n          \"columnAlias\": \"time_perd_id\"\n        }\n      ]\n    }\n  ],\n  \"joinOperations\": [\n    {\n      \"joinType\": \"LEFT OUTER\",\n      \"joinDataframeAlias\": \"PROD\",\n      \"joinExpression\": \"input.extrn_prod_id = PROD.extrn_prod_id AND PROD.srce_sys_id = <<SRCE_SYS_ID>>\"\n    },\n    {\n      \"joinType\": \"LEFT OUTER\",\n      \"joinDataframeAlias\": \"MKT\",\n      \"joinExpression\": \"input.mkt_dsply_name = MKT.mkt_name AND MKT.srce_sys_id=<<SRCE_SYS_ID>>\"\n    },\n    {\n      \"joinType\": \"LEFT OUTER\",\n      \"joinDataframeAlias\": \"TIME\",\n      \"joinExpression\": \"input.mm_time_perd_end_date = TIME.time_perd_end_Date AND TIME.time_perd_class_code = '<<TIME_PERD_CLASS_CODE>>' AND TIME.time_perd_type_code = '<<TIME_PERD_TYPE_CODE>>'\"\n    }\n  ],\n  \"alterQuery\": [\n    {\n      \"hintType\": \"none\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_tp_wk_fct_stg\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "MultipleJoiner",
      "overridableIndicator": false
    },
    {
      "operationName": "[CET] CAST MEASURES AS DECIMAL",
      "predecessorName": "[MJOIN] ASSIGN DIMENSIONS TO FACT",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"AddAllSourceColumns\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_tp_wk_fct_stg\"\n    }\n  ],\n  \"transformations\": [\n    {\n      \"transformation\": \"CAST(basln_mlc_amt AS numeric(38,10))\",\n      \"columnName\": \"basln_mlc_amt\"\n    },\n    {\n      \"transformation\": \"CAST(basln_msu_qty AS numeric(38,10))\",\n      \"columnName\": \"basln_msu_qty\"\n    },\n    {\n      \"transformation\": \"CAST(basln_musd_amt AS numeric(38,10))\",\n      \"columnName\": \"basln_musd_amt\"\n    },\n    {\n      \"transformation\": \"CAST(basln_mu_qty AS numeric(38,10))\",\n      \"columnName\": \"basln_mu_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mlc_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_mlc_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mlc_any_prmtn_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_mlc_any_prmtn_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mlc_dsply_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_mlc_dsply_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mlc_dsply_wo_featr_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_mlc_dsply_wo_featr_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mlc_featr_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_mlc_featr_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mlc_featr_dsply_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_mlc_featr_dsply_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mlc_featr_wo_dsply_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_mlc_featr_wo_dsply_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mlc_prcut_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_mlc_prcut_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mlc_prcut_only_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_mlc_prcut_only_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_msu_any_prmtn_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_msu_any_prmtn_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_msu_dsply_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_msu_dsply_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_msu_dsply_wo_featr_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_msu_dsply_wo_featr_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_msu_featr_dsply_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_msu_featr_dsply_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_msu_featr_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_msu_featr_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_msu_featr_wo_dsply_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_msu_featr_wo_dsply_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_msu_prcut_only_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_msu_prcut_only_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_msu_prcut_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_msu_prcut_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_msu_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_msu_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_musd_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_musd_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_musd_any_prmtn_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_musd_any_prmtn_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_musd_dsply_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_musd_dsply_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_musd_dsply_wo_featr_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_musd_dsply_wo_featr_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_musd_featr_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_musd_featr_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_musd_featr_dsply_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_musd_featr_dsply_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_musd_featr_wo_dsply_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_musd_featr_wo_dsply_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_musd_prcut_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_musd_prcut_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_musd_prcut_only_amt AS numeric(38,10))\",\n      \"columnName\": \"sales_musd_prcut_only_amt\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mu_any_prmtn_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_mu_any_prmtn_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mu_dsply_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_mu_dsply_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mu_dsply_wo_featr_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_mu_dsply_wo_featr_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mu_featr_dsply_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_mu_featr_dsply_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mu_featr_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_mu_featr_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mu_featr_wo_dsply_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_mu_featr_wo_dsply_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mu_prcut_only_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_mu_prcut_only_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mu_prcut_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_mu_prcut_qty\"\n    },\n    {\n      \"transformation\": \"CAST(sales_mu_qty AS numeric(38,10))\",\n      \"columnName\": \"sales_mu_qty\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_tp_wk_fct_stg\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnExpressionTransformation",
      "overridableIndicator": false
    },
    {
      "operationName": "[CS] MM_TP_WK_FCT",
      "predecessorName": "[CET] CAST MEASURES AS DECIMAL",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"manualSchema\": \"true\",\n  \"transformations\": [\n    {\n\t  \"columnName\": \t \"run_id\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"srce_sys_id\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"cntrt_id\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"prod_prttn_code\",\n      \"columnType\": \t \"string\",\n      \"columnPrecision\": \"\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"fact_type_code\",\n      \"columnType\": \t \"string\",\n      \"columnPrecision\": \"\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"mm_time_perd_end_date\",\n      \"columnType\": \t \"string\",\n      \"columnPrecision\": \"\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"mkt_skid\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"prod_skid\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"time_perd_id\",\n      \"columnType\": \t \"string\",\n      \"columnPrecision\": \"\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"iso_crncy_code\",\n      \"columnType\": \t \"string\",\n      \"columnPrecision\": \"\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"rcd_orign_code\",\n      \"columnType\": \t \"string\",\n      \"columnPrecision\": \"\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mu_non_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mu_any_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mu_prcut_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mu_featr_dsply_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mu_featr_wo_dsply_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mu_dsply_wo_featr_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_non_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_any_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_featr_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_dsply_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_prcut_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_prcut_only_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_prcut_10_20_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_prcut_20_30_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_prcut_30_40_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_prcut_40_more_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_featr_dsply_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_featr_wo_dsply_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_dsply_wo_featr_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_bnspk_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mpu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mpu_non_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mpu_any_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mpu_featr_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mpu_prcut_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mpack_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_prcut_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_prcut_only_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_featr_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_featr_wo_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_dsply_wo_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_qlty_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_bnspk_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_musd_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_musd_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_musd_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_musd_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_musd_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_musd_prcut_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_musd_prcut_only_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_musd_featr_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_musd_featr_wo_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_musd_dsply_wo_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_musd_qlty_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_musd_bnspk_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mcus_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mcus_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mcus_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mcus_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mcus_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mcus_prcut_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mcus_prcut_only_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mcus_featr_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mcus_featr_wo_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mcus_dsply_wo_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mcus_qlty_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mcus_bnspk_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_meur_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_meur_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_meur_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_meur_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_meur_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_meur_prcut_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_meur_prcut_only_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_meur_featr_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_meur_featr_wo_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_meur_dsply_wo_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_meur_qlty_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_meur_bnspk_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_per_dspt_mu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_per_dspt_msu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_per_dspt_mlc_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_per_dspt_musd_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_per_dspt_mcus_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_per_dspt_meur_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_per_lngth_msu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_per_lngth_mlc_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_per_lngth_musd_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_per_lngth_mcus_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_per_lngth_meur_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"purch_msu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"stock_mu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"stock_msu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"stock_per_dspt_msu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"frwrd_stock_mu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"frwrd_stock_msu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"frwrd_stock_per_dspt_msu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mu_non_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mu_any_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_msu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_msu_non_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_msu_any_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_msu_featr_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_msu_dsply_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_msu_prcut_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_msu_prcut_only_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_msu_featr_dsply_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mpu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mpu_non_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mpu_any_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mlc_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mlc_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mlc_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_musd_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_musd_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_musd_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mcus_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mcus_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mcus_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_meur_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_meur_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_meur_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"num_sku_u_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_num_sku_u_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sku_per_dspt_u_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"shelf_lngth_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"shelf_sellg_lngth_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"prmtn_itsty_su_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"numrc_dist_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"numrc_dist_any_prmtn_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"numrc_dist_hndlg_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"numrc_dist_sellg_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"numrc_dist_sellg_4_wk_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"numrc_dist_purch_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"numrc_dist_stock_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"numrc_dist_oos_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"numrc_dist_oos_hndlg_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_any_prmtn_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_featr_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_dsply_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_prcut_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_prcut_only_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_prcut_10_20_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_prcut_20_30_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_prcut_30_40_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_prcut_40_more_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_featr_dsply_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_featr_prcut_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_dsply_prcut_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_featr_wo_dsply_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_dsply_wo_featr_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_bnspk_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_coupn_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_gift_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_comm_store_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_comm_std_pack_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_other_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_hndlg_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_sellg_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_sellg_su_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_sellg_lc_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_sellg_4_wk_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_purch_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_stock_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_oos_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"tdp_u_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"tdp_u_any_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"tdp_u_featr_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"tdp_u_dsply_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"tdp_u_prcut_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"tdp_u_prcut_only_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"tdp_u_featr_dsply_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"tdp_u_featr_wo_dsply_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"tdp_u_dsply_wo_featr_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"dist_effcy_u_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"num_store_unvrs_u_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"num_store_unvrs_sellg_u_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_lc_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_lc_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_lc_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_usd_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_usd_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_usd_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_cus_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_cus_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_cus_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_eur_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_eur_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_eur_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_lc_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_lc_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_lc_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_usd_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_usd_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_usd_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_cus_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_cus_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_cus_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_eur_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_eur_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_eur_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_p_lc_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_p_lc_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_p_lc_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_p_usd_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_p_usd_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_p_usd_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_p_cus_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_p_cus_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_p_cus_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_p_eur_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_p_eur_non_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_p_eur_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_u_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_hndlg_u_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_su_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_hndlg_su_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_su_non_prmtn_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_su_any_prmtn_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_lc_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_hndlg_lc_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_lc_non_prmtn_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_lc_any_prmtn_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_of_sku_u_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_of_sku_su_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_of_shelf_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"acct_share_u_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"acct_share_u_any_prmtn_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"acct_share_su_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"acct_share_su_any_prmtn_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"acct_share_pu_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"acct_share_pu_any_prmtn_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"acct_share_lc_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"acct_share_lc_any_prmtn_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"exchg_rate_usd_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"exchg_rate_cus_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"exchg_rate_eur_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_efeat_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_cnprc_mlc_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_cnprc_mlc_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_cnprc_mlc_efeat_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_efprc_mlc_efeat_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_cnprc_musd_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_cnprc_musd_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_cnprc_musd_efeat_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_efprc_musd_efeat_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_cnprc_mcus_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_cnprc_mcus_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_cnprc_mcus_efeat_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_efprc_mcus_efeat_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_cnprc_meur_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_cnprc_meur_any_prmtn_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_cnprc_meur_efeat_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_efprc_meur_efeat_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_musd_qlty_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_qlty_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_qlty_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mu_qlty_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"tdp_u_qlty_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"disc_depth_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"prmtn_itsty_mlc_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_invst_prcut_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_prcut_durtn_wk_cnt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mu_dsply_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mu_featr_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"tdp_u_non_prmtn_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"incrm_mlc_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"incrm_msu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"incrm_musd_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"incrm_mu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"numrc_dist_dsply_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"numrc_dist_featr_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"num_unvrs_sellg_wk_cnt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_nrmlz_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_msu_nrmlz_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mu_nrmlz_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_su_dsply_wo_featr_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_su_featr_dsply_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_su_featr_wo_dsply_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"categ_share_su_prcut_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_lc_dsply_wo_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_lc_featr_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_lc_featr_wo_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_lc_prcut_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_usd_dsply_wo_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_usd_featr_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_usd_featr_wo_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_su_usd_prcut_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_lc_dsply_wo_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_lc_featr_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_lc_featr_wo_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_lc_prcut_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_usd_dsply_wo_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_usd_featr_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_usd_featr_wo_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"price_per_u_usd_prcut_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"tdp_sellg_4_wk_u_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mu_prcut_only_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"rsrv_stock_msu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"rsrv_stock_mu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mlc_dsply_wo_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mlc_featr_wo_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_musd_dsply_wo_featr_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_musd_featr_wo_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mu_dsply_wo_featr_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_mu_featr_wo_dsply_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_est_mkt_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"WGT_DIST_SELLG_4_WK_DSPLY_WO_FEATR_PCT\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"WGT_DIST_SELLG_4_WK_FEATR_DSPLY_PCT\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"WGT_DIST_SELLG_4_WK_FEATR_WO_DSPLY_PCT\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"BASLN_MLC_FEATR_DSPLY_AMT\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"basln_musd_featr_dsply_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"BASLN_MU_FEATR_DSPLY_QTY\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"numrc_dist_sellg_3_mth_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"wgt_dist_sellg_3_mth_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"sales_mlc_hybrd_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"numrc_dist_other_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"purch_mlc_amt\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"purch_mu_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"disc_depth_dsply_pct\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"tdp_u_free_qty\",\n      \"columnType\": \t \"numeric\",\n      \"columnPrecision\": \"38,10\"\n    },\n    {                     \n\t  \"columnName\": \t \"part_srce_sys_id\",\n      \"columnType\": \t \"integer\",\n      \"columnPrecision\": \"\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"part_cntrt_id\",\n      \"columnType\": \t \"integer\",\n      \"columnPrecision\": \"\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"part_prod_prttn_code\",\n      \"columnType\": \t \"string\",\n      \"columnPrecision\": \"\"\n    },                    \n\t{                     \n\t  \"columnName\": \t \"part_mm_time_perd_end_date\",\n      \"columnType\": \t \"date\",\n      \"columnPrecision\": \"\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_schema\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "CreateSchema",
      "overridableIndicator": false
    },
    {
      "operationName": "[GEN] COLUMN COMPLEMENTER",
      "predecessorName": "[CS] MM_TP_WK_FCT",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\n\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\n\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\ndf_inp = dict_all_dfs['df_tp_wk_fct_stg'][\\\"df_object\\\"]\\ndf_ref = dict_all_dfs['df_mm_tp_wk_fct_schema'][\\\"df_object\\\"]\\n\\nfrom pyspark.sql.functions import col\\n\\ninp_cols = df_inp.columns\\nref_cols = df_ref.columns\\n\\nfrom pyspark.sql.functions import lit, col\\n\\nadd_cols = list(set(ref_cols)-set(inp_cols))\\n\\nfor i in add_cols:\\n  df_inp = df_inp.withColumn(i,lit(None))\\n\\ndf_inp = df_inp.select(*ref_cols)\\ncols = df_inp.columns\\n\\nfor j in cols:\\n  df_inp = df_inp.withColumn(j, col(j).cast(dict(df_ref.dtypes)[j]))\\n  \\ndf_inp = df_inp.withColumn('part_srce_sys_id', col('srce_sys_id')).withColumn('part_cntrt_id', col('cntrt_id')).withColumn('part_prod_prttn_code', col('prod_prttn_code')).withColumn('part_mm_time_perd_end_date', col('mm_time_perd_end_date'))\\n\\ndf_output_dict['df_mm_tp_wk_fct_inp'] = df_inp\\ndict_all_dfs['df_mm_tp_wk_fct_inp'] = {\\\"df_object\\\" :df_inp}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_tp_wk_fct_stg\"\n    },\n    {\n      \"name\": \"df_mm_tp_wk_fct_schema\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_inp\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[GEN] - Updated Latest Data date",
      "predecessorName": "[GEN] COLUMN COMPLEMENTER",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\nimport pyspark\\nfrom pyspark.sql.types import *\\nfrom pyspark.sql import Window, functions as fn\\nfrom pyspark.sql.functions import *\\n\\nref_db_url = dbutils.secrets.get('tp_dpf2cdl', 'refDBjdbcURL')\\nrefDBname = dbutils.secrets.get('tp_dpf2cdl', 'refDBname')\\nrefDBuser = dbutils.secrets.get('tp_dpf2cdl', 'refDBuser')\\nrefDBpwd = dbutils.secrets.get('tp_dpf2cdl', 'refDBpwd')\\n\\nPROCESS_RUN_KEY = <<PROCESS_RUN_KEY>>\\nCNTRT_ID = <<CNTRT_ID>>\\n\\ndf_fct_pre_promo_vw = dict_all_dfs['df_mm_tp_wk_fct_inp'][\\\"df_object\\\"]\\n\\n\\ndf_fct_pre_promo_vw = df_fct_pre_promo_vw.select(max(\\\"mm_time_perd_end_date\\\"))\\n\\ndf_fct_pre_promo_vw = df_fct_pre_promo_vw.withColumnRenamed(\\\"max(mm_time_perd_end_date)\\\", \\\"latest_time_perd_end_date\\\")\\n\\ndf_fct_date = df_fct_pre_promo_vw.withColumn('run_id',lit(PROCESS_RUN_KEY)).withColumn('cntrt_id',lit(CNTRT_ID)).withColumn('dlvry_id',lit(PROCESS_RUN_KEY))\\n\\n\\njdbcDF2 = df_fct_date\\njdbcDF2.write.format(\\\"jdbc\\\").option(\\\"url\\\", f\\\"{ref_db_url}/{refDBname}\\\").option(\\\"dbtable\\\", \\\"adwgp_mm.mm_dlvry_latest_date_plc\\\").option(\\\"user\\\", f\\\"{refDBuser}\\\").option(\\\"password\\\", f\\\"{refDBpwd}\\\").mode(\\\"append\\\").save()\\n\\ndf_output_dict['df_fct_date'] = df_fct_date\\ndict_all_dfs['df_fct_date'] = {\\\"df_object\\\" :df_fct_date}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_inp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_date\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "Add Retention Date and IGNR indicator",
      "predecessorName": "[GEN] - Updated Latest Data date",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf4 = dict_all_dfs['df_mm_tp_wk_fct_inp'][\\\"df_object\\\"]\\n\\n\\nfrom pyspark.sql.functions import to_date, max, min, date_sub, lit, when, col\\ndf5 = df4.withColumn('mm_time_perd_end_date', to_date('mm_time_perd_end_date', 'yyyy-MM-dd'))\\nlst_cols = df5.columns\\ndf5 = df5.select( max('mm_time_perd_end_date').alias('max_date'))\\nretention_pd = <<RETENTION_PERIOD>>*7\\n\\ndf5 = df5.withColumn('min_date', date_sub('max_date', retention_pd))\\n\\nlst_date = df5.collect()\\nmin_date = lst_date[0]['min_date']\\nmax_date = lst_date[0]['max_date']\\n\\ndf4_1 = df4.withColumn('ret_date', lit(min_date))\\ndf4_1 = df4_1.withColumn('ignr_ind', col('part_mm_time_perd_end_date')<col('ret_date'))\\ndf4_2 = df4_1.filter('ignr_ind = false').drop('ret_date', 'ignr_ind')\\n\\ndict_all_dfs['df_mm_tp_wk_fct_inp'] = {\\\"df_object\\\" :df4_2}\\ndf_output_dict['df_mm_tp_wk_fct_inp'] = df4_2\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_inp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_inp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[FIL] - filter based on retention date",
      "predecessorName": "Add Retention Date and IGNR indicator",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"expression\": \"part_mm_time_perd_end_date >= current_date-(<<RETENTION_PERIOD>>*7)\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_inp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_inp\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Filter",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] MM_TP_WK_FCT",
      "predecessorName": "[FIL] - filter based on retention date",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"saveOutputDfsToTempTable\": \"true\",\n  \"referenceDataframe\": \"df_mm_tp_wk_fct_schema\",\n  \"deleteColumns\": \"true\",\n  \"referenceColumnOrder\": \"true\",\n  \"milestone\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_tp_wk_fct_stg\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "ColumnComplementer",
      "overridableIndicator": false
    },
    {
      "operationName": "[GEN] filter wk fact",
      "predecessorName": "[CC] MM_TP_WK_FCT",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\n\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\nfrom pyspark.sql.functions import lit, col, date_sub, current_date\\n\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\ndf_mm_tp_wk_fct_inp = dict_all_dfs['df_mm_tp_wk_fct_inp'][\\\"df_object\\\"]\\n\\ndef path_exists(path):\\n  try:\\n    if len(dbutils.fs.ls(path)) > 0:\\n      return True\\n  except:\\n    return False\\n\\nf_path = '/mnt/<<PUBLISH_PATH>>/MM_TP_WK_FCT/part_srce_sys_id=<<SRCE_SYS_ID>>/part_cntrt_id=<<CNTRT_ID>>/'\\n\\n\\n\\nif (path_exists(f_path)):\\n  df_wk_fct = spark.read.format('parquet').option(\\\"ignoreCorruptFiles\\\", True).option('ignoreMissingFiles', True).load(f'{f_path}')\\n  df_wk_fct = df_wk_fct.filter(col(part_mm_time_perd_end_date) <= date_sub(current_date(),(<<RETENTION_PERIOD>>*7)))\\n  df_mm_tp_wk_fct_inp = df_mm_tp_wk_fct_inp.unionByName(df_wk_fct,True)\\nelse:\\n  df_mm_tp_wk_fct_inp\\n\\ndf_output_dict['df_mm_tp_wk_fct_inp'] = df_mm_tp_wk_fct_inp\\ndict_all_dfs['df_mm_tp_wk_fct_inp'] = {\\\"df_object\\\" :df_mm_tp_wk_fct_inp}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_inp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_inp\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "Update Delivery details - Latest date update",
      "predecessorName": "[GEN] filter wk fact",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\nimport pyspark\\nfrom pyspark.sql.types import *\\nfrom pyspark.sql import Window, functions as fn\\nfrom pyspark.sql.functions import *\\n\\nref_db_url = dbutils.secrets.get('tp_dpf2cdl', 'refDBjdbcURL')\\nrefDBname = dbutils.secrets.get('tp_dpf2cdl', 'refDBname')\\nrefDBuser = dbutils.secrets.get('tp_dpf2cdl', 'refDBuser')\\nrefDBpwd = dbutils.secrets.get('tp_dpf2cdl', 'refDBpwd')\\n\\nPROCESS_RUN_KEY = <<PROCESS_RUN_KEY>>\\nCNTRT_ID = <<CNTRT_ID>>\\n\\ndf_fct_pre_promo_vw = dict_all_dfs['df_mm_tp_wk_fct1'][\\\"df_object\\\"]\\n\\n\\ndf_fct_pre_promo_vw = df_fct_pre_promo_vw.select(max(\\\"mm_time_perd_end_date\\\"))\\n\\ndf_fct_pre_promo_vw = df_fct_pre_promo_vw.withColumnRenamed(\\\"max(mm_time_perd_end_date)\\\", \\\"latest_time_perd_end_date\\\")\\n\\ndf_fct_date = df_fct_pre_promo_vw.withColumn('run_id',lit(PROCESS_RUN_KEY)).withColumn('cntrt_id',lit(CNTRT_ID)).withColumn('dlvry_id',lit(PROCESS_RUN_KEY))\\n\\n\\njdbcDF2 = df_fct_date\\njdbcDF2.write.format(\\\"jdbc\\\").option(\\\"url\\\", f\\\"{ref_db_url}/{refDBname}\\\").option(\\\"dbtable\\\", \\\"adwgp_mm.mm_dlvry_latest_date_plc\\\").option(\\\"user\\\", f\\\"{refDBuser}\\\").option(\\\"password\\\", f\\\"{refDBpwd}\\\").mode(\\\"append\\\").save()\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct1\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct1\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "Read fact schema",
      "predecessorName": "Update Delivery details - Latest date update",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\n\\nref_db_url = dbutils.secrets.get('tp_dpf2cdl', 'refDBjdbcURL')\\nrefDBname = dbutils.secrets.get('tp_dpf2cdl', 'refDBname')\\nrefDBuser = dbutils.secrets.get('tp_dpf2cdl', 'refDBuser')\\nrefDBpwd = dbutils.secrets.get('tp_dpf2cdl', 'refDBpwd')\\n\\ndf_fct_schema = spark.read.format(\\\"jdbc\\\").option(\\\"driver\\\", \\\"org.postgresql.Driver\\\").option(\\\"url\\\", f\\\"{ref_db_url}/{refDBname}\\\").option(\\\"dbtable\\\", \\\"adwgp_mm.mm_tp_fct_schema\\\").option(\\\"user\\\", f\\\"{refDBuser}\\\").option(\\\"password\\\", f\\\"{refDBpwd}\\\").option(\\\"ssl\\\", True).option(\\\"sslmode\\\", \\\"require\\\").option(\\\"sslfactory\\\",\\\"org.postgresql.ssl.NonValidatingFactory\\\").load()\\n    \\ndf_output_dict['df_fct_schema'] = df_fct_schema\\ndict_all_dfs['df_fct_schema'] = {\\\"df_object\\\" :df_fct_schema}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_inp\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_fct_schema\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] - Complement and typecast the columns",
      "predecessorName": "Read fact schema",
      "jsonSpecification": "{\n  \"active\": \"true\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf_mm_tp_wk_fct_inp = dict_all_dfs['df_mm_tp_wk_fct_inp'][\\\"df_object\\\"]\\ndf_fct_schema = dict_all_dfs['df_fct_schema'][\\\"df_object\\\"]\\n\\nfrom pyspark.sql.functions import col\\n\\nlkp_cols = df_mm_tp_wk_fct_inp.columns\\nsdim_cols = df_fct_schema.columns\\n\\nfrom pyspark.sql.functions import lit\\nadd_cols = list(set(sdim_cols)-set(lkp_cols))\\nfor i in add_cols:\\n  df_mm_tp_wk_fct_inp = df_mm_tp_wk_fct_inp.withColumn(i,lit(None).cast('string'))\\n\\ndf_mm_tp_wk_fct_inp = df_mm_tp_wk_fct_inp.select(*sdim_cols)\\ncols = df_mm_tp_wk_fct_inp.columns\\n\\nfor j in cols:\\n  df_mm_tp_wk_fct_inp = df_mm_tp_wk_fct_inp.withColumn(j, col(j).cast(dict(df_fct_schema.dtypes)[j]))\\n\\ndict_all_dfs['df_mm_tp_wk_fct'] = {\\\"df_object\\\" :df_mm_tp_wk_fct_inp}\\ndf_output_dict['df_mm_tp_wk_fct'] = df_mm_tp_wk_fct_inp\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_inp\"\n    },\n    {\n      \"name\": \"df_fct_schema\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[GEN] REF FCT DATA - RETENTION DATE FILTER",
      "predecessorName": "[CC] - Complement and typecast the columns",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"separateSparkSession\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\n\\ndf_input = df_input_dict['df_input']\\ndf_mm_tp_wk_fct_ref = df_input_dict['df_mm_tp_wk_fct_ref']\\n\\nfrom pyspark.sql.functions import lit\\n\\ncntrt_id = <<CNTRT_ID>>\\n\\nif len(df_mm_tp_wk_fct_ref.head(1)) != 0:\\n  df_mm_tp_wk_fct_ref = df_mm_tp_wk_fct_ref.filter('part_cntrt_id == cntrt_id')\\n  \\n  df_input.createOrReplaceTempView('input_vw')\\n  df_mm_tp_wk_fct_ref.createOrReplaceTempView('ref_vw')\\n\\n  df_temp_input = spark.sql('''\\n          select * from ref_vw ref\\n          where ref.part_mm_time_perd_end_date > (select retention_date from input_vw limit 1)\\n            and ref.part_mm_time_perd_end_date < (select min(part_mm_time_perd_end_date) from input_vw)\\n          ''')\\nelse:\\n  df_temp_input = df_input.limit(0)\\n\\n\\ndf_output_dict['df_mm_tp_wk_fct_ref'] = df_temp_input\\ndict_all_dfs['df_mm_tp_wk_fct_ref'] = {\\\"df_object\\\" :df_temp_input}\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_input\"\n    },\n    {\n      \"name\": \"df_mm_tp_wk_fct_ref\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_ref\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[CC] - Complement and typecast the REF columns",
      "predecessorName": "[GEN] REF FCT DATA - RETENTION DATE FILTER",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"separateSparkSession\": \"true\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"customCode\": \"spark = self.spark_session\\nmyLogger = self.log\\n\\nfrom IPython import get_ipython\\ndbutils = get_ipython().user_ns[\\\"dbutils\\\"]\\n\\ndf_mm_tp_wk_fct_inp = dict_all_dfs['df_mm_tp_wk_fct_ref'][\\\"df_object\\\"]\\ndf_fct_schema = dict_all_dfs['df_fct_schema'][\\\"df_object\\\"]\\n\\nfrom pyspark.sql.functions import col\\n\\nlkp_cols = df_mm_tp_wk_fct_inp.columns\\nsdim_cols = df_fct_schema.columns\\n\\nfrom pyspark.sql.functions import lit\\nadd_cols = list(set(sdim_cols)-set(lkp_cols))\\nfor i in add_cols:\\n  df_mm_tp_wk_fct_inp = df_mm_tp_wk_fct_inp.withColumn(i,lit(None).cast('string'))\\n\\ndf_mm_tp_wk_fct_inp = df_mm_tp_wk_fct_inp.select(*sdim_cols)\\ncols = df_mm_tp_wk_fct_inp.columns\\n\\nfor j in cols:\\n  df_mm_tp_wk_fct_inp = df_mm_tp_wk_fct_inp.withColumn(j, col(j).cast(dict(df_fct_schema.dtypes)[j]))\\n\\ndict_all_dfs['df_mm_tp_wk_fct_ref'] = {\\\"df_object\\\" :df_mm_tp_wk_fct_inp}\\ndf_output_dict['df_mm_tp_wk_fct_ref'] = df_mm_tp_wk_fct_inp\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_ref\"\n    },\n    {\n      \"name\": \"df_fct_schema\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct_ref\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Generic",
      "overridableIndicator": false
    },
    {
      "operationName": "[FILTER] WK FCT DATA BELOW RETENTION DATE",
      "predecessorName": "[CC] - Complement and typecast the REF columns",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"expression\": \"part_mm_time_perd_end_date <= current_date-(<<RETENTION_PERIOD>>*7)\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct\"\n    }\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct\",\n      \"cache\": \"none\"\n    }\n  ]\n}",
      "operationVersionName": "Filter",
      "overridableIndicator": false
    },
    {
      "operationName": "[MERGE] WK FACT DATA",
      "predecessorName": "[FILTER] WK FCT DATA BELOW RETENTION DATE",
      "jsonSpecification": "{\n  \"active\": \"false\",\n  \"referenceDataframe\": \"df_mm_tp_wk_fct\",\n  \"distinct\": \"false\",\n  \"milestone\": \"false\",\n  \"saveOutputDfsToTempTable\": \"false\",\n  \"inputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct\"\n    },\n    {\n      \"name\": \"df_mm_tp_wk_fct_ref\"\n    }\n  ],\n  \"logicalKey\": [\n    \"part_mm_time_perd_end_date\",\n    \"mkt_skid\",\n    \"prod_skid\"\n  ],\n  \"outputDataframes\": [\n    {\n      \"name\": \"df_mm_tp_wk_fct\",\n      \"cache\": \"materialize\"\n    }\n  ]\n}",
      "operationVersionName": "Merger",
      "overridableIndicator": false
    }
  ],
  "graphName": "CDL_TP_USA Nielsen Fact-WK Facts"
}